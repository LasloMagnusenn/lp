{
	"id": "433b88cd13fbef54bb1fa19a84d439ac",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LP.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./IWomanSeekersNewDawn.sol\";\nimport \"./IERC20.sol\";\n\ncontract LP is Ownable {\n    IWomanSeekersNewDawn Collection;\n    IERC20 LPToken;\n\n    uint256 defEnergyAccrual = 10;\n    uint256 energyPriceInTokens = 100; // 100 токенов за одну энергию\n    uint256 defaultDamage = 100;\n\n    \n\n\n    mapping(address => Player) public players;\n    mapping(uint256 => bossSpecs) public bosses;\n\n    struct Player {\n        uint256 qtyBossDefeated;\n        uint256 energyFactor; //мультипликатор повышения энергии, по дефолту равен 1\n        uint256 energyBalance; // баланс энергии, на момент начала игры равен 0\n        uint256 amountTokensInGame; // количество токенов которыми играет юзер, учитывается только в конце\n        uint256 lastTimestampClaimedEnergy;\n        uint256[] playingTokenIds; // токен идсы которыми играет юзер\n    }\n    //  нужно ли добавить массив tokenId которыми он играет?\n\n\n\n    function getInfoPlayer(address _player) public view returns(Player memory) {\n        return players[_player];\n    }\n\n    struct bossSpecs {\n        uint256 health;\n        uint256 dodgeChance;\n        uint256 attackDamage;\n    }\n\n    struct duelInfo {\n        uint256 playersNow;\n        address[2] players; // 2 игрока\n        uint256 totalDamagePlayer0; // тотал дамаг первого игрока\n        uint256 totalDamagePlayer1; // тотал дамаг второго игрока\n    }\n\n    duelInfo[] public duels;\n\n    constructor(address _collection) {\n        Collection = IWomanSeekersNewDawn(_collection);\n        createBoss();\n        createBoss();\n        createBoss();\n        createBoss();\n\n    }\n\n    function createNewDuelRoom() public {\n\n                address[2] memory emptyPlayers;\n\n        duels.push(duelInfo(\n                0, emptyPlayers, 0,0\n\n\n\n        ));\n    }\n\n\n\n    function random(uint256 _value) public view returns (uint256) {\n        return\n            uint256(\n                keccak256(\n                    abi.encodePacked(\n                        block.timestamp,\n                        block.difficulty,\n                        blockhash(block.number - 1),\n                        msg.sender\n                    )\n                )\n            ) % _value;\n    }\n    \n    // регулирование начисления энергии в день\n    function setDefEnergyAccrual(uint256 _value) public {\n        defEnergyAccrual = _value;\n    }\n\n        // регулирования прайста токена игры в энергии\n    function setEnergyPriceInTokens(uint256 _value) public {\n        energyPriceInTokens = _value;\n    }\n\n    // дефолтный дамаг у юзера\n    function setDefaultDamage(uint256 _value) public {\n        defaultDamage = _value;\n    }\n\n\n    function isPlayerInDuelAtIndexRoom( uint256 _indexRoom) public view returns (bool) {\n    require(_indexRoom < duels.length, \"Invalid duel index\");\n    \n    duelInfo storage currentDuel = duels[_indexRoom];\n    if (currentDuel.playersNow > 0) {\n        if (currentDuel.players[0] == msg.sender || currentDuel.players[1] == msg.sender) {\n            return true;\n        }\n    }\n    \n    return false;\n}\n\n    function calculateTestDamage() public view returns(uint) {\n        return  (defaultDamage * players[msg.sender].energyFactor) * ((random(20) + 100)/100 );\n        \n        \n\n    }\n\n\n        event duelAttackLogs(address indexed  player, uint256 _indexRoom, uint256[] damages);\n\n    function doAttackInDuel(uint256 _indexRoom) public {\n\n        \n\n                duelInfo storage currentDuel = duels[_indexRoom];\n\n        require(isPlayerInDuelAtIndexRoom(_indexRoom), \"you're not in room\");               \n        // проверить что юзер находится в этой игре\n        // рассчитать урон за удар\n        // отредактировать механику рандома\n\n\n\n        uint256[] memory damages = new uint256[](3);\n\n        uint totalDamage;\n\n        for (uint i = 0; i <= 2; i ++) \n        {\n                    uint damage = random(10) * defaultDamage * players[msg.sender].energyFactor;\n                damages[i] = damage;\n            totalDamage += damage;\n        }\n\n\n\n\n\n\n\n        if (currentDuel.players[0] == msg.sender) {\n            \n            currentDuel.totalDamagePlayer0 += totalDamage; // добавляем игроку 0\n            require(currentDuel.totalDamagePlayer0 == 0, \"you're already attacked in duel\");\n        \n        } else {\n            currentDuel.totalDamagePlayer1 += totalDamage; // если он не первый то игроку 1\n                        require(currentDuel.totalDamagePlayer0 == 0, \"you're already attacked in duel\");\n\n        }\n\n\n        emit duelAttackLogs(msg.sender, _indexRoom, damages);\n       \n\n  \n    }\n\n\n    uint256 public duelPrice = 1000;\n\n    function findAvailableDuel() public view returns(uint256) {\n\n        for (uint i = 0; i < duels.length; i++) {\n         \n        if(duels[i].playersNow !=2) {\n            return i;\n        }\n\n        }\n\n        revert(\"could not find available duel room\");\n\n\n    }\n\n    function enterInDuel() public {\n\n        duelInfo storage currentDuel = duels[findAvailableDuel()];\n        \n\n        // если мы получили currentDuel значит дуэль рум уже точно может принять игрока\n\n\n            currentDuel.players[0] = msg.sender;\n            LPToken.transferFrom(msg.sender, address(this), duelPrice );\n\n            currentDuel.playersNow++;\n        \n\n        // перевод ставки токенов в контракт чекнуть\n\n    }\n\n    function claimDuel() public view returns (uint256) {\n        // кто должен клеймить? ( тот кто бил последним)\n\n                duelInfo storage currentDuel = duels[findAvailableDuel()];\n\n\n        uint256 winnerIndex;\n        if (currentDuel.totalDamagePlayer0 > currentDuel.totalDamagePlayer1) {\n            winnerIndex = 0;\n        } else {\n            winnerIndex = 1;\n        }\n\n        \n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n        // функция рандома дает индекс, если индекс равен 5% то\n        //повышаем мультипликатор энергии winnerIndex\n\n        // ставку токенов переводим победителю\n\n        return 1;\n    }\n\n    uint bosscounter = 1;\n\n    function createBoss() internal {\n         // Создаем нового игрока\n        bossSpecs storage newBoss = bosses[bosscounter];\n\n\n        if(bosscounter == 1) {\n        newBoss.health = 1000;\n        newBoss.dodgeChance = 25;\n        }\n      \n\n               if(bosscounter == 2) {\n        newBoss.health = 2000;\n        newBoss.dodgeChance = 30;\n        }\n\n\n           if(bosscounter == 3) {\n        newBoss.health = 3000;\n        newBoss.dodgeChance = 40;\n        }\n\n           if(bosscounter == 4) {\n        newBoss.health = 4000;\n        newBoss.dodgeChance = 50;\n        }\n        \n        bosscounter++;\n    }\n\n    function checkOwnershipOfTokenIds(uint256[] calldata _tokenIds) public view returns(bool) {\n        \n    }\n\n    function enterInGame(uint256[] calldata _tokenIds) public {\n        // Создаем нового игрока\n        Player storage Newplayer = players[msg.sender];\n\n\n        // должны проверить что юзер обладает этими токен ids\n\n        // Устанавливаем начальные значения\n        Newplayer.qtyBossDefeated = 0;\n        Newplayer.energyFactor = 1;\n        Newplayer.energyBalance = 0;\n        Newplayer.amountTokensInGame = 0;\n        Newplayer.lastTimestampClaimedEnergy = 0;\n        Newplayer.amountTokensInGame = _tokenIds.length;\n\n        // Добавляем токены, которыми играет игрок\n        for (uint256 i = 0; i < _tokenIds.length; i++) {\n            Newplayer.playingTokenIds.push(_tokenIds[i]);\n            require(!Collection.viewNotTransferable(_tokenIds[i]), \"This token already in game\");\n            Collection.setNotTransferable(_tokenIds[i], true);\n        }\n    }\n\n    function leaveGame() public {\n        //разморозить токен идс и удалить ячейку маппинга\n\n        for (\n            uint256 i = 0;\n            i < players[msg.sender].playingTokenIds.length;\n            i++\n        ) {\n            Collection.setNotTransferable(\n                players[msg.sender].playingTokenIds[i],\n                false\n            );\n            // возможно как то еще придется маркировать токен\n        }\n\n        delete players[msg.sender];\n    }\n\n    //энергия может клеймиться только раз в день, это фиксированное значение помноженное на фактор игрока\n    function claimDailyEnergy() public {\n        // проверяем что прошел более чем один день с момента прошлого клейма энергии\n\n        require(\n            block.timestamp >=\n                players[msg.sender].lastTimestampClaimedEnergy + 1 days,\n            \"try later\"\n        );\n\n        players[msg.sender].lastTimestampClaimedEnergy = block.timestamp;\n        players[msg.sender].energyBalance +=\n            defEnergyAccrual *\n            players[msg.sender].energyFactor;\n    }\n\n    function buyEnergyForTokens(uint256 _amountEnergy) public {\n        uint256 amountToPayTokens = _amountEnergy * energyPriceInTokens;\n\n        LPToken.transferFrom(msg.sender, address(this), amountToPayTokens);\n\n        players[msg.sender].energyBalance += _amountEnergy;\n\n        // добавить еще какие то проверки\n    }\n\n        event BossDefeated(address indexed  player, uint256 indexed  bossLevel, uint256[] damages);\n        \n\n\n    function fightWithBoss(uint256 _bossLevel) public  {\n\n                require(players[msg.sender].qtyBossDefeated < _bossLevel, \"you're already beaten this boss\");\n\n\n            // проверка что юзер обладает достаточным количеством энергии для начала боя с боссом\n        require(players[msg.sender].energyBalance >= bosses[_bossLevel].health, \"you don't have enough energy for this boss\");\n            uint totalDamage;\n\n            uint256[] memory damages = new uint256[](3);\n\n        for (uint i = 0; i <= 2; i ++) \n        {\n                    uint damage = random(10) * defaultDamage * players[msg.sender].energyFactor;\n                damages[i] = damage;\n            totalDamage += damage;\n        }\n\n        bosses[_bossLevel].health -= totalDamage;\n\n\n            // возвращать бул или читать ивент?\n        if(bosses[_bossLevel].health == 0) {\n            // перевести игрока на новый левел\n            players[msg.sender].qtyBossDefeated = _bossLevel;\n            emit BossDefeated(msg.sender, _bossLevel, damages);\n            \n        } else {\n          \n                    // занулить его энергию?\n                    players[msg.sender].energyBalance -= bosses[_bossLevel].attackDamage *3;\n\n        }\n\n    }\n\n    \n\n    function checkOwnershipOfTokens(uint256[] memory _tokenIds) public view returns(bool) {\n\n        for (uint i = 0; i < _tokenIds.length; i++) \n        { // tx origin or msg.sender ?\n           if(Collection.ownerOf(_tokenIds[i]) != tx.origin) {\n               return false;\n           }\n        }\n        return true;\n    }\n\n    mapping(uint256 => bool) public isTokenIdClaimed;\n\n    function isTokensClaimedTreasures(uint256[] memory _tokenIds) public view returns(bool) {\n\n\n             for (uint i = 0; i < _tokenIds.length; i++) \n        {\n           if(isTokenIdClaimed[_tokenIds[i]] ) {\n               return true;\n           }\n        }\n        return false;\n\n\n\n    }\n\n    // даем либо токены либо скидку на нфт\n    function getFinalTreasures(uint256[] memory _tokenIds) public payable  {\n        // проверить что юзер победил всех боссов\n        // функция получениярандомного индекса\n        // выплата токенов ли бо нфт\n        //\n\n        // маркировать токен как получивший выигрыш \n        require(players[msg.sender].qtyBossDefeated == 3, \"you have to defeat all bosses\");\n       require(checkOwnershipOfTokens( _tokenIds), \"you're not owner of these tokenIds\");\n       require(!isTokensClaimedTreasures( _tokenIds), \"tokens were claimed\");\n\n\n        uint totalMsgValue;\n\n        for (uint i = 0; i < _tokenIds.length; i++) {\n             isTokenIdClaimed[_tokenIds[i]] = true;\n            uint chance = random(10);\n\n        if(chance <=2) {\n            totalMsgValue += (Collection.viewNFTCost() * 20) /100;\n    \n            Collection.mintFromGame(1);\n            \n        } else {\n        LPToken.transferFrom(address(this), msg.sender, 10000);\n\n\n        }}\n\n         require(msg.value >= totalMsgValue, \"insufficient funds\");\n        \n    \n\n    }\n\n    function testMintDirectFromGame() public {\n                    Collection.mintFromGame(1);\n\n    }\n\n    // таинственный эффект есть после победы над вторым и над третьим боссом\n        // бонус есть после победы над первым вторым и третьим боссом\n\n    mapping (address => bool[5]) public RiseClaimMap;\n\n\n    // здесь arr[5] ==>   [0] and [1] - мистические эффекты по порядку // [2] [3] [4] - бонусы на карте по порядку\n\n    function claimMysticEffect(uint _orderPosition) public {\n\n            require(players[msg.sender].qtyBossDefeated >= _orderPosition, \"before you need beat necessary boss\");\n            \n                // если он хочет заклеймить первый таинственный бонус то мы проверяем\n\n                // если orderPosition = 1, то проверит что юзер еще не клеймил первый таинственный эффект\n            require(!RiseClaimMap[msg.sender][_orderPosition-1], \"you're already claimed this effect\");\n        uint chance = random(10);\n\n         if(chance <=2) {\n            players[msg.sender].energyFactor += 10;\n            \n        } else {\n        \n        players[msg.sender].energyFactor -= 10;\n\n            RiseClaimMap[msg.sender][_orderPosition-1] = true;\n    }}\n\n\n\n    \n    function claimBonus(uint _orderPosition) public {\n\n        // на бонусы идут индексы 2 3 4\n\n\n           require(players[msg.sender].qtyBossDefeated >= _orderPosition, \"before you need beat necessary boss\");\n            \n                // если он хочет заклеймить первый таинственный бонус то мы проверяем\n\n                // если orderPosition = 1, то проверит что юзер еще не клеймил первый таинственный эффект\n            require(!RiseClaimMap[msg.sender][_orderPosition-1], \"you're already claimed this bonus\");\n\n        uint chance = random(10);\n\n         if(chance <=2) {\n            players[msg.sender].energyFactor += 10;\n            \n        } else {\n        \n        players[msg.sender].energyBalance += 1000;\n        \n    }\n\n                RiseClaimMap[msg.sender][_orderPosition-1] = true;\n\n    }\n    }\n"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n}"
			},
			"contracts/IWomanSeekersNewDawn.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.4;\r\n\r\ninterface IWomanSeekersNewDawn {\r\n    function lastTokenIdTransfer() external view returns (uint);\r\n\r\n    function ownerOf(uint256 tokenId) external view returns (address);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function tokensOfOwner(\r\n        address owner\r\n    ) external view returns (uint256[] memory);\r\n\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    function mintFromGame(uint256 _mintAmount) external;\r\n\r\n    function viewNFTCost() external view returns (uint256);\r\n\r\n    function viewNotTransferable(uint256 _tokenId) external view returns (bool);\r\n\r\n    function setNotTransferable(uint256 _tokendId, bool _value) external;\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xd49070e01df31c9f39ed67f7cb2844d842b5fc4c07048156f77f1ac06956a223\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7a56689e6a846ee765a66e30a816b0fe65eba41d2f16beb5bd57a7f7daf1027\",\"dweb:/ipfs/QmduVybj3AaRyHwRRnmjxsG5jPERmFBEUH9EcXwVM5kPyC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IWomanSeekersNewDawn.sol": {
				"IWomanSeekersNewDawn": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTokenIdTransfer",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_mintAmount",
									"type": "uint256"
								}
							],
							"name": "mintFromGame",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokendId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_value",
									"type": "bool"
								}
							],
							"name": "setNotTransferable",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewNFTCost",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "viewNotTransferable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"lastTokenIdTransfer()": "c84f4568",
							"mintFromGame(uint256)": "84c395ba",
							"ownerOf(uint256)": "6352211e",
							"setNotTransferable(uint256,bool)": "fb4f8197",
							"tokensOfOwner(address)": "8462151c",
							"totalSupply()": "18160ddd",
							"viewNFTCost()": "a9113247",
							"viewNotTransferable(uint256)": "2862bb25"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTokenIdTransfer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mintAmount\",\"type\":\"uint256\"}],\"name\":\"mintFromGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokendId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setNotTransferable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewNFTCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"viewNotTransferable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IWomanSeekersNewDawn.sol\":\"IWomanSeekersNewDawn\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IWomanSeekersNewDawn.sol\":{\"keccak256\":\"0x6737fcb30d30bdf65b5a3d3d5a1a959c52fa9a5993c23b5a5a8194908c867036\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cfea922d4975068063cdfc6a996de07b439f02862c479d53df4d372d393d90d\",\"dweb:/ipfs/QmcLZxCKgkPzGnasDU3JuUtrwPikC99L8WrG2fNNT73oAb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LP.sol": {
				"LP": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_collection",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "bossLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "damages",
									"type": "uint256[]"
								}
							],
							"name": "BossDefeated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_indexRoom",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "damages",
									"type": "uint256[]"
								}
							],
							"name": "duelAttackLogs",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "RiseClaimMap",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "bosses",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "health",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "dodgeChance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "attackDamage",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountEnergy",
									"type": "uint256"
								}
							],
							"name": "buyEnergyForTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calculateTestDamage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "checkOwnershipOfTokenIds",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "checkOwnershipOfTokens",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_orderPosition",
									"type": "uint256"
								}
							],
							"name": "claimBonus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimDailyEnergy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimDuel",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_orderPosition",
									"type": "uint256"
								}
							],
							"name": "claimMysticEffect",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "createNewDuelRoom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_indexRoom",
									"type": "uint256"
								}
							],
							"name": "doAttackInDuel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "duelPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "duels",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "playersNow",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalDamagePlayer0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalDamagePlayer1",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "enterInDuel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "enterInGame",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bossLevel",
									"type": "uint256"
								}
							],
							"name": "fightWithBoss",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "findAvailableDuel",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "getFinalTreasures",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_player",
									"type": "address"
								}
							],
							"name": "getInfoPlayer",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "qtyBossDefeated",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "energyFactor",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "energyBalance",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountTokensInGame",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lastTimestampClaimedEnergy",
											"type": "uint256"
										},
										{
											"internalType": "uint256[]",
											"name": "playingTokenIds",
											"type": "uint256[]"
										}
									],
									"internalType": "struct LP.Player",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_indexRoom",
									"type": "uint256"
								}
							],
							"name": "isPlayerInDuelAtIndexRoom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "isTokenIdClaimed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "isTokensClaimedTreasures",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "leaveGame",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "players",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "qtyBossDefeated",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "energyFactor",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "energyBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokensInGame",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastTimestampClaimedEnergy",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "random",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "setDefEnergyAccrual",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "setDefaultDamage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "setEnergyPriceInTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "testMintDirectFromGame",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LP.sol\":172:16025  contract LP is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LP.sol\":286:288  10 */\n  0x0a\n    /* \"contracts/LP.sol\":259:288  uint256 defEnergyAccrual = 10 */\n  0x03\n  sstore\n    /* \"contracts/LP.sol\":324:327  100 */\n  0x64\n    /* \"contracts/LP.sol\":294:327  uint256 energyPriceInTokens = 100 */\n  0x04\n  sstore\n    /* \"contracts/LP.sol\":408:411  100 */\n  0x64\n    /* \"contracts/LP.sol\":384:411  uint256 defaultDamage = 100 */\n  0x05\n  sstore\n    /* \"contracts/LP.sol\":5165:5169  1000 */\n  0x03e8\n    /* \"contracts/LP.sol\":5138:5169  uint256 public duelPrice = 1000 */\n  0x09\n  sstore\n    /* \"contracts/LP.sol\":6806:6807  1 */\n  0x01\n    /* \"contracts/LP.sol\":6787:6807  uint bosscounter = 1 */\n  0x0a\n  sstore\n    /* \"contracts/LP.sol\":1778:1963  constructor(address _collection) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"contracts/LP.sol\":1821:1831  Collection */\n  0x01\n    /* \"contracts/LP.sol\":1821:1867  Collection = IWomanSeekersNewDawn(_collection) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/LP.sol\":1877:1889  createBoss() */\n  tag_12\n    /* \"contracts/LP.sol\":1877:1887  createBoss */\n  tag_13\n    /* \"contracts/LP.sol\":1877:1889  createBoss() */\n  jump\t// in\ntag_12:\n    /* \"contracts/LP.sol\":1899:1911  createBoss() */\n  tag_14\n    /* \"contracts/LP.sol\":1899:1909  createBoss */\n  tag_13\n    /* \"contracts/LP.sol\":1899:1911  createBoss() */\n  jump\t// in\ntag_14:\n    /* \"contracts/LP.sol\":1921:1933  createBoss() */\n  tag_15\n    /* \"contracts/LP.sol\":1921:1931  createBoss */\n  tag_13\n    /* \"contracts/LP.sol\":1921:1933  createBoss() */\n  jump\t// in\ntag_15:\n    /* \"contracts/LP.sol\":1943:1955  createBoss() */\n  tag_16\n    /* \"contracts/LP.sol\":1943:1953  createBoss */\n  tag_13\n    /* \"contracts/LP.sol\":1943:1955  createBoss() */\n  jump\t// in\ntag_16:\n    /* \"contracts/LP.sol\":1778:1963  constructor(address _collection) {... */\n  pop\n    /* \"contracts/LP.sol\":172:16025  contract LP is Ownable {... */\n  jump(tag_27)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/LP.sol\":6814:7444  function createBoss() internal {... */\ntag_13:\n    /* \"contracts/LP.sol\":6943:6954  bosscounter */\n  sload(0x0a)\n    /* \"contracts/LP.sol\":6908:6933  bossSpecs storage newBoss */\n  0x00\n    /* \"contracts/LP.sol\":6936:6955  bosses[bosscounter] */\n  dup2\n  dup2\n  mstore\n    /* \"contracts/LP.sol\":6936:6942  bosses */\n  0x07\n    /* \"contracts/LP.sol\":6936:6955  bosses[bosscounter] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  swap1\n    /* \"contracts/LP.sol\":6985:6986  1 */\n  0x01\n    /* \"contracts/LP.sol\":6970:6986  bosscounter == 1 */\n  sub\n    /* \"contracts/LP.sol\":6967:7064  if(bosscounter == 1) {... */\n  tag_21\n  jumpi\n    /* \"contracts/LP.sol\":7015:7019  1000 */\n  0x03e8\n    /* \"contracts/LP.sol\":6998:7019  newBoss.health = 1000 */\n  dup2\n  sstore\n    /* \"contracts/LP.sol\":7051:7053  25 */\n  0x19\n    /* \"contracts/LP.sol\":7029:7048  newBoss.dodgeChance */\n  0x01\n  dup3\n  add\n    /* \"contracts/LP.sol\":7029:7053  newBoss.dodgeChance = 25 */\n  sstore\n    /* \"contracts/LP.sol\":6967:7064  if(bosscounter == 1) {... */\ntag_21:\n    /* \"contracts/LP.sol\":7091:7102  bosscounter */\n  sload(0x0a)\n    /* \"contracts/LP.sol\":7106:7107  2 */\n  0x02\n    /* \"contracts/LP.sol\":7091:7107  bosscounter == 2 */\n  sub\n    /* \"contracts/LP.sol\":7088:7185  if(bosscounter == 2) {... */\n  tag_22\n  jumpi\n    /* \"contracts/LP.sol\":7136:7140  2000 */\n  0x07d0\n    /* \"contracts/LP.sol\":7119:7140  newBoss.health = 2000 */\n  dup2\n  sstore\n    /* \"contracts/LP.sol\":7172:7174  30 */\n  0x1e\n    /* \"contracts/LP.sol\":7150:7169  newBoss.dodgeChance */\n  0x01\n  dup3\n  add\n    /* \"contracts/LP.sol\":7150:7174  newBoss.dodgeChance = 30 */\n  sstore\n    /* \"contracts/LP.sol\":7088:7185  if(bosscounter == 2) {... */\ntag_22:\n    /* \"contracts/LP.sol\":7202:7213  bosscounter */\n  sload(0x0a)\n    /* \"contracts/LP.sol\":7217:7218  3 */\n  0x03\n    /* \"contracts/LP.sol\":7202:7218  bosscounter == 3 */\n  sub\n    /* \"contracts/LP.sol\":7199:7296  if(bosscounter == 3) {... */\n  tag_23\n  jumpi\n    /* \"contracts/LP.sol\":7247:7251  3000 */\n  0x0bb8\n    /* \"contracts/LP.sol\":7230:7251  newBoss.health = 3000 */\n  dup2\n  sstore\n    /* \"contracts/LP.sol\":7283:7285  40 */\n  0x28\n    /* \"contracts/LP.sol\":7261:7280  newBoss.dodgeChance */\n  0x01\n  dup3\n  add\n    /* \"contracts/LP.sol\":7261:7285  newBoss.dodgeChance = 40 */\n  sstore\n    /* \"contracts/LP.sol\":7199:7296  if(bosscounter == 3) {... */\ntag_23:\n    /* \"contracts/LP.sol\":7312:7323  bosscounter */\n  sload(0x0a)\n    /* \"contracts/LP.sol\":7327:7328  4 */\n  0x04\n    /* \"contracts/LP.sol\":7312:7328  bosscounter == 4 */\n  sub\n    /* \"contracts/LP.sol\":7309:7406  if(bosscounter == 4) {... */\n  tag_24\n  jumpi\n    /* \"contracts/LP.sol\":7357:7361  4000 */\n  0x0fa0\n    /* \"contracts/LP.sol\":7340:7361  newBoss.health = 4000 */\n  dup2\n  sstore\n    /* \"contracts/LP.sol\":7393:7395  50 */\n  0x32\n    /* \"contracts/LP.sol\":7371:7390  newBoss.dodgeChance */\n  0x01\n  dup3\n  add\n    /* \"contracts/LP.sol\":7371:7395  newBoss.dodgeChance = 50 */\n  sstore\n    /* \"contracts/LP.sol\":7309:7406  if(bosscounter == 4) {... */\ntag_24:\n    /* \"contracts/LP.sol\":7424:7435  bosscounter */\n  0x0a\n    /* \"contracts/LP.sol\":7424:7437  bosscounter++ */\n  dup1\n  sload\n  swap1\n    /* \"contracts/LP.sol\":7424:7435  bosscounter */\n  0x00\n    /* \"contracts/LP.sol\":7424:7437  bosscounter++ */\n  tag_25\n  dup4\n  tag_26\n  jump\t// in\ntag_25:\n  swap2\n  swap1\n  pop\n  sstore\n  pop\n    /* \"contracts/LP.sol\":6845:7444  {... */\n  pop\n    /* \"contracts/LP.sol\":6814:7444  function createBoss() internal {... */\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_29:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_30:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:541   */\ntag_26:\n    /* \"#utility.yul\":348:351   */\n  0x00\n    /* \"#utility.yul\":369:386   */\n  0x01\n  dup3\n  add\n    /* \"#utility.yul\":366:506   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":428:438   */\n  0x4e487b71\n    /* \"#utility.yul\":423:426   */\n  0xe0\n    /* \"#utility.yul\":419:439   */\n  shl\n    /* \"#utility.yul\":416:417   */\n  0x00\n    /* \"#utility.yul\":409:440   */\n  mstore\n    /* \"#utility.yul\":463:467   */\n  0x11\n    /* \"#utility.yul\":460:461   */\n  0x04\n    /* \"#utility.yul\":453:468   */\n  mstore\n    /* \"#utility.yul\":491:495   */\n  0x24\n    /* \"#utility.yul\":488:489   */\n  0x00\n    /* \"#utility.yul\":481:496   */\n  revert\n    /* \"#utility.yul\":366:506   */\ntag_32:\n  pop\n    /* \"#utility.yul\":533:534   */\n  0x01\n    /* \"#utility.yul\":522:535   */\n  add\n  swap1\n    /* \"#utility.yul\":309:541   */\n  jump\t// out\ntag_27:\n    /* \"contracts/LP.sol\":172:16025  contract LP is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LP.sol\":172:16025  contract LP is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x859a62d0\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xc724cfd3\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xdd6ffd37\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xdd6ffd37\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xe2eb41ff\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xe6f4cab2\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xfcefb2b6\n      eq\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0xc724cfd3\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xc9ec3950\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xd175810d\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xd9193025\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0xb863bd37\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xb863bd37\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xbece83e4\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc178d83d\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc54b9c78\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x859a62d0\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb0cd0d56\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xb1501f9c\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x45d9d0be\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x715018a6\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x7a742b2d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7aded47e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x83948115\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x45d9d0be\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5d1b3d76\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6893f296\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6b7c7264\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x2aa04a66\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x2aa04a66\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2b56c1dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2f15911d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39850c6b\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x127226cc\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x204597e0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x224d54b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x271c52ba\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LP.sol\":3093:3494  function isPlayerInDuelAtIndexRoom( uint256 _indexRoom) public view returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":364:378   */\n      swap1\n      iszero\n        /* \"#utility.yul\":357:379   */\n      iszero\n        /* \"#utility.yul\":339:380   */\n      dup2\n      mstore\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":312:330   */\n      add\n        /* \"contracts/LP.sol\":3093:3494  function isPlayerInDuelAtIndexRoom( uint256 _indexRoom) public view returns (bool) {... */\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LP.sol\":472:515  mapping(uint256 => bossSpecs) public bosses */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_51:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      dup4\n      jump\n    tag_50:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":593:618   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":649:651   */\n      0x20\n        /* \"#utility.yul\":634:652   */\n      dup5\n      add\n        /* \"#utility.yul\":627:661   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":677:695   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":670:704   */\n      mstore\n        /* \"#utility.yul\":581:583   */\n      0x60\n        /* \"#utility.yul\":566:584   */\n      add\n        /* \"contracts/LP.sol\":472:515  mapping(uint256 => bossSpecs) public bosses */\n      tag_47\n        /* \"#utility.yul\":391:710   */\n      jump\n        /* \"contracts/LP.sol\":1969:2143  function createNewDuelRoom() public {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/LP.sol\":2998:3086  function setDefaultDamage(uint256 _value) public {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_56\n      tag_60\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_60:\n        /* \"contracts/LP.sol\":3057:3070  defaultDamage */\n      0x05\n        /* \"contracts/LP.sol\":3057:3079  defaultDamage = _value */\n      sstore\n        /* \"contracts/LP.sol\":2998:3086  function setDefaultDamage(uint256 _value) public {... */\n      jump\n        /* \"contracts/LP.sol\":10312:11679  function fightWithBoss(uint256 _bossLevel) public  {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_56\n      tag_64\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n        /* \"contracts/LP.sol\":7562:8547  function enterInGame(uint256[] calldata _tokenIds) public {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_56\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"contracts/LP.sol\":3500:3679  function calculateTestDamage() public view returns(uint) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n        /* \"#utility.yul\":1481:1506   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1469:1471   */\n      0x20\n        /* \"#utility.yul\":1454:1472   */\n      add\n        /* \"contracts/LP.sol\":3500:3679  function calculateTestDamage() public view returns(uint) {... */\n      tag_47\n        /* \"#utility.yul\":1335:1512   */\n      jump\n        /* \"contracts/LP.sol\":14197:15064  function claimMysticEffect(uint _orderPosition) public {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_56\n      tag_78\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n        /* \"contracts/LP.sol\":1233:1348  function getInfoPlayer(address _player) public view returns(Player memory) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      tag_82\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n        /* \"contracts/LP.sol\":2648:2742  function setDefEnergyAccrual(uint256 _value) public {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_56\n      tag_89\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_89:\n        /* \"contracts/LP.sol\":2710:2726  defEnergyAccrual */\n      0x03\n        /* \"contracts/LP.sol\":2710:2735  defEnergyAccrual = _value */\n      sstore\n        /* \"contracts/LP.sol\":2648:2742  function setDefEnergyAccrual(uint256 _value) public {... */\n      jump\n        /* \"contracts/LP.sol\":5446:5966  function enterInDuel() public {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_56\n      tag_93\n      jump\t// in\n        /* \"contracts/LP.sol\":13971:14019  mapping (address => bool[5]) public RiseClaimMap */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_43\n      tag_96\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_56\n      tag_102\n      jump\t// in\n        /* \"contracts/LP.sol\":2841:2941  function setEnergyPriceInTokens(uint256 _value) public {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_56\n      tag_105\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_105:\n        /* \"contracts/LP.sol\":2906:2925  energyPriceInTokens */\n      0x04\n        /* \"contracts/LP.sol\":2906:2934  energyPriceInTokens = _value */\n      sstore\n        /* \"contracts/LP.sol\":2841:2941  function setEnergyPriceInTokens(uint256 _value) public {... */\n      jump\n        /* \"contracts/LP.sol\":7450:7556  function checkOwnershipOfTokenIds(uint256[] calldata _tokenIds) public view returns(bool) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_43\n      tag_109\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_109:\n        /* \"contracts/LP.sol\":7534:7538  bool */\n      0x00\n        /* \"contracts/LP.sol\":7450:7556  function checkOwnershipOfTokenIds(uint256[] calldata _tokenIds) public view returns(bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"contracts/LP.sol\":5138:5169  uint256 public duelPrice = 1000 */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_72\n      sload(0x09)\n      dup2\n      jump\n        /* \"contracts/LP.sol\":1748:1771  duelInfo[] public duels */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_50\n      tag_118\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3402:3453   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3390:3392   */\n      0x20\n        /* \"#utility.yul\":3375:3393   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_47\n        /* \"#utility.yul\":3256:3459   */\n      jump\n        /* \"contracts/LP.sol\":3781:5131  function doAttackInDuel(uint256 _indexRoom) public {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_56\n      tag_128\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n        /* \"contracts/LP.sol\":8553:9102  function leaveGame() public {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_56\n      tag_132\n      jump\t// in\n        /* \"contracts/LP.sol\":2151:2556  function random(uint256 _value) public view returns (uint256) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_72\n      tag_135\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n        /* \"contracts/LP.sol\":11691:12013  function checkOwnershipOfTokens(uint256[] memory _tokenIds) public view returns(bool) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      tag_43\n      tag_140\n      calldatasize\n      0x04\n      tag_141\n      jump\t// in\n    tag_140:\n      tag_142\n      jump\t// in\n        /* \"contracts/LP.sol\":9850:10195  function buyEnergyForTokens(uint256 _amountEnergy) public {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_56\n      tag_146\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n        /* \"contracts/LP.sol\":5176:5440  function findAvailableDuel() public view returns(uint256) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_72\n      tag_150\n      jump\t// in\n        /* \"contracts/LP.sol\":12442:13606  function getFinalTreasures(uint256[] memory _tokenIds) public payable  {... */\n    tag_26:\n      tag_56\n      tag_153\n      calldatasize\n      0x04\n      tag_141\n      jump\t// in\n    tag_153:\n      tag_154\n      jump\t// in\n        /* \"contracts/LP.sol\":9299:9844  function claimDailyEnergy() public {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_56\n      tag_157\n      jump\t// in\n        /* \"contracts/LP.sol\":12019:12067  mapping(uint256 => bool) public isTokenIdClaimed */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      tag_43\n      tag_160\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_160:\n      mstore(0x20, 0x0b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/LP.sol\":15077:16019  function claimBonus(uint _orderPosition) public {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      tag_56\n      tag_165\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_165:\n      tag_166\n      jump\t// in\n        /* \"contracts/LP.sol\":5972:6781  function claimDuel() public view returns (uint256) {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      tag_72\n      tag_169\n      jump\t// in\n        /* \"contracts/LP.sol\":425:466  mapping(address => Player) public players */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      tag_172\n      tag_173\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_173:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      swap1\n      swap5\n      add\n      sload\n      swap3\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      dup6\n      jump\n    tag_172:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4975:5000   */\n      swap6\n      dup7\n      mstore\n        /* \"#utility.yul\":5031:5033   */\n      0x20\n        /* \"#utility.yul\":5016:5034   */\n      dup7\n      add\n        /* \"#utility.yul\":5009:5043   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":5059:5077   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":5052:5086   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5117:5119   */\n      0x60\n        /* \"#utility.yul\":5102:5120   */\n      dup4\n      add\n        /* \"#utility.yul\":5095:5129   */\n      mstore\n        /* \"#utility.yul\":5160:5163   */\n      0x80\n        /* \"#utility.yul\":5145:5164   */\n      dup3\n      add\n        /* \"#utility.yul\":5138:5173   */\n      mstore\n        /* \"#utility.yul\":4962:4965   */\n      0xa0\n        /* \"#utility.yul\":4947:4966   */\n      add\n        /* \"contracts/LP.sol\":425:466  mapping(address => Player) public players */\n      tag_47\n        /* \"#utility.yul\":4716:5179   */\n      jump\n        /* \"contracts/LP.sol\":12074:12364  function isTokensClaimedTreasures(uint256[] memory _tokenIds) public view returns(bool) {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      tag_43\n      tag_179\n      calldatasize\n      0x04\n      tag_141\n      jump\t// in\n    tag_179:\n      tag_180\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      pop\n      tag_56\n      tag_184\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_184:\n      tag_185\n      jump\t// in\n        /* \"contracts/LP.sol\":13612:13709  function testMintDirectFromGame() public {... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n      pop\n      tag_56\n      tag_188\n      jump\t// in\n        /* \"contracts/LP.sol\":3093:3494  function isPlayerInDuelAtIndexRoom( uint256 _indexRoom) public view returns (bool) {... */\n    tag_46:\n        /* \"contracts/LP.sol\":3203:3208  duels */\n      0x08\n        /* \"contracts/LP.sol\":3203:3215  duels.length */\n      sload\n        /* \"contracts/LP.sol\":3170:3174  bool */\n      0x00\n      swap1\n        /* \"contracts/LP.sol\":3190:3215  _indexRoom < duels.length */\n      dup3\n      lt\n        /* \"contracts/LP.sol\":3182:3238  require(_indexRoom < duels.length, \"Invalid duel index\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5386:5388   */\n      0x20\n        /* \"contracts/LP.sol\":3182:3238  require(_indexRoom < duels.length, \"Invalid duel index\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5368:5389   */\n      mstore\n        /* \"#utility.yul\":5425:5427   */\n      0x12\n        /* \"#utility.yul\":5405:5423   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5398:5428   */\n      mstore\n      shl(0x73, 0x092dcecc2d8d2c840c8eacad840d2dcc8caf)\n        /* \"#utility.yul\":5444:5462   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5437:5485   */\n      mstore\n        /* \"#utility.yul\":5502:5520   */\n      0x64\n      add\n        /* \"contracts/LP.sol\":3182:3238  require(_indexRoom < duels.length, \"Invalid duel index\") */\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"contracts/LP.sol\":3249:3277  duelInfo storage currentDuel */\n      0x00\n        /* \"contracts/LP.sol\":3280:3285  duels */\n      0x08\n        /* \"contracts/LP.sol\":3286:3296  _indexRoom */\n      dup4\n        /* \"contracts/LP.sol\":3280:3297  duels[_indexRoom] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_194\n      jumpi\n      tag_194\n      tag_195\n      jump\t// in\n    tag_194:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/LP.sol\":3249:3297  duelInfo storage currentDuel = duels[_indexRoom] */\n      swap1\n      pop\n        /* \"contracts/LP.sol\":3332:3333  0 */\n      0x00\n        /* \"contracts/LP.sol\":3307:3318  currentDuel */\n      dup2\n        /* \"contracts/LP.sol\":3307:3329  currentDuel.playersNow */\n      0x00\n      add\n      sload\n        /* \"contracts/LP.sol\":3307:3333  currentDuel.playersNow > 0 */\n      gt\n        /* \"contracts/LP.sol\":3303:3469  if (currentDuel.playersNow > 0) {... */\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/LP.sol\":3349:3368  currentDuel.players */\n      0x01\n      dup2\n      add\n        /* \"contracts/LP.sol\":3349:3371  currentDuel.players[0] */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/LP.sol\":3375:3385  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":3349:3385  currentDuel.players[0] == msg.sender */\n      eq\n      dup1\n        /* \"contracts/LP.sol\":3349:3425  currentDuel.players[0] == msg.sender || currentDuel.players[1] == msg.sender */\n      tag_201\n      jumpi\n      pop\n        /* \"contracts/LP.sol\":3389:3411  currentDuel.players[1] */\n      0x02\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/LP.sol\":3415:3425  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":3389:3425  currentDuel.players[1] == msg.sender */\n      eq\n        /* \"contracts/LP.sol\":3349:3425  currentDuel.players[0] == msg.sender || currentDuel.players[1] == msg.sender */\n    tag_201:\n        /* \"contracts/LP.sol\":3345:3463  if (currentDuel.players[0] == msg.sender || currentDuel.players[1] == msg.sender) {... */\n      iszero\n      tag_205\n      jumpi\n      pop\n        /* \"contracts/LP.sol\":3448:3452  true */\n      0x01\n      swap3\n        /* \"contracts/LP.sol\":3093:3494  function isPlayerInDuelAtIndexRoom( uint256 _indexRoom) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LP.sol\":3345:3463  if (currentDuel.players[0] == msg.sender || currentDuel.players[1] == msg.sender) {... */\n    tag_205:\n      pop\n        /* \"contracts/LP.sol\":3486:3491  false */\n      0x00\n      swap3\n        /* \"contracts/LP.sol\":3093:3494  function isPlayerInDuelAtIndexRoom( uint256 _indexRoom) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LP.sol\":1969:2143  function createNewDuelRoom() public {... */\n    tag_57:\n        /* \"contracts/LP.sol\":2024:2054  address[2] memory emptyPlayers */\n      tag_207\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"contracts/LP.sol\":2076:2135  duelInfo(... */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup5\n      dup2\n      mstore\n      swap3\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x60\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n        /* \"contracts/LP.sol\":2065:2070  duels */\n      0x08\n        /* \"contracts/LP.sol\":2065:2136  duels.push(duelInfo(... */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap2\n      mstore\n      dup2\n      mload\n      0x05\n      swap1\n      swap2\n      mul\n      0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3\n      dup2\n      add\n      swap2\n      dup3\n      sstore\n      swap3\n      mload\n        /* \"contracts/LP.sol\":2076:2135  duelInfo(... */\n      swap2\n      swap3\n        /* \"contracts/LP.sol\":2065:2136  duels.push(duelInfo(... */\n      swap1\n      swap2\n      tag_210\n      swap2\n      0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4\n      add\n      swap1\n      0x02\n      tag_211\n      jump\t// in\n    tag_210:\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/LP.sol\":2005:2143  {... */\n      pop\n        /* \"contracts/LP.sol\":1969:2143  function createNewDuelRoom() public {... */\n      jump\t// out\n        /* \"contracts/LP.sol\":10312:11679  function fightWithBoss(uint256 _bossLevel) public  {... */\n    tag_65:\n        /* \"contracts/LP.sol\":10398:10408  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":10390:10409  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":10390:10397  players */\n      0x06\n        /* \"contracts/LP.sol\":10390:10409  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/LP.sol\":10390:10425  players[msg.sender].qtyBossDefeated */\n      sload\n        /* \"contracts/LP.sol\":10390:10438  players[msg.sender].qtyBossDefeated < _bossLevel */\n      dup2\n      gt\n        /* \"contracts/LP.sol\":10382:10474  require(players[msg.sender].qtyBossDefeated < _bossLevel, \"you're already beaten this boss\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5865:5867   */\n      0x20\n        /* \"contracts/LP.sol\":10382:10474  require(players[msg.sender].qtyBossDefeated < _bossLevel, \"you're already beaten this boss\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5847:5868   */\n      mstore\n        /* \"#utility.yul\":5904:5906   */\n      0x1f\n        /* \"#utility.yul\":5884:5902   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5877:5907   */\n      mstore\n        /* \"#utility.yul\":5943:5976   */\n      0x796f7527726520616c72656164792062656174656e207468697320626f737300\n        /* \"#utility.yul\":5923:5941   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5916:5977   */\n      mstore\n        /* \"#utility.yul\":5994:6012   */\n      0x64\n      add\n        /* \"contracts/LP.sol\":10382:10474  require(players[msg.sender].qtyBossDefeated < _bossLevel, \"you're already beaten this boss\") */\n      tag_191\n        /* \"#utility.yul\":5663:6018   */\n      jump\n        /* \"contracts/LP.sol\":10382:10474  require(players[msg.sender].qtyBossDefeated < _bossLevel, \"you're already beaten this boss\") */\n    tag_214:\n        /* \"contracts/LP.sol\":10700:10718  bosses[_bossLevel] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":10700:10706  bosses */\n      0x07\n        /* \"contracts/LP.sol\":10700:10718  bosses[_bossLevel] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/LP.sol\":10700:10725  bosses[_bossLevel].health */\n      sload\n        /* \"contracts/LP.sol\":10671:10681  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":10663:10682  players[msg.sender] */\n      dup5\n      mstore\n        /* \"contracts/LP.sol\":10663:10670  players */\n      0x06\n        /* \"contracts/LP.sol\":10663:10682  players[msg.sender] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/LP.sol\":10663:10696  players[msg.sender].energyBalance */\n      0x02\n      add\n      sload\n        /* \"contracts/LP.sol\":10663:10725  players[msg.sender].energyBalance >= bosses[_bossLevel].health */\n      lt\n      iszero\n        /* \"contracts/LP.sol\":10655:10772  require(players[msg.sender].energyBalance >= bosses[_bossLevel].health, \"you don't have enough energy for this boss\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6225:6227   */\n      0x20\n        /* \"contracts/LP.sol\":10655:10772  require(players[msg.sender].energyBalance >= bosses[_bossLevel].health, \"you don't have enough energy for this boss\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6207:6228   */\n      mstore\n        /* \"#utility.yul\":6264:6266   */\n      0x2a\n        /* \"#utility.yul\":6244:6262   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6237:6267   */\n      mstore\n        /* \"#utility.yul\":6303:6337   */\n      0x796f7520646f6e2774206861766520656e6f75676820656e6572677920666f72\n        /* \"#utility.yul\":6283:6301   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6276:6338   */\n      mstore\n      shl(0xb0, 0x207468697320626f7373)\n        /* \"#utility.yul\":6354:6372   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6347:6387   */\n      mstore\n        /* \"#utility.yul\":6404:6423   */\n      0x84\n      add\n        /* \"contracts/LP.sol\":10655:10772  require(players[msg.sender].energyBalance >= bosses[_bossLevel].health, \"you don't have enough energy for this boss\") */\n      tag_191\n        /* \"#utility.yul\":6023:6429   */\n      jump\n        /* \"contracts/LP.sol\":10655:10772  require(players[msg.sender].energyBalance >= bosses[_bossLevel].health, \"you don't have enough energy for this boss\") */\n    tag_217:\n        /* \"contracts/LP.sol\":10844:10860  new uint256[](3) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/LP.sol\":10858:10859  3 */\n      0x03\n        /* \"contracts/LP.sol\":10844:10860  new uint256[](3) */\n      dup1\n      dup3\n      mstore\n      0x80\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/LP.sol\":10786:10802  uint totalDamage */\n      0x00\n      swap2\n      dup3\n      swap2\n        /* \"contracts/LP.sol\":10844:10860  new uint256[](3) */\n      swap1\n      0x20\n      dup3\n      add\n      0x60\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/LP.sol\":10817:10860  uint256[] memory damages = new uint256[](3) */\n      swap1\n      pop\n        /* \"contracts/LP.sol\":10876:10882  uint i */\n      0x00\n        /* \"contracts/LP.sol\":10871:11091  for (uint i = 0; i <= 2; i ++) ... */\n    tag_224:\n        /* \"contracts/LP.sol\":10893:10894  2 */\n      0x02\n        /* \"contracts/LP.sol\":10888:10889  i */\n      dup2\n        /* \"contracts/LP.sol\":10888:10894  i <= 2 */\n      gt\n        /* \"contracts/LP.sol\":10871:11091  for (uint i = 0; i <= 2; i ++) ... */\n      tag_225\n      jumpi\n        /* \"contracts/LP.sol\":10984:10994  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":10933:10944  uint damage */\n      0x00\n        /* \"contracts/LP.sol\":10976:10995  players[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":10976:10983  players */\n      0x06\n        /* \"contracts/LP.sol\":10976:10995  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/LP.sol\":10976:11008  players[msg.sender].energyFactor */\n      0x01\n      add\n      sload\n        /* \"contracts/LP.sol\":10960:10973  defaultDamage */\n      sload(0x05)\n        /* \"contracts/LP.sol\":10947:10957  random(10) */\n      tag_227\n        /* \"contracts/LP.sol\":10954:10956  10 */\n      0x0a\n        /* \"contracts/LP.sol\":10947:10953  random */\n      tag_136\n        /* \"contracts/LP.sol\":10947:10957  random(10) */\n      jump\t// in\n    tag_227:\n        /* \"contracts/LP.sol\":10947:10973  random(10) * defaultDamage */\n      tag_228\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"contracts/LP.sol\":10947:11008  random(10) * defaultDamage * players[msg.sender].energyFactor */\n      tag_230\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_230:\n        /* \"contracts/LP.sol\":10933:11008  uint damage = random(10) * defaultDamage * players[msg.sender].energyFactor */\n      swap1\n      pop\n        /* \"contracts/LP.sol\":11039:11045  damage */\n      dup1\n        /* \"contracts/LP.sol\":11026:11033  damages */\n      dup4\n        /* \"contracts/LP.sol\":11034:11035  i */\n      dup4\n        /* \"contracts/LP.sol\":11026:11036  damages[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_232\n      jumpi\n      tag_232\n      tag_195\n      jump\t// in\n    tag_232:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/LP.sol\":11026:11045  damages[i] = damage */\n      mstore\n        /* \"contracts/LP.sol\":11059:11080  totalDamage += damage */\n      tag_233\n        /* \"contracts/LP.sol\":11074:11080  damage */\n      dup2\n        /* \"contracts/LP.sol\":11059:11080  totalDamage += damage */\n      dup6\n      tag_234\n      jump\t// in\n    tag_233:\n      swap4\n      pop\n        /* \"contracts/LP.sol\":10911:11091  {... */\n      pop\n        /* \"contracts/LP.sol\":10896:10900  i ++ */\n      dup1\n      dup1\n      tag_235\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      swap2\n      pop\n      pop\n        /* \"contracts/LP.sol\":10871:11091  for (uint i = 0; i <= 2; i ++) ... */\n      jump(tag_224)\n    tag_225:\n      pop\n        /* \"contracts/LP.sol\":11101:11119  bosses[_bossLevel] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":11101:11107  bosses */\n      0x07\n        /* \"contracts/LP.sol\":11101:11119  bosses[_bossLevel] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/LP.sol\":11101:11141  bosses[_bossLevel].health -= totalDamage */\n      dup1\n      sload\n        /* \"contracts/LP.sol\":11130:11141  totalDamage */\n      dup5\n      swap3\n        /* \"contracts/LP.sol\":11101:11119  bosses[_bossLevel] */\n      swap1\n        /* \"contracts/LP.sol\":11101:11141  bosses[_bossLevel].health -= totalDamage */\n      tag_237\n      swap1\n        /* \"contracts/LP.sol\":11130:11141  totalDamage */\n      dup5\n      swap1\n        /* \"contracts/LP.sol\":11101:11141  bosses[_bossLevel].health -= totalDamage */\n      tag_238\n      jump\t// in\n    tag_237:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/LP.sol\":11231:11249  bosses[_bossLevel] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":11231:11237  bosses */\n      0x07\n        /* \"contracts/LP.sol\":11231:11249  bosses[_bossLevel] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/LP.sol\":11231:11256  bosses[_bossLevel].health */\n      sload\n        /* \"contracts/LP.sol\":11231:11261  bosses[_bossLevel].health == 0 */\n      swap1\n      sub\n        /* \"contracts/LP.sol\":11228:11672  if(bosses[_bossLevel].health == 0) {... */\n      tag_239\n      jumpi\n        /* \"contracts/LP.sol\":11359:11369  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":11351:11370  players[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":11351:11358  players */\n      0x06\n        /* \"contracts/LP.sol\":11351:11370  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/LP.sol\":11351:11399  players[msg.sender].qtyBossDefeated = _bossLevel */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/LP.sol\":11418:11463  BossDefeated(msg.sender, _bossLevel, damages) */\n      mload\n        /* \"contracts/LP.sol\":11389:11399  _bossLevel */\n      dup5\n      swap2\n        /* \"contracts/LP.sol\":11359:11369  msg.sender */\n      swap1\n        /* \"contracts/LP.sol\":11418:11463  BossDefeated(msg.sender, _bossLevel, damages) */\n      0x46475d55c3bc13c229507a0915f795fd03b23601512cc1aeae9e0bf41a4075d8\n      swap1\n      tag_240\n      swap1\n        /* \"contracts/LP.sol\":11455:11462  damages */\n      dup6\n      swap1\n        /* \"contracts/LP.sol\":11418:11463  BossDefeated(msg.sender, _bossLevel, damages) */\n      tag_241\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/LP.sol\":10363:11679  {... */\n      pop\n      pop\n        /* \"contracts/LP.sol\":10312:11679  function fightWithBoss(uint256 _bossLevel) public  {... */\n      pop\n      jump\t// out\n        /* \"contracts/LP.sol\":11228:11672  if(bosses[_bossLevel].health == 0) {... */\n    tag_239:\n        /* \"contracts/LP.sol\":11626:11644  bosses[_bossLevel] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":11626:11632  bosses */\n      0x07\n        /* \"contracts/LP.sol\":11626:11644  bosses[_bossLevel] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/LP.sol\":11626:11657  bosses[_bossLevel].attackDamage */\n      0x02\n      add\n      sload\n        /* \"contracts/LP.sol\":11626:11660  bosses[_bossLevel].attackDamage *3 */\n      tag_243\n      swap1\n        /* \"contracts/LP.sol\":11659:11660  3 */\n      0x03\n        /* \"contracts/LP.sol\":11626:11660  bosses[_bossLevel].attackDamage *3 */\n      tag_229\n      jump\t// in\n    tag_243:\n        /* \"contracts/LP.sol\":11597:11607  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":11589:11608  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":11589:11596  players */\n      0x06\n        /* \"contracts/LP.sol\":11589:11608  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/LP.sol\":11589:11622  players[msg.sender].energyBalance */\n      0x02\n      add\n        /* \"contracts/LP.sol\":11589:11660  players[msg.sender].energyBalance -= bosses[_bossLevel].attackDamage *3 */\n      dup1\n      sload\n        /* \"contracts/LP.sol\":11589:11622  players[msg.sender].energyBalance */\n      swap1\n      swap2\n        /* \"contracts/LP.sol\":11589:11608  players[msg.sender] */\n      swap1\n        /* \"contracts/LP.sol\":11589:11660  players[msg.sender].energyBalance -= bosses[_bossLevel].attackDamage *3 */\n      tag_244\n      swap1\n      dup5\n      swap1\n      tag_238\n      jump\t// in\n    tag_244:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/LP.sol\":10363:11679  {... */\n      pop\n      pop\n        /* \"contracts/LP.sol\":10312:11679  function fightWithBoss(uint256 _bossLevel) public  {... */\n      pop\n      jump\t// out\n        /* \"contracts/LP.sol\":7562:8547  function enterInGame(uint256[] calldata _tokenIds) public {... */\n    tag_70:\n        /* \"contracts/LP.sol\":7717:7727  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":7682:7706  Player storage Newplayer */\n      0x00\n        /* \"contracts/LP.sol\":7709:7728  players[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":7709:7716  players */\n      0x06\n        /* \"contracts/LP.sol\":7709:7728  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/LP.sol\":7917:7946  Newplayer.qtyBossDefeated = 0 */\n      dup2\n      dup2\n      sstore\n        /* \"contracts/LP.sol\":7981:7982  1 */\n      0x01\n        /* \"contracts/LP.sol\":7956:7978  Newplayer.energyFactor */\n      dup1\n      dup3\n      add\n        /* \"contracts/LP.sol\":7956:7982  Newplayer.energyFactor = 1 */\n      sstore\n        /* \"contracts/LP.sol\":7992:8015  Newplayer.energyBalance */\n      0x02\n      dup2\n      add\n        /* \"contracts/LP.sol\":7992:8019  Newplayer.energyBalance = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/LP.sol\":8071:8107  Newplayer.lastTimestampClaimedEnergy */\n      0x04\n      dup2\n      add\n        /* \"contracts/LP.sol\":8071:8111  Newplayer.lastTimestampClaimedEnergy = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/LP.sol\":8029:8057  Newplayer.amountTokensInGame */\n      0x03\n      dup2\n      add\n        /* \"contracts/LP.sol\":8121:8168  Newplayer.amountTokensInGame = _tokenIds.length */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/LP.sol\":7709:7728  players[msg.sender] */\n      swap1\n        /* \"contracts/LP.sol\":8264:8541  for (uint256 i = 0; i < _tokenIds.length; i++) {... */\n    tag_246:\n        /* \"contracts/LP.sol\":8284:8304  i < _tokenIds.length */\n      dup3\n      dup2\n      lt\n        /* \"contracts/LP.sol\":8264:8541  for (uint256 i = 0; i < _tokenIds.length; i++) {... */\n      iszero\n      tag_247\n      jumpi\n        /* \"contracts/LP.sol\":8325:8334  Newplayer */\n      dup2\n        /* \"contracts/LP.sol\":8325:8350  Newplayer.playingTokenIds */\n      0x05\n      add\n        /* \"contracts/LP.sol\":8356:8365  _tokenIds */\n      dup5\n      dup5\n        /* \"contracts/LP.sol\":8366:8367  i */\n      dup4\n        /* \"contracts/LP.sol\":8356:8368  _tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_250\n      jumpi\n      tag_250\n      tag_195\n      jump\t// in\n    tag_250:\n        /* \"contracts/LP.sol\":8325:8369  Newplayer.playingTokenIds.push(_tokenIds[i]) */\n      dup4\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      dup7\n      sstore\n      0x00\n      swap6\n      dup7\n      mstore\n        /* \"contracts/LP.sol\":8356:8368  _tokenIds[i] */\n      0x20\n        /* \"contracts/LP.sol\":8325:8369  Newplayer.playingTokenIds.push(_tokenIds[i]) */\n      swap6\n      dup7\n      swap1\n      keccak256\n        /* \"contracts/LP.sol\":8356:8368  _tokenIds[i] */\n      swap3\n      swap1\n      swap6\n      mul\n      swap4\n      swap1\n      swap4\n      add\n      calldataload\n        /* \"contracts/LP.sol\":8325:8369  Newplayer.playingTokenIds.push(_tokenIds[i]) */\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/LP.sol\":8392:8402  Collection */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/LP.sol\":8392:8422  Collection.viewNotTransferable */\n      0x2862bb25\n        /* \"contracts/LP.sol\":8423:8432  _tokenIds */\n      dup6\n      dup6\n        /* \"contracts/LP.sol\":8433:8434  i */\n      dup5\n        /* \"contracts/LP.sol\":8423:8435  _tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_253\n      jumpi\n      tag_253\n      tag_195\n      jump\t// in\n    tag_253:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/LP.sol\":8392:8436  Collection.viewNotTransferable(_tokenIds[i]) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap2\n        /* \"#utility.yul\":1481:1506   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1469:1471   */\n      0x20\n        /* \"#utility.yul\":1454:1472   */\n      add\n      swap1\n        /* \"#utility.yul\":1335:1512   */\n      jump\n        /* \"contracts/LP.sol\":8392:8436  Collection.viewNotTransferable(_tokenIds[i]) */\n    tag_254:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_256\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_256:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_257\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"contracts/LP.sol\":8391:8436  !Collection.viewNotTransferable(_tokenIds[i]) */\n      iszero\n        /* \"contracts/LP.sol\":8383:8467  require(!Collection.viewNotTransferable(_tokenIds[i]), \"This token already in game\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8332:8334   */\n      0x20\n        /* \"contracts/LP.sol\":8383:8467  require(!Collection.viewNotTransferable(_tokenIds[i]), \"This token already in game\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8314:8335   */\n      mstore\n        /* \"#utility.yul\":8371:8373   */\n      0x1a\n        /* \"#utility.yul\":8351:8369   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8344:8374   */\n      mstore\n        /* \"#utility.yul\":8410:8438   */\n      0x5468697320746f6b656e20616c726561647920696e2067616d65000000000000\n        /* \"#utility.yul\":8390:8408   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8383:8439   */\n      mstore\n        /* \"#utility.yul\":8456:8474   */\n      0x64\n      add\n        /* \"contracts/LP.sol\":8383:8467  require(!Collection.viewNotTransferable(_tokenIds[i]), \"This token already in game\") */\n      tag_191\n        /* \"#utility.yul\":8130:8480   */\n      jump\n        /* \"contracts/LP.sol\":8383:8467  require(!Collection.viewNotTransferable(_tokenIds[i]), \"This token already in game\") */\n    tag_259:\n        /* \"contracts/LP.sol\":8481:8491  Collection */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/LP.sol\":8481:8510  Collection.setNotTransferable */\n      0xfb4f8197\n        /* \"contracts/LP.sol\":8511:8520  _tokenIds */\n      dup6\n      dup6\n        /* \"contracts/LP.sol\":8521:8522  i */\n      dup5\n        /* \"contracts/LP.sol\":8511:8523  _tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_263\n      jumpi\n      tag_263\n      tag_195\n      jump\t// in\n    tag_263:\n        /* \"contracts/LP.sol\":8481:8530  Collection.setNotTransferable(_tokenIds[i], true) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup7\n      swap1\n      shl\n      and\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":8511:8523  _tokenIds[i] */\n      0x20\n      swap1\n      swap2\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      calldataload\n        /* \"contracts/LP.sol\":8481:8530  Collection.setNotTransferable(_tokenIds[i], true) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":8653:8678   */\n      mstore\n      pop\n        /* \"contracts/LP.sol\":8525:8529  true */\n      0x01\n        /* \"#utility.yul\":8694:8712   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8687:8737   */\n      mstore\n        /* \"#utility.yul\":8626:8644   */\n      0x44\n      add\n        /* \"contracts/LP.sol\":8481:8530  Collection.setNotTransferable(_tokenIds[i], true) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_266\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_266:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_268\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_268:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/LP.sol\":8306:8309  i++ */\n      dup1\n      dup1\n      tag_269\n      swap1\n      tag_236\n      jump\t// in\n    tag_269:\n      swap2\n      pop\n      pop\n        /* \"contracts/LP.sol\":8264:8541  for (uint256 i = 0; i < _tokenIds.length; i++) {... */\n      jump(tag_246)\n    tag_247:\n      pop\n        /* \"contracts/LP.sol\":7620:8547  {... */\n      pop\n        /* \"contracts/LP.sol\":7562:8547  function enterInGame(uint256[] calldata _tokenIds) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LP.sol\":3500:3679  function calculateTestDamage() public view returns(uint) {... */\n    tag_73:\n        /* \"contracts/LP.sol\":3551:3555  uint */\n      0x00\n        /* \"contracts/LP.sol\":3648:3651  100 */\n      0x64\n        /* \"contracts/LP.sol\":3630:3640  random(20) */\n      tag_271\n        /* \"contracts/LP.sol\":3637:3639  20 */\n      0x14\n        /* \"contracts/LP.sol\":3630:3636  random */\n      tag_136\n        /* \"contracts/LP.sol\":3630:3640  random(20) */\n      jump\t// in\n    tag_271:\n        /* \"contracts/LP.sol\":3630:3646  random(20) + 100 */\n      tag_272\n      swap1\n        /* \"contracts/LP.sol\":3643:3646  100 */\n      0x64\n        /* \"contracts/LP.sol\":3630:3646  random(20) + 100 */\n      tag_234\n      jump\t// in\n    tag_272:\n        /* \"contracts/LP.sol\":3629:3651  (random(20) + 100)/100 */\n      tag_273\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_273:\n        /* \"contracts/LP.sol\":3600:3610  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":3592:3611  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":3592:3599  players */\n      0x06\n        /* \"contracts/LP.sol\":3592:3611  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/LP.sol\":3592:3624  players[msg.sender].energyFactor */\n      0x01\n      add\n      sload\n        /* \"contracts/LP.sol\":3576:3589  defaultDamage */\n      sload(0x05)\n        /* \"contracts/LP.sol\":3576:3624  defaultDamage * players[msg.sender].energyFactor */\n      tag_275\n      swap2\n        /* \"contracts/LP.sol\":3592:3624  players[msg.sender].energyFactor */\n      swap1\n        /* \"contracts/LP.sol\":3576:3624  defaultDamage * players[msg.sender].energyFactor */\n      tag_229\n      jump\t// in\n    tag_275:\n        /* \"contracts/LP.sol\":3575:3653  (defaultDamage * players[msg.sender].energyFactor) * ((random(20) + 100)/100 ) */\n      tag_276\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_276:\n        /* \"contracts/LP.sol\":3567:3653  return  (defaultDamage * players[msg.sender].energyFactor) * ((random(20) + 100)/100 ) */\n      swap1\n      pop\n        /* \"contracts/LP.sol\":3500:3679  function calculateTestDamage() public view returns(uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/LP.sol\":14197:15064  function claimMysticEffect(uint _orderPosition) public {... */\n    tag_79:\n        /* \"contracts/LP.sol\":14283:14293  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":14275:14294  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":14275:14282  players */\n      0x06\n        /* \"contracts/LP.sol\":14275:14294  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/LP.sol\":14275:14310  players[msg.sender].qtyBossDefeated */\n      sload\n        /* \"contracts/LP.sol\":14275:14328  players[msg.sender].qtyBossDefeated >= _orderPosition */\n      dup2\n      gt\n      iszero\n        /* \"contracts/LP.sol\":14267:14368  require(players[msg.sender].qtyBossDefeated >= _orderPosition, \"before you need beat necessary boss\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_280\n      jump\t// in\n    tag_278:\n        /* \"contracts/LP.sol\":14724:14734  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":14711:14735  RiseClaimMap[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":14711:14723  RiseClaimMap */\n      0x0c\n        /* \"contracts/LP.sol\":14711:14735  RiseClaimMap[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/LP.sol\":14736:14752  _orderPosition-1 */\n      tag_281\n        /* \"contracts/LP.sol\":14751:14752  1 */\n      0x01\n        /* \"contracts/LP.sol\":14736:14750  _orderPosition */\n      dup4\n        /* \"contracts/LP.sol\":14736:14752  _orderPosition-1 */\n      tag_238\n      jump\t// in\n    tag_281:\n        /* \"contracts/LP.sol\":14711:14753  RiseClaimMap[msg.sender][_orderPosition-1] */\n      0x05\n      dup2\n      lt\n      tag_283\n      jumpi\n      tag_283\n      tag_195\n      jump\t// in\n    tag_283:\n      0x20\n      dup2\n      div\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      0x1f\n      swap1\n      swap3\n      and\n      0x0100\n      exp\n      swap1\n      div\n      and\n        /* \"contracts/LP.sol\":14710:14753  !RiseClaimMap[msg.sender][_orderPosition-1] */\n      iszero\n        /* \"contracts/LP.sol\":14702:14792  require(!RiseClaimMap[msg.sender][_orderPosition-1], \"you're already claimed this effect\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9611:9613   */\n      0x20\n        /* \"contracts/LP.sol\":14702:14792  require(!RiseClaimMap[msg.sender][_orderPosition-1], \"you're already claimed this effect\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9593:9614   */\n      mstore\n        /* \"#utility.yul\":9650:9652   */\n      0x22\n        /* \"#utility.yul\":9630:9648   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9623:9653   */\n      mstore\n        /* \"#utility.yul\":9689:9723   */\n      0x796f7527726520616c726561647920636c61696d656420746869732065666665\n        /* \"#utility.yul\":9669:9687   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9662:9724   */\n      mstore\n      shl(0xf2, 0x18dd)\n        /* \"#utility.yul\":9740:9758   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9733:9765   */\n      mstore\n        /* \"#utility.yul\":9782:9801   */\n      0x84\n      add\n        /* \"contracts/LP.sol\":14702:14792  require(!RiseClaimMap[msg.sender][_orderPosition-1], \"you're already claimed this effect\") */\n      tag_191\n        /* \"#utility.yul\":9409:9807   */\n      jump\n        /* \"contracts/LP.sol\":14702:14792  require(!RiseClaimMap[msg.sender][_orderPosition-1], \"you're already claimed this effect\") */\n    tag_285:\n        /* \"contracts/LP.sol\":14802:14813  uint chance */\n      0x00\n        /* \"contracts/LP.sol\":14816:14826  random(10) */\n      tag_288\n        /* \"contracts/LP.sol\":14823:14825  10 */\n      0x0a\n        /* \"contracts/LP.sol\":14816:14822  random */\n      tag_136\n        /* \"contracts/LP.sol\":14816:14826  random(10) */\n      jump\t// in\n    tag_288:\n        /* \"contracts/LP.sol\":14802:14826  uint chance = random(10) */\n      swap1\n      pop\n        /* \"contracts/LP.sol\":14850:14851  2 */\n      0x02\n        /* \"contracts/LP.sol\":14841:14847  chance */\n      dup2\n        /* \"contracts/LP.sol\":14841:14851  chance <=2 */\n      gt\n        /* \"contracts/LP.sol\":14838:15063  if(chance <=2) {... */\n      tag_289\n      jumpi\n        /* \"contracts/LP.sol\":14875:14885  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":14867:14886  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":14867:14874  players */\n      0x06\n        /* \"contracts/LP.sol\":14867:14886  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/LP.sol\":14867:14899  players[msg.sender].energyFactor */\n      0x01\n      add\n        /* \"contracts/LP.sol\":14867:14905  players[msg.sender].energyFactor += 10 */\n      dup1\n      sload\n        /* \"contracts/LP.sol\":14903:14905  10 */\n      0x0a\n      swap3\n        /* \"contracts/LP.sol\":14867:14886  players[msg.sender] */\n      swap1\n        /* \"contracts/LP.sol\":14867:14905  players[msg.sender].energyFactor += 10 */\n      tag_290\n      swap1\n        /* \"contracts/LP.sol\":14903:14905  10 */\n      dup5\n      swap1\n        /* \"contracts/LP.sol\":14867:14905  players[msg.sender].energyFactor += 10 */\n      tag_234\n      jump\t// in\n    tag_290:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/LP.sol\":14838:15063  if(chance <=2) {... */\n      tag_291\n      swap1\n      pop\n      jump\n    tag_289:\n        /* \"contracts/LP.sol\":14962:14972  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":14954:14973  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":14954:14961  players */\n      0x06\n        /* \"contracts/LP.sol\":14954:14973  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/LP.sol\":14954:14986  players[msg.sender].energyFactor */\n      0x01\n      add\n        /* \"contracts/LP.sol\":14954:14992  players[msg.sender].energyFactor -= 10 */\n      dup1\n      sload\n        /* \"contracts/LP.sol\":14990:14992  10 */\n      0x0a\n      swap3\n        /* \"contracts/LP.sol\":14954:14973  players[msg.sender] */\n      swap1\n        /* \"contracts/LP.sol\":14954:14992  players[msg.sender].energyFactor -= 10 */\n      tag_292\n      swap1\n        /* \"contracts/LP.sol\":14990:14992  10 */\n      dup5\n      swap1\n        /* \"contracts/LP.sol\":14954:14992  players[msg.sender].energyFactor -= 10 */\n      tag_238\n      jump\t// in\n    tag_292:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/LP.sol\":15020:15030  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":15007:15031  RiseClaimMap[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":15007:15019  RiseClaimMap */\n      0x0c\n        /* \"contracts/LP.sol\":15007:15031  RiseClaimMap[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/LP.sol\":15052:15056  true */\n      0x01\n      swap1\n        /* \"contracts/LP.sol\":15032:15048  _orderPosition-1 */\n      tag_293\n        /* \"contracts/LP.sol\":15052:15056  true */\n      dup3\n        /* \"contracts/LP.sol\":15032:15046  _orderPosition */\n      dup6\n        /* \"contracts/LP.sol\":15032:15048  _orderPosition-1 */\n      tag_238\n      jump\t// in\n    tag_293:\n        /* \"contracts/LP.sol\":15007:15049  RiseClaimMap[msg.sender][_orderPosition-1] */\n      0x05\n      dup2\n      lt\n      tag_295\n      jumpi\n      tag_295\n      tag_195\n      jump\t// in\n    tag_295:\n      0x20\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n        /* \"contracts/LP.sol\":15007:15056  RiseClaimMap[msg.sender][_orderPosition-1] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LP.sol\":14838:15063  if(chance <=2) {... */\n    tag_291:\n        /* \"contracts/LP.sol\":14252:15064  {... */\n      pop\n        /* \"contracts/LP.sol\":14197:15064  function claimMysticEffect(uint _orderPosition) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/LP.sol\":1233:1348  function getInfoPlayer(address _player) public view returns(Player memory) {... */\n    tag_84:\n        /* \"contracts/LP.sol\":1293:1306  Player memory */\n      tag_297\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_297:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LP.sol\":1325:1341  players[_player] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":1325:1332  players */\n      0x06\n        /* \"contracts/LP.sol\":1325:1341  players[_player] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/LP.sol\":1318:1341  return players[_player] */\n      dup3\n      mload\n      0xc0\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      dup5\n      add\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      dup6\n      add\n      mstore\n      0x03\n      dup3\n      add\n      sload\n      0x60\n      dup3\n      add\n      mstore\n      0x04\n      dup3\n      add\n      sload\n      0x80\n      dup3\n      add\n      mstore\n      0x05\n      dup3\n      add\n      dup1\n      sload\n      dup6\n      mload\n      dup2\n      dup7\n      mul\n      dup2\n      add\n      dup7\n      add\n      swap1\n      swap7\n      mstore\n      dup1\n      dup7\n      mstore\n      swap2\n      swap5\n        /* \"contracts/LP.sol\":1325:1341  players[_player] */\n      swap3\n      swap4\n        /* \"contracts/LP.sol\":1318:1341  return players[_player] */\n      0xa0\n      dup7\n      add\n      swap4\n      swap3\n      swap1\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_300\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_301:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_301\n      jumpi\n    tag_300:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/LP.sol\":1233:1348  function getInfoPlayer(address _player) public view returns(Player memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/LP.sol\":5446:5966  function enterInDuel() public {... */\n    tag_93:\n        /* \"contracts/LP.sol\":5487:5515  duelInfo storage currentDuel */\n      0x00\n        /* \"contracts/LP.sol\":5518:5523  duels */\n      0x08\n        /* \"contracts/LP.sol\":5524:5543  findAvailableDuel() */\n      tag_304\n        /* \"contracts/LP.sol\":5524:5541  findAvailableDuel */\n      tag_150\n        /* \"contracts/LP.sol\":5524:5543  findAvailableDuel() */\n      jump\t// in\n    tag_304:\n        /* \"contracts/LP.sol\":5518:5544  duels[findAvailableDuel()] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_306\n      jumpi\n      tag_306\n      tag_195\n      jump\t// in\n    tag_306:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/LP.sol\":5487:5544  duelInfo storage currentDuel = duels[findAvailableDuel()] */\n      swap1\n      pop\n        /* \"contracts/LP.sol\":5737:5747  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":5712:5723  currentDuel */\n      dup2\n        /* \"contracts/LP.sol\":5712:5731  currentDuel.players */\n      0x01\n      add\n        /* \"contracts/LP.sol\":5732:5733  0 */\n      0x00\n        /* \"contracts/LP.sol\":5712:5734  currentDuel.players[0] */\n      0x02\n      dup2\n      lt\n      tag_309\n      jumpi\n      tag_309\n      tag_195\n      jump\t// in\n    tag_309:\n      add\n        /* \"contracts/LP.sol\":5712:5747  currentDuel.players[0] = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/LP.sol\":5761:5768  LPToken */\n      sload(0x02)\n        /* \"contracts/LP.sol\":5809:5818  duelPrice */\n      sload(0x09)\n        /* \"contracts/LP.sol\":5761:5820  LPToken.transferFrom(msg.sender, address(this), duelPrice ) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":5782:5792  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":5761:5820  LPToken.transferFrom(msg.sender, address(this), duelPrice ) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10052:10086   */\n      mstore\n        /* \"contracts/LP.sol\":5802:5806  this */\n      address\n        /* \"#utility.yul\":10102:10120   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10095:10138   */\n      mstore\n        /* \"#utility.yul\":10154:10172   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":10147:10181   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/LP.sol\":5761:5768  LPToken */\n      swap2\n      and\n      swap1\n        /* \"contracts/LP.sol\":5761:5781  LPToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":9987:10005   */\n      0x64\n      add\n        /* \"contracts/LP.sol\":5761:5820  LPToken.transferFrom(msg.sender, address(this), duelPrice ) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_314\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_314:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_315\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_315:\n      pop\n        /* \"contracts/LP.sol\":5835:5859  currentDuel.playersNow++ */\n      dup1\n      sload\n        /* \"contracts/LP.sol\":5835:5846  currentDuel */\n      dup2\n        /* \"contracts/LP.sol\":5835:5857  currentDuel.playersNow */\n      0x00\n        /* \"contracts/LP.sol\":5835:5859  currentDuel.playersNow++ */\n      tag_316\n      dup4\n      tag_236\n      jump\t// in\n    tag_316:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/LP.sol\":5476:5966  {... */\n      pop\n        /* \"contracts/LP.sol\":5446:5966  function enterInDuel() public {... */\n      jump\t// out\n        /* \"contracts/LP.sol\":13971:14019  mapping (address => bool[5]) public RiseClaimMap */\n    tag_98:\n      mstore(0x20, 0x0c)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      0x05\n      dup2\n      lt\n      tag_317\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_317:\n      0x20\n      dup2\n      div\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      0x1f\n      swap1\n      swap3\n      and\n      0x0100\n      exp\n      swap1\n      div\n      and\n      swap2\n      pop\n      dup3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_320\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_321\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_323\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_324\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/LP.sol\":1748:1771  duelInfo[] public duels */\n    tag_119:\n      0x08\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_327\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_327:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x03\n      dup3\n      add\n      sload\n      0x04\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap3\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/LP.sol\":3781:5131  function doAttackInDuel(uint256 _indexRoom) public {... */\n    tag_129:\n        /* \"contracts/LP.sol\":3861:3889  duelInfo storage currentDuel */\n      0x00\n        /* \"contracts/LP.sol\":3892:3897  duels */\n      0x08\n        /* \"contracts/LP.sol\":3898:3908  _indexRoom */\n      dup3\n        /* \"contracts/LP.sol\":3892:3909  duels[_indexRoom] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_332\n      jumpi\n      tag_332\n      tag_195\n      jump\t// in\n    tag_332:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/LP.sol\":3861:3909  duelInfo storage currentDuel = duels[_indexRoom] */\n      swap1\n      pop\n        /* \"contracts/LP.sol\":3928:3965  isPlayerInDuelAtIndexRoom(_indexRoom) */\n      tag_334\n        /* \"contracts/LP.sol\":3954:3964  _indexRoom */\n      dup3\n        /* \"contracts/LP.sol\":3928:3953  isPlayerInDuelAtIndexRoom */\n      tag_46\n        /* \"contracts/LP.sol\":3928:3965  isPlayerInDuelAtIndexRoom(_indexRoom) */\n      jump\t// in\n    tag_334:\n        /* \"contracts/LP.sol\":3920:3988  require(isPlayerInDuelAtIndexRoom(_indexRoom), \"you're not in room\") */\n      tag_335\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10394:10396   */\n      0x20\n        /* \"contracts/LP.sol\":3920:3988  require(isPlayerInDuelAtIndexRoom(_indexRoom), \"you're not in room\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10376:10397   */\n      mstore\n        /* \"#utility.yul\":10433:10435   */\n      0x12\n        /* \"#utility.yul\":10413:10431   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10406:10436   */\n      mstore\n      shl(0x70, 0x796f75277265206e6f7420696e20726f6f6d)\n        /* \"#utility.yul\":10452:10470   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10445:10493   */\n      mstore\n        /* \"#utility.yul\":10510:10528   */\n      0x64\n      add\n        /* \"contracts/LP.sol\":3920:3988  require(isPlayerInDuelAtIndexRoom(_indexRoom), \"you're not in room\") */\n      tag_191\n        /* \"#utility.yul\":10192:10534   */\n      jump\n        /* \"contracts/LP.sol\":3920:3988  require(isPlayerInDuelAtIndexRoom(_indexRoom), \"you're not in room\") */\n    tag_335:\n        /* \"contracts/LP.sol\":4258:4274  new uint256[](3) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/LP.sol\":4272:4273  3 */\n      0x03\n        /* \"contracts/LP.sol\":4258:4274  new uint256[](3) */\n      dup1\n      dup3\n      mstore\n      0x80\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/LP.sol\":4231:4255  uint256[] memory damages */\n      0x00\n      swap2\n        /* \"contracts/LP.sol\":4258:4274  new uint256[](3) */\n      0x20\n      dup3\n      add\n      0x60\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/LP.sol\":4231:4274  uint256[] memory damages = new uint256[](3) */\n      swap1\n      pop\n        /* \"contracts/LP.sol\":4285:4301  uint totalDamage */\n      0x00\n      dup1\n        /* \"contracts/LP.sol\":4312:4532  for (uint i = 0; i <= 2; i ++) ... */\n    tag_341:\n        /* \"contracts/LP.sol\":4334:4335  2 */\n      0x02\n        /* \"contracts/LP.sol\":4329:4330  i */\n      dup2\n        /* \"contracts/LP.sol\":4329:4335  i <= 2 */\n      gt\n        /* \"contracts/LP.sol\":4312:4532  for (uint i = 0; i <= 2; i ++) ... */\n      tag_342\n      jumpi\n        /* \"contracts/LP.sol\":4425:4435  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":4374:4385  uint damage */\n      0x00\n        /* \"contracts/LP.sol\":4417:4436  players[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":4417:4424  players */\n      0x06\n        /* \"contracts/LP.sol\":4417:4436  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/LP.sol\":4417:4449  players[msg.sender].energyFactor */\n      0x01\n      add\n      sload\n        /* \"contracts/LP.sol\":4401:4414  defaultDamage */\n      sload(0x05)\n        /* \"contracts/LP.sol\":4388:4398  random(10) */\n      tag_344\n        /* \"contracts/LP.sol\":4395:4397  10 */\n      0x0a\n        /* \"contracts/LP.sol\":4388:4394  random */\n      tag_136\n        /* \"contracts/LP.sol\":4388:4398  random(10) */\n      jump\t// in\n    tag_344:\n        /* \"contracts/LP.sol\":4388:4414  random(10) * defaultDamage */\n      tag_345\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_345:\n        /* \"contracts/LP.sol\":4388:4449  random(10) * defaultDamage * players[msg.sender].energyFactor */\n      tag_346\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_346:\n        /* \"contracts/LP.sol\":4374:4449  uint damage = random(10) * defaultDamage * players[msg.sender].energyFactor */\n      swap1\n      pop\n        /* \"contracts/LP.sol\":4480:4486  damage */\n      dup1\n        /* \"contracts/LP.sol\":4467:4474  damages */\n      dup5\n        /* \"contracts/LP.sol\":4475:4476  i */\n      dup4\n        /* \"contracts/LP.sol\":4467:4477  damages[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_348\n      jumpi\n      tag_348\n      tag_195\n      jump\t// in\n    tag_348:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/LP.sol\":4467:4486  damages[i] = damage */\n      mstore\n        /* \"contracts/LP.sol\":4500:4521  totalDamage += damage */\n      tag_349\n        /* \"contracts/LP.sol\":4515:4521  damage */\n      dup2\n        /* \"contracts/LP.sol\":4500:4521  totalDamage += damage */\n      dup5\n      tag_234\n      jump\t// in\n    tag_349:\n      swap3\n      pop\n        /* \"contracts/LP.sol\":4352:4532  {... */\n      pop\n        /* \"contracts/LP.sol\":4337:4341  i ++ */\n      dup1\n      dup1\n      tag_350\n      swap1\n      tag_236\n      jump\t// in\n    tag_350:\n      swap2\n      pop\n      pop\n        /* \"contracts/LP.sol\":4312:4532  for (uint i = 0; i <= 2; i ++) ... */\n      jump(tag_341)\n    tag_342:\n      pop\n        /* \"contracts/LP.sol\":4578:4588  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":4552:4571  currentDuel.players */\n      0x01\n      dup5\n      add\n        /* \"contracts/LP.sol\":4572:4573  0 */\n      0x00\n        /* \"contracts/LP.sol\":4552:4574  currentDuel.players[0] */\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/LP.sol\":4552:4588  currentDuel.players[0] == msg.sender */\n      sub\n        /* \"contracts/LP.sol\":4548:5049  if (currentDuel.players[0] == msg.sender) {... */\n      tag_354\n      jumpi\n        /* \"contracts/LP.sol\":4651:4662  totalDamage */\n      dup1\n        /* \"contracts/LP.sol\":4617:4628  currentDuel */\n      dup4\n        /* \"contracts/LP.sol\":4617:4647  currentDuel.totalDamagePlayer0 */\n      0x03\n      add\n      0x00\n        /* \"contracts/LP.sol\":4617:4662  currentDuel.totalDamagePlayer0 += totalDamage */\n      dup3\n      dup3\n      sload\n      tag_355\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_355:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/LP.sol\":4721:4751  currentDuel.totalDamagePlayer0 */\n      0x03\n      dup4\n      add\n      sload\n        /* \"contracts/LP.sol\":4721:4756  currentDuel.totalDamagePlayer0 == 0 */\n      iszero\n        /* \"contracts/LP.sol\":4713:4792  require(currentDuel.totalDamagePlayer0 == 0, \"you're already attacked in duel\") */\n      tag_356\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10741:10743   */\n      0x20\n        /* \"contracts/LP.sol\":4713:4792  require(currentDuel.totalDamagePlayer0 == 0, \"you're already attacked in duel\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10723:10744   */\n      mstore\n        /* \"#utility.yul\":10780:10782   */\n      0x1f\n        /* \"#utility.yul\":10760:10778   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10753:10783   */\n      mstore\n        /* \"#utility.yul\":10819:10852   */\n      0x796f7527726520616c72656164792061747461636b656420696e206475656c00\n        /* \"#utility.yul\":10799:10817   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10792:10853   */\n      mstore\n        /* \"#utility.yul\":10870:10888   */\n      0x64\n      add\n        /* \"contracts/LP.sol\":4713:4792  require(currentDuel.totalDamagePlayer0 == 0, \"you're already attacked in duel\") */\n      tag_191\n        /* \"#utility.yul\":10539:10894   */\n      jump\n        /* \"contracts/LP.sol\":4713:4792  require(currentDuel.totalDamagePlayer0 == 0, \"you're already attacked in duel\") */\n    tag_356:\n        /* \"contracts/LP.sol\":4548:5049  if (currentDuel.players[0] == msg.sender) {... */\n      jump(tag_361)\n    tag_354:\n        /* \"contracts/LP.sol\":4866:4877  totalDamage */\n      dup1\n        /* \"contracts/LP.sol\":4832:4843  currentDuel */\n      dup4\n        /* \"contracts/LP.sol\":4832:4862  currentDuel.totalDamagePlayer1 */\n      0x04\n      add\n      0x00\n        /* \"contracts/LP.sol\":4832:4877  currentDuel.totalDamagePlayer1 += totalDamage */\n      dup3\n      dup3\n      sload\n      tag_360\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_360:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/LP.sol\":4966:4996  currentDuel.totalDamagePlayer0 */\n      0x03\n      dup4\n      add\n      sload\n        /* \"contracts/LP.sol\":4966:5001  currentDuel.totalDamagePlayer0 == 0 */\n      iszero\n        /* \"contracts/LP.sol\":4958:5037  require(currentDuel.totalDamagePlayer0 == 0, \"you're already attacked in duel\") */\n      tag_361\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10741:10743   */\n      0x20\n        /* \"contracts/LP.sol\":4958:5037  require(currentDuel.totalDamagePlayer0 == 0, \"you're already attacked in duel\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10723:10744   */\n      mstore\n        /* \"#utility.yul\":10780:10782   */\n      0x1f\n        /* \"#utility.yul\":10760:10778   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10753:10783   */\n      mstore\n        /* \"#utility.yul\":10819:10852   */\n      0x796f7527726520616c72656164792061747461636b656420696e206475656c00\n        /* \"#utility.yul\":10799:10817   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10792:10853   */\n      mstore\n        /* \"#utility.yul\":10870:10888   */\n      0x64\n      add\n        /* \"contracts/LP.sol\":4958:5037  require(currentDuel.totalDamagePlayer0 == 0, \"you're already attacked in duel\") */\n      tag_191\n        /* \"#utility.yul\":10539:10894   */\n      jump\n        /* \"contracts/LP.sol\":4958:5037  require(currentDuel.totalDamagePlayer0 == 0, \"you're already attacked in duel\") */\n    tag_361:\n        /* \"contracts/LP.sol\":5080:5090  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LP.sol\":5065:5112  duelAttackLogs(msg.sender, _indexRoom, damages) */\n      and\n      0x0f2ba4445fbd3af142b7a1251df18b6d462b23687b1bc8799a1c3eddb4ff0826\n        /* \"contracts/LP.sol\":5092:5102  _indexRoom */\n      dup6\n        /* \"contracts/LP.sol\":5104:5111  damages */\n      dup5\n        /* \"contracts/LP.sol\":5065:5112  duelAttackLogs(msg.sender, _indexRoom, damages) */\n      mload(0x40)\n      tag_363\n      swap3\n      swap2\n      swap1\n      tag_364\n      jump\t// in\n    tag_363:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/LP.sol\":3832:5131  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/LP.sol\":3781:5131  function doAttackInDuel(uint256 _indexRoom) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/LP.sol\":8553:9102  function leaveGame() public {... */\n    tag_132:\n        /* \"contracts/LP.sol\":8709:8718  uint256 i */\n      0x00\n        /* \"contracts/LP.sol\":8691:9059  for (... */\n    tag_366:\n        /* \"contracts/LP.sol\":8748:8758  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":8740:8759  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":8740:8747  players */\n      0x06\n        /* \"contracts/LP.sol\":8740:8759  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/LP.sol\":8740:8775  players[msg.sender].playingTokenIds */\n      0x05\n      add\n        /* \"contracts/LP.sol\":8740:8782  players[msg.sender].playingTokenIds.length */\n      sload\n        /* \"contracts/LP.sol\":8736:8782  i < players[msg.sender].playingTokenIds.length */\n      dup2\n      lt\n        /* \"contracts/LP.sol\":8691:9059  for (... */\n      iszero\n      tag_367\n      jumpi\n        /* \"contracts/LP.sol\":8824:8834  Collection */\n      sload(0x01)\n        /* \"contracts/LP.sol\":8879:8889  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":8824:8834  Collection */\n      0x00\n        /* \"contracts/LP.sol\":8871:8890  players[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":8871:8878  players */\n      0x06\n        /* \"contracts/LP.sol\":8871:8890  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/LP.sol\":8871:8906  players[msg.sender].playingTokenIds */\n      0x05\n      add\n        /* \"contracts/LP.sol\":8871:8909  players[msg.sender].playingTokenIds[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LP.sol\":8824:8834  Collection */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/LP.sol\":8824:8853  Collection.setNotTransferable */\n      0xfb4f8197\n      swap2\n        /* \"contracts/LP.sol\":8871:8906  players[msg.sender].playingTokenIds */\n      swap1\n        /* \"contracts/LP.sol\":8907:8908  i */\n      dup5\n      swap1\n        /* \"contracts/LP.sol\":8871:8909  players[msg.sender].playingTokenIds[i] */\n      dup2\n      lt\n      tag_370\n      jumpi\n      tag_370\n      tag_195\n      jump\t// in\n    tag_370:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/LP.sol\":8927:8932  false */\n      0x00\n        /* \"contracts/LP.sol\":8824:8946  Collection.setNotTransferable(... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_372\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":8653:8678   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":8721:8735   */\n      iszero\n        /* \"#utility.yul\":8714:8736   */\n      iszero\n        /* \"#utility.yul\":8709:8711   */\n      0x20\n        /* \"#utility.yul\":8694:8712   */\n      dup3\n      add\n        /* \"#utility.yul\":8687:8737   */\n      mstore\n        /* \"#utility.yul\":8641:8643   */\n      0x40\n        /* \"#utility.yul\":8626:8644   */\n      add\n      swap1\n        /* \"#utility.yul\":8485:8743   */\n      jump\n        /* \"contracts/LP.sol\":8824:8946  Collection.setNotTransferable(... */\n    tag_372:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_373\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_373:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_375\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_375:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/LP.sol\":8796:8799  i++ */\n      dup1\n      dup1\n      tag_376\n      swap1\n      tag_236\n      jump\t// in\n    tag_376:\n      swap2\n      pop\n      pop\n        /* \"contracts/LP.sol\":8691:9059  for (... */\n      jump(tag_366)\n    tag_367:\n      pop\n        /* \"contracts/LP.sol\":9084:9094  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":9076:9095  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":9076:9083  players */\n      0x06\n        /* \"contracts/LP.sol\":9076:9095  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/LP.sol\":9069:9095  delete players[msg.sender] */\n      dup2\n      dup2\n      sstore\n      0x01\n      dup2\n      add\n      dup3\n      swap1\n      sstore\n      0x02\n      dup2\n      add\n      dup3\n      swap1\n      sstore\n      0x03\n      dup2\n      add\n      dup3\n      swap1\n      sstore\n      0x04\n      dup2\n      add\n      dup3\n      swap1\n      sstore\n        /* \"contracts/LP.sol\":9076:9095  players[msg.sender] */\n      swap1\n        /* \"contracts/LP.sol\":9069:9095  delete players[msg.sender] */\n      tag_291\n      0x05\n      dup4\n      add\n        /* \"contracts/LP.sol\":9076:9095  players[msg.sender] */\n      dup3\n        /* \"contracts/LP.sol\":9069:9095  delete players[msg.sender] */\n      tag_378\n      jump\t// in\n        /* \"contracts/LP.sol\":2151:2556  function random(uint256 _value) public view returns (uint256) {... */\n    tag_136:\n        /* \"contracts/LP.sol\":2204:2211  uint256 */\n      0x00\n        /* \"contracts/LP.sol\":2543:2549  _value */\n      dup2\n        /* \"contracts/LP.sol\":2340:2355  block.timestamp */\n      timestamp\n        /* \"contracts/LP.sol\":2381:2397  block.difficulty */\n      difficulty\n        /* \"contracts/LP.sol\":2433:2449  block.number - 1 */\n      tag_380\n        /* \"contracts/LP.sol\":2448:2449  1 */\n      0x01\n        /* \"contracts/LP.sol\":2433:2445  block.number */\n      number\n        /* \"contracts/LP.sol\":2433:2449  block.number - 1 */\n      tag_238\n      jump\t// in\n    tag_380:\n        /* \"contracts/LP.sol\":2298:2508  abi.encodePacked(... */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n        /* \"#utility.yul\":11449:11468   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":11484:11496   */\n      dup4\n      add\n        /* \"#utility.yul\":11477:11505   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/LP.sol\":2423:2450  blockhash(block.number - 1) */\n      blockhash\n        /* \"#utility.yul\":11521:11533   */\n      0x60\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":11514:11542   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/LP.sol\":2476:2486  msg.sender */\n      caller\n        /* \"#utility.yul\":11576:11591   */\n      swap1\n      shl\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":11572:11625   */\n      and\n        /* \"#utility.yul\":11558:11570   */\n      0x80\n      dup3\n      add\n        /* \"#utility.yul\":11551:11626   */\n      mstore\n        /* \"#utility.yul\":11642:11655   */\n      0x94\n      add\n        /* \"contracts/LP.sol\":2298:2508  abi.encodePacked(... */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/LP.sol\":2267:2526  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/LP.sol\":2242:2540  uint256(... */\n      0x00\n      shr\n        /* \"contracts/LP.sol\":2242:2549  uint256(... */\n      tag_383\n      swap2\n      swap1\n      tag_384\n      jump\t// in\n    tag_383:\n        /* \"contracts/LP.sol\":2223:2549  return... */\n      swap3\n        /* \"contracts/LP.sol\":2151:2556  function random(uint256 _value) public view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LP.sol\":11691:12013  function checkOwnershipOfTokens(uint256[] memory _tokenIds) public view returns(bool) {... */\n    tag_142:\n        /* \"contracts/LP.sol\":11771:11775  bool */\n      0x00\n      dup1\n        /* \"contracts/LP.sol\":11788:11986  for (uint i = 0; i < _tokenIds.length; i++) ... */\n    tag_386:\n        /* \"contracts/LP.sol\":11809:11818  _tokenIds */\n      dup3\n        /* \"contracts/LP.sol\":11809:11825  _tokenIds.length */\n      mload\n        /* \"contracts/LP.sol\":11805:11806  i */\n      dup2\n        /* \"contracts/LP.sol\":11805:11825  i < _tokenIds.length */\n      lt\n        /* \"contracts/LP.sol\":11788:11986  for (uint i = 0; i < _tokenIds.length; i++) ... */\n      iszero\n      tag_387\n      jumpi\n        /* \"contracts/LP.sol\":11886:11896  Collection */\n      sload(0x01)\n        /* \"contracts/LP.sol\":11905:11917  _tokenIds[i] */\n      dup4\n      mload\n        /* \"contracts/LP.sol\":11922:11931  tx.origin */\n      origin\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LP.sol\":11886:11896  Collection */\n      and\n      swap1\n        /* \"contracts/LP.sol\":11886:11904  Collection.ownerOf */\n      0x6352211e\n      swap1\n        /* \"contracts/LP.sol\":11905:11914  _tokenIds */\n      dup7\n      swap1\n        /* \"contracts/LP.sol\":11915:11916  i */\n      dup6\n      swap1\n        /* \"contracts/LP.sol\":11905:11917  _tokenIds[i] */\n      dup2\n      lt\n      tag_390\n      jumpi\n      tag_390\n      tag_195\n      jump\t// in\n    tag_390:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/LP.sol\":11886:11918  Collection.ownerOf(_tokenIds[i]) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_391\n      swap2\n        /* \"#utility.yul\":1481:1506   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1469:1471   */\n      0x20\n        /* \"#utility.yul\":1454:1472   */\n      add\n      swap1\n        /* \"#utility.yul\":1335:1512   */\n      jump\n        /* \"contracts/LP.sol\":11886:11918  Collection.ownerOf(_tokenIds[i]) */\n    tag_391:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_393\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_393:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_394\n      swap2\n      swap1\n      tag_395\n      jump\t// in\n    tag_394:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LP.sol\":11886:11931  Collection.ownerOf(_tokenIds[i]) != tx.origin */\n      and\n      eq\n        /* \"contracts/LP.sol\":11883:11976  if(Collection.ownerOf(_tokenIds[i]) != tx.origin) {... */\n      tag_396\n      jumpi\n      pop\n        /* \"contracts/LP.sol\":11957:11962  false */\n      0x00\n      swap3\n        /* \"contracts/LP.sol\":11691:12013  function checkOwnershipOfTokens(uint256[] memory _tokenIds) public view returns(bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LP.sol\":11883:11976  if(Collection.ownerOf(_tokenIds[i]) != tx.origin) {... */\n    tag_396:\n        /* \"contracts/LP.sol\":11827:11830  i++ */\n      dup1\n      tag_397\n      dup2\n      tag_236\n      jump\t// in\n    tag_397:\n      swap2\n      pop\n      pop\n        /* \"contracts/LP.sol\":11788:11986  for (uint i = 0; i < _tokenIds.length; i++) ... */\n      jump(tag_386)\n    tag_387:\n      pop\n        /* \"contracts/LP.sol\":12002:12006  true */\n      0x01\n      swap3\n        /* \"contracts/LP.sol\":11691:12013  function checkOwnershipOfTokens(uint256[] memory _tokenIds) public view returns(bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LP.sol\":9850:10195  function buyEnergyForTokens(uint256 _amountEnergy) public {... */\n    tag_147:\n        /* \"contracts/LP.sol\":9918:9943  uint256 amountToPayTokens */\n      0x00\n        /* \"contracts/LP.sol\":9962:9981  energyPriceInTokens */\n      sload(0x04)\n        /* \"contracts/LP.sol\":9946:9959  _amountEnergy */\n      dup3\n        /* \"contracts/LP.sol\":9946:9981  _amountEnergy * energyPriceInTokens */\n      tag_399\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_399:\n        /* \"contracts/LP.sol\":9992:9999  LPToken */\n      sload(0x02)\n        /* \"contracts/LP.sol\":9992:10058  LPToken.transferFrom(msg.sender, address(this), amountToPayTokens) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":10013:10023  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":9992:10058  LPToken.transferFrom(msg.sender, address(this), amountToPayTokens) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10052:10086   */\n      mstore\n        /* \"contracts/LP.sol\":10033:10037  this */\n      address\n        /* \"#utility.yul\":10102:10120   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10095:10138   */\n      mstore\n        /* \"#utility.yul\":10154:10172   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":10147:10181   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/LP.sol\":9918:9981  uint256 amountToPayTokens = _amountEnergy * energyPriceInTokens */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LP.sol\":9992:9999  LPToken */\n      and\n      swap1\n        /* \"contracts/LP.sol\":9992:10012  LPToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":9987:10005   */\n      0x64\n      add\n        /* \"contracts/LP.sol\":9992:10058  LPToken.transferFrom(msg.sender, address(this), amountToPayTokens) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_402\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_402:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_403\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_403:\n      pop\n        /* \"contracts/LP.sol\":10077:10087  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":10069:10088  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":10069:10076  players */\n      0x06\n        /* \"contracts/LP.sol\":10069:10088  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/LP.sol\":10069:10102  players[msg.sender].energyBalance */\n      0x02\n      add\n        /* \"contracts/LP.sol\":10069:10119  players[msg.sender].energyBalance += _amountEnergy */\n      dup1\n      sload\n        /* \"contracts/LP.sol\":10106:10119  _amountEnergy */\n      dup5\n      swap3\n        /* \"contracts/LP.sol\":10069:10088  players[msg.sender] */\n      swap1\n        /* \"contracts/LP.sol\":10069:10119  players[msg.sender].energyBalance += _amountEnergy */\n      tag_404\n      swap1\n        /* \"contracts/LP.sol\":10106:10119  _amountEnergy */\n      dup5\n      swap1\n        /* \"contracts/LP.sol\":10069:10119  players[msg.sender].energyBalance += _amountEnergy */\n      tag_234\n      jump\t// in\n    tag_404:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/LP.sol\":9850:10195  function buyEnergyForTokens(uint256 _amountEnergy) public {... */\n      jump\t// out\n        /* \"contracts/LP.sol\":5176:5440  function findAvailableDuel() public view returns(uint256) {... */\n    tag_150:\n        /* \"contracts/LP.sol\":5225:5232  uint256 */\n      0x00\n      dup1\n        /* \"contracts/LP.sol\":5245:5377  for (uint i = 0; i < duels.length; i++) {... */\n    tag_406:\n        /* \"contracts/LP.sol\":5266:5271  duels */\n      0x08\n        /* \"contracts/LP.sol\":5266:5278  duels.length */\n      sload\n        /* \"contracts/LP.sol\":5262:5278  i < duels.length */\n      dup2\n      lt\n        /* \"contracts/LP.sol\":5245:5377  for (uint i = 0; i < duels.length; i++) {... */\n      iszero\n      tag_407\n      jumpi\n        /* \"contracts/LP.sol\":5308:5313  duels */\n      0x08\n        /* \"contracts/LP.sol\":5314:5315  i */\n      dup2\n        /* \"contracts/LP.sol\":5308:5316  duels[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_410\n      jumpi\n      tag_410\n      tag_195\n      jump\t// in\n    tag_410:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/LP.sol\":5308:5327  duels[i].playersNow */\n      0x00\n      add\n      sload\n        /* \"contracts/LP.sol\":5330:5331  2 */\n      0x02\n        /* \"contracts/LP.sol\":5308:5331  duels[i].playersNow !=2 */\n      eq\n        /* \"contracts/LP.sol\":5305:5366  if(duels[i].playersNow !=2) {... */\n      tag_412\n      jumpi\n        /* \"contracts/LP.sol\":5354:5355  i */\n      swap2\n        /* \"contracts/LP.sol\":5176:5440  function findAvailableDuel() public view returns(uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/LP.sol\":5305:5366  if(duels[i].playersNow !=2) {... */\n    tag_412:\n        /* \"contracts/LP.sol\":5280:5283  i++ */\n      dup1\n      tag_413\n      dup2\n      tag_236\n      jump\t// in\n    tag_413:\n      swap2\n      pop\n      pop\n        /* \"contracts/LP.sol\":5245:5377  for (uint i = 0; i < duels.length; i++) {... */\n      jump(tag_406)\n    tag_407:\n      pop\n        /* \"contracts/LP.sol\":5387:5431  revert(\"could not find available duel room\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12241:12243   */\n      0x20\n        /* \"contracts/LP.sol\":5387:5431  revert(\"could not find available duel room\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12223:12244   */\n      mstore\n        /* \"#utility.yul\":12280:12282   */\n      0x22\n        /* \"#utility.yul\":12260:12278   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12253:12283   */\n      mstore\n        /* \"#utility.yul\":12319:12353   */\n      0x636f756c64206e6f742066696e6420617661696c61626c65206475656c20726f\n        /* \"#utility.yul\":12299:12317   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12292:12354   */\n      mstore\n      shl(0xf0, 0x6f6d)\n        /* \"#utility.yul\":12370:12388   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12363:12395   */\n      mstore\n        /* \"#utility.yul\":12412:12431   */\n      0x84\n      add\n        /* \"contracts/LP.sol\":5387:5431  revert(\"could not find available duel room\") */\n      tag_191\n        /* \"#utility.yul\":12039:12437   */\n      jump\n        /* \"contracts/LP.sol\":12442:13606  function getFinalTreasures(uint256[] memory _tokenIds) public payable  {... */\n    tag_154:\n        /* \"contracts/LP.sol\":12861:12871  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":12853:12872  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":12853:12860  players */\n      0x06\n        /* \"contracts/LP.sol\":12853:12872  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/LP.sol\":12853:12888  players[msg.sender].qtyBossDefeated */\n      sload\n        /* \"contracts/LP.sol\":12892:12893  3 */\n      0x03\n        /* \"contracts/LP.sol\":12853:12893  players[msg.sender].qtyBossDefeated == 3 */\n      eq\n        /* \"contracts/LP.sol\":12845:12927  require(players[msg.sender].qtyBossDefeated == 3, \"you have to defeat all bosses\") */\n      tag_417\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12644:12646   */\n      0x20\n        /* \"contracts/LP.sol\":12845:12927  require(players[msg.sender].qtyBossDefeated == 3, \"you have to defeat all bosses\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12626:12647   */\n      mstore\n        /* \"#utility.yul\":12683:12685   */\n      0x1d\n        /* \"#utility.yul\":12663:12681   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12656:12686   */\n      mstore\n        /* \"#utility.yul\":12722:12753   */\n      0x796f75206861766520746f2064656665617420616c6c20626f73736573000000\n        /* \"#utility.yul\":12702:12720   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12695:12754   */\n      mstore\n        /* \"#utility.yul\":12771:12789   */\n      0x64\n      add\n        /* \"contracts/LP.sol\":12845:12927  require(players[msg.sender].qtyBossDefeated == 3, \"you have to defeat all bosses\") */\n      tag_191\n        /* \"#utility.yul\":12442:12795   */\n      jump\n        /* \"contracts/LP.sol\":12845:12927  require(players[msg.sender].qtyBossDefeated == 3, \"you have to defeat all bosses\") */\n    tag_417:\n        /* \"contracts/LP.sol\":12944:12978  checkOwnershipOfTokens( _tokenIds) */\n      tag_420\n        /* \"contracts/LP.sol\":12968:12977  _tokenIds */\n      dup2\n        /* \"contracts/LP.sol\":12944:12966  checkOwnershipOfTokens */\n      tag_142\n        /* \"contracts/LP.sol\":12944:12978  checkOwnershipOfTokens( _tokenIds) */\n      jump\t// in\n    tag_420:\n        /* \"contracts/LP.sol\":12936:13017  require(checkOwnershipOfTokens( _tokenIds), \"you're not owner of these tokenIds\") */\n      tag_421\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13002:13004   */\n      0x20\n        /* \"contracts/LP.sol\":12936:13017  require(checkOwnershipOfTokens( _tokenIds), \"you're not owner of these tokenIds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12984:13005   */\n      mstore\n        /* \"#utility.yul\":13041:13043   */\n      0x22\n        /* \"#utility.yul\":13021:13039   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13014:13044   */\n      mstore\n        /* \"#utility.yul\":13080:13114   */\n      0x796f75277265206e6f74206f776e6572206f6620746865736520746f6b656e49\n        /* \"#utility.yul\":13060:13078   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13053:13115   */\n      mstore\n      shl(0xf0, 0x6473)\n        /* \"#utility.yul\":13131:13149   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13124:13156   */\n      mstore\n        /* \"#utility.yul\":13173:13192   */\n      0x84\n      add\n        /* \"contracts/LP.sol\":12936:13017  require(checkOwnershipOfTokens( _tokenIds), \"you're not owner of these tokenIds\") */\n      tag_191\n        /* \"#utility.yul\":12800:13198   */\n      jump\n        /* \"contracts/LP.sol\":12936:13017  require(checkOwnershipOfTokens( _tokenIds), \"you're not owner of these tokenIds\") */\n    tag_421:\n        /* \"contracts/LP.sol\":13035:13071  isTokensClaimedTreasures( _tokenIds) */\n      tag_424\n        /* \"contracts/LP.sol\":13061:13070  _tokenIds */\n      dup2\n        /* \"contracts/LP.sol\":13035:13059  isTokensClaimedTreasures */\n      tag_180\n        /* \"contracts/LP.sol\":13035:13071  isTokensClaimedTreasures( _tokenIds) */\n      jump\t// in\n    tag_424:\n        /* \"contracts/LP.sol\":13034:13071  !isTokensClaimedTreasures( _tokenIds) */\n      iszero\n        /* \"contracts/LP.sol\":13026:13095  require(!isTokensClaimedTreasures( _tokenIds), \"tokens were claimed\") */\n      tag_425\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13405:13407   */\n      0x20\n        /* \"contracts/LP.sol\":13026:13095  require(!isTokensClaimedTreasures( _tokenIds), \"tokens were claimed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13387:13408   */\n      mstore\n        /* \"#utility.yul\":13444:13446   */\n      0x13\n        /* \"#utility.yul\":13424:13442   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13417:13447   */\n      mstore\n      shl(0x6a, 0x1d1bdad95b9cc81dd95c994818db185a5b5959)\n        /* \"#utility.yul\":13463:13481   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13456:13505   */\n      mstore\n        /* \"#utility.yul\":13522:13540   */\n      0x64\n      add\n        /* \"contracts/LP.sol\":13026:13095  require(!isTokensClaimedTreasures( _tokenIds), \"tokens were claimed\") */\n      tag_191\n        /* \"#utility.yul\":13203:13546   */\n      jump\n        /* \"contracts/LP.sol\":13026:13095  require(!isTokensClaimedTreasures( _tokenIds), \"tokens were claimed\") */\n    tag_425:\n        /* \"contracts/LP.sol\":13107:13125  uint totalMsgValue */\n      0x00\n      dup1\n        /* \"contracts/LP.sol\":13136:13516  for (uint i = 0; i < _tokenIds.length; i++) {... */\n    tag_428:\n        /* \"contracts/LP.sol\":13157:13166  _tokenIds */\n      dup3\n        /* \"contracts/LP.sol\":13157:13173  _tokenIds.length */\n      mload\n        /* \"contracts/LP.sol\":13153:13154  i */\n      dup2\n        /* \"contracts/LP.sol\":13153:13173  i < _tokenIds.length */\n      lt\n        /* \"contracts/LP.sol\":13136:13516  for (uint i = 0; i < _tokenIds.length; i++) {... */\n      iszero\n      tag_429\n      jumpi\n        /* \"contracts/LP.sol\":13228:13232  true */\n      0x01\n        /* \"contracts/LP.sol\":13195:13211  isTokenIdClaimed */\n      0x0b\n        /* \"contracts/LP.sol\":13195:13225  isTokenIdClaimed[_tokenIds[i]] */\n      0x00\n        /* \"contracts/LP.sol\":13212:13221  _tokenIds */\n      dup6\n        /* \"contracts/LP.sol\":13222:13223  i */\n      dup5\n        /* \"contracts/LP.sol\":13212:13224  _tokenIds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_432\n      jumpi\n      tag_432\n      tag_195\n      jump\t// in\n    tag_432:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/LP.sol\":13195:13225  isTokenIdClaimed[_tokenIds[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/LP.sol\":13195:13232  isTokenIdClaimed[_tokenIds[i]] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LP.sol\":13246:13257  uint chance */\n      0x00\n        /* \"contracts/LP.sol\":13260:13270  random(10) */\n      tag_433\n        /* \"contracts/LP.sol\":13267:13269  10 */\n      0x0a\n        /* \"contracts/LP.sol\":13260:13266  random */\n      tag_136\n        /* \"contracts/LP.sol\":13260:13270  random(10) */\n      jump\t// in\n    tag_433:\n        /* \"contracts/LP.sol\":13246:13270  uint chance = random(10) */\n      swap1\n      pop\n        /* \"contracts/LP.sol\":13293:13294  2 */\n      0x02\n        /* \"contracts/LP.sol\":13284:13290  chance */\n      dup2\n        /* \"contracts/LP.sol\":13284:13294  chance <=2 */\n      gt\n        /* \"contracts/LP.sol\":13281:13515  if(chance <=2) {... */\n      tag_434\n      jumpi\n        /* \"contracts/LP.sol\":13328:13338  Collection */\n      sload(0x01)\n        /* \"contracts/LP.sol\":13328:13352  Collection.viewNFTCost() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xa9113247)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/LP.sol\":13360:13363  100 */\n      0x64\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LP.sol\":13328:13338  Collection */\n      and\n      swap2\n        /* \"contracts/LP.sol\":13328:13350  Collection.viewNFTCost */\n      0xa9113247\n      swap2\n        /* \"contracts/LP.sol\":13328:13352  Collection.viewNFTCost() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/LP.sol\":13328:13338  Collection */\n      dup7\n        /* \"contracts/LP.sol\":13328:13352  Collection.viewNFTCost() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_436\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_436:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_437\n      swap2\n      swap1\n      tag_438\n      jump\t// in\n    tag_437:\n        /* \"contracts/LP.sol\":13328:13357  Collection.viewNFTCost() * 20 */\n      tag_439\n      swap1\n        /* \"contracts/LP.sol\":13355:13357  20 */\n      0x14\n        /* \"contracts/LP.sol\":13328:13357  Collection.viewNFTCost() * 20 */\n      tag_229\n      jump\t// in\n    tag_439:\n        /* \"contracts/LP.sol\":13327:13363  (Collection.viewNFTCost() * 20) /100 */\n      tag_440\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_440:\n        /* \"contracts/LP.sol\":13310:13363  totalMsgValue += (Collection.viewNFTCost() * 20) /100 */\n      tag_441\n      swap1\n      dup5\n      tag_234\n      jump\t// in\n    tag_441:\n        /* \"contracts/LP.sol\":13382:13392  Collection */\n      0x01\n      dup1\n      sload\n        /* \"contracts/LP.sol\":13382:13408  Collection.mintFromGame(1) */\n      mload(0x40)\n      shl(0xe1, 0x4261cadd)\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":13310:13363  totalMsgValue += (Collection.viewNFTCost() * 20) /100 */\n      swap3\n      swap6\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LP.sol\":13382:13392  Collection */\n      and\n      swap2\n        /* \"contracts/LP.sol\":13382:13405  Collection.mintFromGame */\n      0x84c395ba\n      swap2\n        /* \"contracts/LP.sol\":13382:13408  Collection.mintFromGame(1) */\n      tag_442\n      swap2\n      0x04\n      add\n        /* \"#utility.yul\":1481:1506   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1469:1471   */\n      0x20\n        /* \"#utility.yul\":1454:1472   */\n      add\n      swap1\n        /* \"#utility.yul\":1335:1512   */\n      jump\n        /* \"contracts/LP.sol\":13382:13408  Collection.mintFromGame(1) */\n    tag_442:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_444\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_444:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_446\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_446:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/LP.sol\":13281:13515  if(chance <=2) {... */\n      jump(tag_447)\n    tag_434:\n        /* \"contracts/LP.sol\":13448:13455  LPToken */\n      sload(0x02)\n        /* \"contracts/LP.sol\":13448:13502  LPToken.transferFrom(address(this), msg.sender, 10000) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":13477:13481  this */\n      address\n        /* \"contracts/LP.sol\":13448:13502  LPToken.transferFrom(address(this), msg.sender, 10000) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10052:10086   */\n      mstore\n        /* \"contracts/LP.sol\":13484:13494  msg.sender */\n      caller\n        /* \"#utility.yul\":10102:10120   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10095:10138   */\n      mstore\n        /* \"contracts/LP.sol\":13496:13501  10000 */\n      0x2710\n        /* \"#utility.yul\":10154:10172   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10147:10181   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LP.sol\":13448:13455  LPToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/LP.sol\":13448:13468  LPToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":9987:10005   */\n      0x64\n      add\n        /* \"contracts/LP.sol\":13448:13502  LPToken.transferFrom(address(this), msg.sender, 10000) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_451\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_451:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_452\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_452:\n      pop\n        /* \"contracts/LP.sol\":13281:13515  if(chance <=2) {... */\n    tag_447:\n      pop\n        /* \"contracts/LP.sol\":13175:13178  i++ */\n      dup1\n      tag_453\n      dup2\n      tag_236\n      jump\t// in\n    tag_453:\n      swap2\n      pop\n      pop\n        /* \"contracts/LP.sol\":13136:13516  for (uint i = 0; i < _tokenIds.length; i++) {... */\n      jump(tag_428)\n    tag_429:\n      pop\n        /* \"contracts/LP.sol\":13548:13561  totalMsgValue */\n      dup1\n        /* \"contracts/LP.sol\":13535:13544  msg.value */\n      callvalue\n        /* \"contracts/LP.sol\":13535:13561  msg.value >= totalMsgValue */\n      lt\n      iszero\n        /* \"contracts/LP.sol\":13527:13584  require(msg.value >= totalMsgValue, \"insufficient funds\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14524:14526   */\n      0x20\n        /* \"contracts/LP.sol\":13527:13584  require(msg.value >= totalMsgValue, \"insufficient funds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14506:14527   */\n      mstore\n        /* \"#utility.yul\":14563:14565   */\n      0x12\n        /* \"#utility.yul\":14543:14561   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14536:14566   */\n      mstore\n      shl(0x70, 0x696e73756666696369656e742066756e6473)\n        /* \"#utility.yul\":14582:14600   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14575:14623   */\n      mstore\n        /* \"#utility.yul\":14640:14658   */\n      0x64\n      add\n        /* \"contracts/LP.sol\":13527:13584  require(msg.value >= totalMsgValue, \"insufficient funds\") */\n      tag_191\n        /* \"#utility.yul\":14322:14664   */\n      jump\n        /* \"contracts/LP.sol\":9299:9844  function claimDailyEnergy() public {... */\n    tag_157:\n        /* \"contracts/LP.sol\":9558:9568  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":9550:9569  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":9550:9557  players */\n      0x06\n        /* \"contracts/LP.sol\":9550:9569  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/LP.sol\":9550:9596  players[msg.sender].lastTimestampClaimedEnergy */\n      0x04\n      add\n      sload\n        /* \"contracts/LP.sol\":9550:9605  players[msg.sender].lastTimestampClaimedEnergy + 1 days */\n      tag_458\n      swap1\n        /* \"contracts/LP.sol\":9599:9605  1 days */\n      0x015180\n        /* \"contracts/LP.sol\":9550:9605  players[msg.sender].lastTimestampClaimedEnergy + 1 days */\n      tag_234\n      jump\t// in\n    tag_458:\n        /* \"contracts/LP.sol\":9515:9530  block.timestamp */\n      timestamp\n        /* \"contracts/LP.sol\":9515:9605  block.timestamp >=... */\n      lt\n      iszero\n        /* \"contracts/LP.sol\":9494:9640  require(... */\n      tag_459\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14871:14873   */\n      0x20\n        /* \"contracts/LP.sol\":9494:9640  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14853:14874   */\n      mstore\n        /* \"#utility.yul\":14910:14911   */\n      0x09\n        /* \"#utility.yul\":14890:14908   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14883:14912   */\n      mstore\n      shl(0xb9, 0x3a393c903630ba32b9)\n        /* \"#utility.yul\":14928:14946   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14921:14960   */\n      mstore\n        /* \"#utility.yul\":14977:14995   */\n      0x64\n      add\n        /* \"contracts/LP.sol\":9494:9640  require(... */\n      tag_191\n        /* \"#utility.yul\":14669:15001   */\n      jump\n        /* \"contracts/LP.sol\":9494:9640  require(... */\n    tag_459:\n        /* \"contracts/LP.sol\":9659:9669  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":9651:9670  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":9651:9658  players */\n      0x06\n        /* \"contracts/LP.sol\":9651:9670  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/LP.sol\":9700:9715  block.timestamp */\n      timestamp\n        /* \"contracts/LP.sol\":9651:9697  players[msg.sender].lastTimestampClaimedEnergy */\n      0x04\n      dup3\n      add\n        /* \"contracts/LP.sol\":9651:9715  players[msg.sender].lastTimestampClaimedEnergy = block.timestamp */\n      sstore\n        /* \"contracts/LP.sol\":9805:9837  players[msg.sender].energyFactor */\n      0x01\n      add\n      sload\n        /* \"contracts/LP.sol\":9774:9790  defEnergyAccrual */\n      sload(0x03)\n        /* \"contracts/LP.sol\":9774:9837  defEnergyAccrual *... */\n      tag_462\n      swap2\n        /* \"contracts/LP.sol\":9805:9837  players[msg.sender].energyFactor */\n      swap1\n        /* \"contracts/LP.sol\":9774:9837  defEnergyAccrual *... */\n      tag_229\n      jump\t// in\n    tag_462:\n        /* \"contracts/LP.sol\":9733:9743  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":9725:9744  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":9725:9732  players */\n      0x06\n        /* \"contracts/LP.sol\":9725:9744  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/LP.sol\":9725:9758  players[msg.sender].energyBalance */\n      0x02\n      add\n        /* \"contracts/LP.sol\":9725:9837  players[msg.sender].energyBalance +=... */\n      dup1\n      sload\n        /* \"contracts/LP.sol\":9725:9758  players[msg.sender].energyBalance */\n      swap1\n      swap2\n        /* \"contracts/LP.sol\":9725:9744  players[msg.sender] */\n      swap1\n        /* \"contracts/LP.sol\":9725:9837  players[msg.sender].energyBalance +=... */\n      tag_463\n      swap1\n      dup5\n      swap1\n      tag_234\n      jump\t// in\n    tag_463:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/LP.sol\":9299:9844  function claimDailyEnergy() public {... */\n      jump\t// out\n        /* \"contracts/LP.sol\":15077:16019  function claimBonus(uint _orderPosition) public {... */\n    tag_166:\n        /* \"contracts/LP.sol\":15216:15226  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":15208:15227  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":15208:15215  players */\n      0x06\n        /* \"contracts/LP.sol\":15208:15227  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/LP.sol\":15208:15243  players[msg.sender].qtyBossDefeated */\n      sload\n        /* \"contracts/LP.sol\":15208:15261  players[msg.sender].qtyBossDefeated >= _orderPosition */\n      dup2\n      gt\n      iszero\n        /* \"contracts/LP.sol\":15200:15301  require(players[msg.sender].qtyBossDefeated >= _orderPosition, \"before you need beat necessary boss\") */\n      tag_465\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_280\n      jump\t// in\n    tag_465:\n        /* \"contracts/LP.sol\":15657:15667  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":15644:15668  RiseClaimMap[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":15644:15656  RiseClaimMap */\n      0x0c\n        /* \"contracts/LP.sol\":15644:15668  RiseClaimMap[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/LP.sol\":15669:15685  _orderPosition-1 */\n      tag_467\n        /* \"contracts/LP.sol\":15684:15685  1 */\n      0x01\n        /* \"contracts/LP.sol\":15669:15683  _orderPosition */\n      dup4\n        /* \"contracts/LP.sol\":15669:15685  _orderPosition-1 */\n      tag_238\n      jump\t// in\n    tag_467:\n        /* \"contracts/LP.sol\":15644:15686  RiseClaimMap[msg.sender][_orderPosition-1] */\n      0x05\n      dup2\n      lt\n      tag_469\n      jumpi\n      tag_469\n      tag_195\n      jump\t// in\n    tag_469:\n      0x20\n      dup2\n      div\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      0x1f\n      swap1\n      swap3\n      and\n      0x0100\n      exp\n      swap1\n      div\n      and\n        /* \"contracts/LP.sol\":15643:15686  !RiseClaimMap[msg.sender][_orderPosition-1] */\n      iszero\n        /* \"contracts/LP.sol\":15635:15724  require(!RiseClaimMap[msg.sender][_orderPosition-1], \"you're already claimed this bonus\") */\n      tag_471\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15208:15210   */\n      0x20\n        /* \"contracts/LP.sol\":15635:15724  require(!RiseClaimMap[msg.sender][_orderPosition-1], \"you're already claimed this bonus\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15190:15211   */\n      mstore\n        /* \"#utility.yul\":15247:15249   */\n      0x21\n        /* \"#utility.yul\":15227:15245   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15220:15250   */\n      mstore\n        /* \"#utility.yul\":15286:15320   */\n      0x796f7527726520616c726561647920636c61696d6564207468697320626f6e75\n        /* \"#utility.yul\":15266:15284   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15259:15321   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":15337:15355   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15330:15361   */\n      mstore\n        /* \"#utility.yul\":15378:15397   */\n      0x84\n      add\n        /* \"contracts/LP.sol\":15635:15724  require(!RiseClaimMap[msg.sender][_orderPosition-1], \"you're already claimed this bonus\") */\n      tag_191\n        /* \"#utility.yul\":15006:15403   */\n      jump\n        /* \"contracts/LP.sol\":15635:15724  require(!RiseClaimMap[msg.sender][_orderPosition-1], \"you're already claimed this bonus\") */\n    tag_471:\n        /* \"contracts/LP.sol\":15735:15746  uint chance */\n      0x00\n        /* \"contracts/LP.sol\":15749:15759  random(10) */\n      tag_474\n        /* \"contracts/LP.sol\":15756:15758  10 */\n      0x0a\n        /* \"contracts/LP.sol\":15749:15755  random */\n      tag_136\n        /* \"contracts/LP.sol\":15749:15759  random(10) */\n      jump\t// in\n    tag_474:\n        /* \"contracts/LP.sol\":15735:15759  uint chance = random(10) */\n      swap1\n      pop\n        /* \"contracts/LP.sol\":15783:15784  2 */\n      0x02\n        /* \"contracts/LP.sol\":15774:15780  chance */\n      dup2\n        /* \"contracts/LP.sol\":15774:15784  chance <=2 */\n      gt\n        /* \"contracts/LP.sol\":15771:15944  if(chance <=2) {... */\n      tag_475\n      jumpi\n        /* \"contracts/LP.sol\":15808:15818  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":15800:15819  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":15800:15807  players */\n      0x06\n        /* \"contracts/LP.sol\":15800:15819  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/LP.sol\":15800:15832  players[msg.sender].energyFactor */\n      0x01\n      add\n        /* \"contracts/LP.sol\":15800:15838  players[msg.sender].energyFactor += 10 */\n      dup1\n      sload\n        /* \"contracts/LP.sol\":15836:15838  10 */\n      0x0a\n      swap3\n        /* \"contracts/LP.sol\":15800:15819  players[msg.sender] */\n      swap1\n        /* \"contracts/LP.sol\":15800:15838  players[msg.sender].energyFactor += 10 */\n      tag_476\n      swap1\n        /* \"contracts/LP.sol\":15836:15838  10 */\n      dup5\n      swap1\n        /* \"contracts/LP.sol\":15800:15838  players[msg.sender].energyFactor += 10 */\n      tag_234\n      jump\t// in\n    tag_476:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/LP.sol\":15771:15944  if(chance <=2) {... */\n      tag_477\n      swap1\n      pop\n      jump\n    tag_475:\n        /* \"contracts/LP.sol\":15895:15905  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":15887:15906  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":15887:15894  players */\n      0x06\n        /* \"contracts/LP.sol\":15887:15906  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/LP.sol\":15887:15920  players[msg.sender].energyBalance */\n      0x02\n      add\n        /* \"contracts/LP.sol\":15887:15928  players[msg.sender].energyBalance += 1000 */\n      dup1\n      sload\n        /* \"contracts/LP.sol\":15924:15928  1000 */\n      0x03e8\n      swap3\n        /* \"contracts/LP.sol\":15887:15906  players[msg.sender] */\n      swap1\n        /* \"contracts/LP.sol\":15887:15928  players[msg.sender].energyBalance += 1000 */\n      tag_292\n      swap1\n        /* \"contracts/LP.sol\":15924:15928  1000 */\n      dup5\n      swap1\n        /* \"contracts/LP.sol\":15887:15928  players[msg.sender].energyBalance += 1000 */\n      tag_234\n      jump\t// in\n        /* \"contracts/LP.sol\":15771:15944  if(chance <=2) {... */\n    tag_477:\n        /* \"contracts/LP.sol\":15975:15985  msg.sender */\n      caller\n        /* \"contracts/LP.sol\":15962:15986  RiseClaimMap[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LP.sol\":15962:15974  RiseClaimMap */\n      0x0c\n        /* \"contracts/LP.sol\":15962:15986  RiseClaimMap[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/LP.sol\":16007:16011  true */\n      0x01\n      swap1\n        /* \"contracts/LP.sol\":15987:16003  _orderPosition-1 */\n      tag_293\n        /* \"contracts/LP.sol\":16007:16011  true */\n      dup3\n        /* \"contracts/LP.sol\":15987:16001  _orderPosition */\n      dup6\n        /* \"contracts/LP.sol\":15987:16003  _orderPosition-1 */\n      tag_238\n      jump\t// in\n        /* \"contracts/LP.sol\":5972:6781  function claimDuel() public view returns (uint256) {... */\n    tag_169:\n        /* \"contracts/LP.sol\":6014:6021  uint256 */\n      0x00\n        /* \"contracts/LP.sol\":6134:6162  duelInfo storage currentDuel */\n      dup1\n        /* \"contracts/LP.sol\":6165:6170  duels */\n      0x08\n        /* \"contracts/LP.sol\":6171:6190  findAvailableDuel() */\n      tag_484\n        /* \"contracts/LP.sol\":6171:6188  findAvailableDuel */\n      tag_150\n        /* \"contracts/LP.sol\":6171:6190  findAvailableDuel() */\n      jump\t// in\n    tag_484:\n        /* \"contracts/LP.sol\":6165:6191  duels[findAvailableDuel()] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_486\n      jumpi\n      tag_486\n      tag_195\n      jump\t// in\n    tag_486:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/LP.sol\":6134:6191  duelInfo storage currentDuel = duels[findAvailableDuel()] */\n      swap1\n      pop\n        /* \"contracts/LP.sol\":6203:6222  uint256 winnerIndex */\n      0x00\n        /* \"contracts/LP.sol\":6269:6280  currentDuel */\n      dup2\n        /* \"contracts/LP.sol\":6269:6299  currentDuel.totalDamagePlayer1 */\n      0x04\n      add\n      sload\n        /* \"contracts/LP.sol\":6236:6247  currentDuel */\n      dup3\n        /* \"contracts/LP.sol\":6236:6266  currentDuel.totalDamagePlayer0 */\n      0x03\n      add\n      sload\n        /* \"contracts/LP.sol\":6236:6299  currentDuel.totalDamagePlayer0 > currentDuel.totalDamagePlayer1 */\n      gt\n        /* \"contracts/LP.sol\":6232:6387  if (currentDuel.totalDamagePlayer0 > currentDuel.totalDamagePlayer1) {... */\n      iszero\n      tag_488\n      jumpi\n      pop\n        /* \"contracts/LP.sol\":6329:6330  0 */\n      0x00\n        /* \"contracts/LP.sol\":6232:6387  if (currentDuel.totalDamagePlayer0 > currentDuel.totalDamagePlayer1) {... */\n      jump(tag_489)\n    tag_488:\n      pop\n        /* \"contracts/LP.sol\":6375:6376  1 */\n      0x01\n        /* \"contracts/LP.sol\":6232:6387  if (currentDuel.totalDamagePlayer0 > currentDuel.totalDamagePlayer1) {... */\n    tag_489:\n        /* \"contracts/LP.sol\":6773:6774  1 */\n      0x01\n        /* \"contracts/LP.sol\":6766:6774  return 1 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/LP.sol\":5972:6781  function claimDuel() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/LP.sol\":12074:12364  function isTokensClaimedTreasures(uint256[] memory _tokenIds) public view returns(bool) {... */\n    tag_180:\n        /* \"contracts/LP.sol\":12156:12160  bool */\n      0x00\n      dup1\n        /* \"contracts/LP.sol\":12179:12333  for (uint i = 0; i < _tokenIds.length; i++) ... */\n    tag_491:\n        /* \"contracts/LP.sol\":12200:12209  _tokenIds */\n      dup3\n        /* \"contracts/LP.sol\":12200:12216  _tokenIds.length */\n      mload\n        /* \"contracts/LP.sol\":12196:12197  i */\n      dup2\n        /* \"contracts/LP.sol\":12196:12216  i < _tokenIds.length */\n      lt\n        /* \"contracts/LP.sol\":12179:12333  for (uint i = 0; i < _tokenIds.length; i++) ... */\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/LP.sol\":12248:12264  isTokenIdClaimed */\n      0x0b\n        /* \"contracts/LP.sol\":12248:12278  isTokenIdClaimed[_tokenIds[i]] */\n      0x00\n        /* \"contracts/LP.sol\":12265:12274  _tokenIds */\n      dup5\n        /* \"contracts/LP.sol\":12275:12276  i */\n      dup4\n        /* \"contracts/LP.sol\":12265:12277  _tokenIds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_495\n      jumpi\n      tag_495\n      tag_195\n      jump\t// in\n    tag_495:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/LP.sol\":12248:12278  isTokenIdClaimed[_tokenIds[i]] */\n      dup3\n      mstore\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/LP.sol\":12245:12323  if(isTokenIdClaimed[_tokenIds[i]] ) {... */\n      iszero\n      tag_496\n      jumpi\n      pop\n        /* \"contracts/LP.sol\":12305:12309  true */\n      0x01\n      swap3\n        /* \"contracts/LP.sol\":12074:12364  function isTokensClaimedTreasures(uint256[] memory _tokenIds) public view returns(bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LP.sol\":12245:12323  if(isTokenIdClaimed[_tokenIds[i]] ) {... */\n    tag_496:\n        /* \"contracts/LP.sol\":12218:12221  i++ */\n      dup1\n      tag_497\n      dup2\n      tag_236\n      jump\t// in\n    tag_497:\n      swap2\n      pop\n      pop\n        /* \"contracts/LP.sol\":12179:12333  for (uint i = 0; i < _tokenIds.length; i++) ... */\n      jump(tag_491)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_499\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_321\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_499:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_501\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15610:15612   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15592:15613   */\n      mstore\n        /* \"#utility.yul\":15649:15651   */\n      0x26\n        /* \"#utility.yul\":15629:15647   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15622:15652   */\n      mstore\n        /* \"#utility.yul\":15688:15722   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":15668:15686   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15661:15723   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":15739:15757   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15732:15768   */\n      mstore\n        /* \"#utility.yul\":15785:15804   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_191\n        /* \"#utility.yul\":15408:15810   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_501:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_504\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_324\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_504:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/LP.sol\":13612:13709  function testMintDirectFromGame() public {... */\n    tag_188:\n        /* \"contracts/LP.sol\":13675:13685  Collection */\n      0x01\n      dup1\n      sload\n        /* \"contracts/LP.sol\":13675:13701  Collection.mintFromGame(1) */\n      mload(0x40)\n      shl(0xe1, 0x4261cadd)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1481:1506   */\n      swap3\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LP.sol\":13675:13685  Collection */\n      and\n      swap1\n        /* \"contracts/LP.sol\":13675:13698  Collection.mintFromGame */\n      0x84c395ba\n      swap1\n        /* \"#utility.yul\":1454:1472   */\n      0x24\n      add\n        /* \"contracts/LP.sol\":13675:13701  Collection.mintFromGame(1) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_507\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_507:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_247\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_321:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16017:16019   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15999:16020   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":16036:16054   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16029:16059   */\n      mstore\n        /* \"#utility.yul\":16095:16129   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":16075:16093   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16068:16130   */\n      mstore\n        /* \"#utility.yul\":16147:16165   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_191\n        /* \"#utility.yul\":15815:16171   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n    tag_208:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      swap1\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      swap2\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_211:\n      dup3\n      0x02\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_521\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_520:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_521\n      jumpi\n      dup3\n      mload\n      dup3\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      or\n      dup3\n      sstore\n      0x20\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      jump(tag_520)\n    tag_521:\n      pop\n      tag_522\n      swap3\n      swap2\n      pop\n      tag_523\n      jump\t// in\n    tag_522:\n      pop\n      swap1\n      jump\t// out\n    tag_378:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_504\n      swap2\n      swap1\n    tag_523:\n    tag_526:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_522\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_526)\n        /* \"#utility.yul\":14:194   */\n    tag_45:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_534:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":715:1330   */\n    tag_69:\n        /* \"#utility.yul\":801:807   */\n      0x00\n        /* \"#utility.yul\":809:815   */\n      dup1\n        /* \"#utility.yul\":862:864   */\n      0x20\n        /* \"#utility.yul\":850:859   */\n      dup4\n        /* \"#utility.yul\":841:848   */\n      dup6\n        /* \"#utility.yul\":837:860   */\n      sub\n        /* \"#utility.yul\":833:865   */\n      slt\n        /* \"#utility.yul\":830:882   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":878:879   */\n      0x00\n        /* \"#utility.yul\":875:876   */\n      dup1\n        /* \"#utility.yul\":868:880   */\n      revert\n        /* \"#utility.yul\":830:882   */\n    tag_538:\n        /* \"#utility.yul\":918:927   */\n      dup3\n        /* \"#utility.yul\":905:928   */\n      calldataload\n        /* \"#utility.yul\":947:965   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":988:990   */\n      dup1\n        /* \"#utility.yul\":980:986   */\n      dup3\n        /* \"#utility.yul\":977:991   */\n      gt\n        /* \"#utility.yul\":974:1008   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":1004:1005   */\n      0x00\n        /* \"#utility.yul\":1001:1002   */\n      dup1\n        /* \"#utility.yul\":994:1006   */\n      revert\n        /* \"#utility.yul\":974:1008   */\n    tag_539:\n        /* \"#utility.yul\":1042:1048   */\n      dup2\n        /* \"#utility.yul\":1031:1040   */\n      dup6\n        /* \"#utility.yul\":1027:1049   */\n      add\n        /* \"#utility.yul\":1017:1049   */\n      swap2\n      pop\n        /* \"#utility.yul\":1087:1094   */\n      dup6\n        /* \"#utility.yul\":1080:1084   */\n      0x1f\n        /* \"#utility.yul\":1076:1078   */\n      dup4\n        /* \"#utility.yul\":1072:1085   */\n      add\n        /* \"#utility.yul\":1068:1095   */\n      slt\n        /* \"#utility.yul\":1058:1113   */\n      tag_540\n      jumpi\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1106:1107   */\n      dup1\n        /* \"#utility.yul\":1099:1111   */\n      revert\n        /* \"#utility.yul\":1058:1113   */\n    tag_540:\n        /* \"#utility.yul\":1149:1151   */\n      dup2\n        /* \"#utility.yul\":1136:1152   */\n      calldataload\n        /* \"#utility.yul\":1175:1177   */\n      dup2\n        /* \"#utility.yul\":1167:1173   */\n      dup2\n        /* \"#utility.yul\":1164:1178   */\n      gt\n        /* \"#utility.yul\":1161:1195   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":1191:1192   */\n      0x00\n        /* \"#utility.yul\":1188:1189   */\n      dup1\n        /* \"#utility.yul\":1181:1193   */\n      revert\n        /* \"#utility.yul\":1161:1195   */\n    tag_541:\n        /* \"#utility.yul\":1244:1251   */\n      dup7\n        /* \"#utility.yul\":1239:1241   */\n      0x20\n        /* \"#utility.yul\":1229:1235   */\n      dup3\n        /* \"#utility.yul\":1226:1227   */\n      0x05\n        /* \"#utility.yul\":1222:1236   */\n      shl\n        /* \"#utility.yul\":1218:1220   */\n      dup6\n        /* \"#utility.yul\":1214:1237   */\n      add\n        /* \"#utility.yul\":1210:1242   */\n      add\n        /* \"#utility.yul\":1207:1252   */\n      gt\n        /* \"#utility.yul\":1204:1269   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":1265:1266   */\n      0x00\n        /* \"#utility.yul\":1262:1263   */\n      dup1\n        /* \"#utility.yul\":1255:1267   */\n      revert\n        /* \"#utility.yul\":1204:1269   */\n    tag_542:\n        /* \"#utility.yul\":1296:1298   */\n      0x20\n        /* \"#utility.yul\":1288:1299   */\n      swap3\n      swap1\n      swap3\n      add\n      swap7\n        /* \"#utility.yul\":1318:1324   */\n      swap2\n      swap6\n      pop\n        /* \"#utility.yul\":715:1330   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1517:1648   */\n    tag_528:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1592:1623   */\n      dup2\n      and\n        /* \"#utility.yul\":1582:1624   */\n      dup2\n      eq\n        /* \"#utility.yul\":1572:1642   */\n      tag_504\n      jumpi\n        /* \"#utility.yul\":1638:1639   */\n      0x00\n        /* \"#utility.yul\":1635:1636   */\n      dup1\n        /* \"#utility.yul\":1628:1640   */\n      revert\n        /* \"#utility.yul\":1653:1900   */\n    tag_83:\n        /* \"#utility.yul\":1712:1718   */\n      0x00\n        /* \"#utility.yul\":1765:1767   */\n      0x20\n        /* \"#utility.yul\":1753:1762   */\n      dup3\n        /* \"#utility.yul\":1744:1751   */\n      dup5\n        /* \"#utility.yul\":1740:1763   */\n      sub\n        /* \"#utility.yul\":1736:1768   */\n      slt\n        /* \"#utility.yul\":1733:1785   */\n      iszero\n      tag_547\n      jumpi\n        /* \"#utility.yul\":1781:1782   */\n      0x00\n        /* \"#utility.yul\":1778:1779   */\n      dup1\n        /* \"#utility.yul\":1771:1783   */\n      revert\n        /* \"#utility.yul\":1733:1785   */\n    tag_547:\n        /* \"#utility.yul\":1820:1829   */\n      dup2\n        /* \"#utility.yul\":1807:1830   */\n      calldataload\n        /* \"#utility.yul\":1839:1870   */\n      tag_548\n        /* \"#utility.yul\":1864:1869   */\n      dup2\n        /* \"#utility.yul\":1839:1870   */\n      tag_528\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":1889:1894   */\n      swap4\n        /* \"#utility.yul\":1653:1900   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1905:2931   */\n    tag_86:\n        /* \"#utility.yul\":2043:2047   */\n      0x00\n        /* \"#utility.yul\":2072:2074   */\n      0x20\n        /* \"#utility.yul\":2101:2103   */\n      dup1\n        /* \"#utility.yul\":2090:2099   */\n      dup4\n        /* \"#utility.yul\":2083:2104   */\n      mstore\n        /* \"#utility.yul\":2142:2145   */\n      0xe0\n        /* \"#utility.yul\":2131:2140   */\n      dup4\n        /* \"#utility.yul\":2127:2146   */\n      add\n        /* \"#utility.yul\":2188:2194   */\n      dup5\n        /* \"#utility.yul\":2182:2195   */\n      mload\n        /* \"#utility.yul\":2177:2179   */\n      dup3\n        /* \"#utility.yul\":2166:2175   */\n      dup6\n        /* \"#utility.yul\":2162:2180   */\n      add\n        /* \"#utility.yul\":2155:2196   */\n      mstore\n        /* \"#utility.yul\":2250:2252   */\n      dup2\n        /* \"#utility.yul\":2242:2248   */\n      dup6\n        /* \"#utility.yul\":2238:2253   */\n      add\n        /* \"#utility.yul\":2232:2254   */\n      mload\n        /* \"#utility.yul\":2227:2229   */\n      0x40\n        /* \"#utility.yul\":2216:2225   */\n      dup6\n        /* \"#utility.yul\":2212:2230   */\n      add\n        /* \"#utility.yul\":2205:2255   */\n      mstore\n        /* \"#utility.yul\":2309:2311   */\n      0x40\n        /* \"#utility.yul\":2301:2307   */\n      dup6\n        /* \"#utility.yul\":2297:2312   */\n      add\n        /* \"#utility.yul\":2291:2313   */\n      mload\n        /* \"#utility.yul\":2286:2288   */\n      0x60\n        /* \"#utility.yul\":2275:2284   */\n      dup6\n        /* \"#utility.yul\":2271:2289   */\n      add\n        /* \"#utility.yul\":2264:2314   */\n      mstore\n        /* \"#utility.yul\":2369:2371   */\n      0x60\n        /* \"#utility.yul\":2361:2367   */\n      dup6\n        /* \"#utility.yul\":2357:2372   */\n      add\n        /* \"#utility.yul\":2351:2373   */\n      mload\n        /* \"#utility.yul\":2345:2348   */\n      0x80\n        /* \"#utility.yul\":2334:2343   */\n      dup6\n        /* \"#utility.yul\":2330:2349   */\n      add\n        /* \"#utility.yul\":2323:2374   */\n      mstore\n        /* \"#utility.yul\":2429:2432   */\n      0x80\n        /* \"#utility.yul\":2421:2427   */\n      dup6\n        /* \"#utility.yul\":2417:2433   */\n      add\n        /* \"#utility.yul\":2411:2434   */\n      mload\n        /* \"#utility.yul\":2405:2408   */\n      0xa0\n        /* \"#utility.yul\":2394:2403   */\n      dup6\n        /* \"#utility.yul\":2390:2409   */\n      add\n        /* \"#utility.yul\":2383:2435   */\n      mstore\n        /* \"#utility.yul\":2482:2485   */\n      0xa0\n        /* \"#utility.yul\":2474:2480   */\n      dup6\n        /* \"#utility.yul\":2470:2486   */\n      add\n        /* \"#utility.yul\":2464:2487   */\n      mload\n        /* \"#utility.yul\":2525:2529   */\n      0xc0\n        /* \"#utility.yul\":2518:2522   */\n      dup1\n        /* \"#utility.yul\":2507:2516   */\n      dup7\n        /* \"#utility.yul\":2503:2523   */\n      add\n        /* \"#utility.yul\":2496:2530   */\n      mstore\n        /* \"#utility.yul\":2550:2556   */\n      dup2\n        /* \"#utility.yul\":2585:2597   */\n      dup2\n        /* \"#utility.yul\":2579:2598   */\n      mload\n        /* \"#utility.yul\":2622:2628   */\n      dup1\n        /* \"#utility.yul\":2614:2620   */\n      dup5\n        /* \"#utility.yul\":2607:2629   */\n      mstore\n        /* \"#utility.yul\":2660:2663   */\n      0x0100\n        /* \"#utility.yul\":2649:2658   */\n      dup8\n        /* \"#utility.yul\":2645:2664   */\n      add\n        /* \"#utility.yul\":2638:2664   */\n      swap2\n      pop\n        /* \"#utility.yul\":2705:2707   */\n      dup5\n        /* \"#utility.yul\":2691:2703   */\n      dup4\n        /* \"#utility.yul\":2687:2708   */\n      add\n        /* \"#utility.yul\":2673:2708   */\n      swap4\n      pop\n        /* \"#utility.yul\":2726:2727   */\n      0x00\n        /* \"#utility.yul\":2717:2727   */\n      swap3\n      pop\n        /* \"#utility.yul\":2736:2905   */\n    tag_550:\n        /* \"#utility.yul\":2750:2756   */\n      dup1\n        /* \"#utility.yul\":2747:2748   */\n      dup4\n        /* \"#utility.yul\":2744:2757   */\n      lt\n        /* \"#utility.yul\":2736:2905   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":2811:2824   */\n      dup4\n      mload\n        /* \"#utility.yul\":2799:2825   */\n      dup3\n      mstore\n        /* \"#utility.yul\":2880:2895   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":2772:2773   */\n      0x01\n        /* \"#utility.yul\":2765:2774   */\n      swap3\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":2845:2857   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":2736:2905   */\n      jump(tag_550)\n    tag_552:\n      pop\n        /* \"#utility.yul\":2922:2925   */\n      swap7\n        /* \"#utility.yul\":1905:2931   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2936:3251   */\n    tag_97:\n        /* \"#utility.yul\":3004:3010   */\n      0x00\n        /* \"#utility.yul\":3012:3018   */\n      dup1\n        /* \"#utility.yul\":3065:3067   */\n      0x40\n        /* \"#utility.yul\":3053:3062   */\n      dup4\n        /* \"#utility.yul\":3044:3051   */\n      dup6\n        /* \"#utility.yul\":3040:3063   */\n      sub\n        /* \"#utility.yul\":3036:3068   */\n      slt\n        /* \"#utility.yul\":3033:3085   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":3081:3082   */\n      0x00\n        /* \"#utility.yul\":3078:3079   */\n      dup1\n        /* \"#utility.yul\":3071:3083   */\n      revert\n        /* \"#utility.yul\":3033:3085   */\n    tag_554:\n        /* \"#utility.yul\":3120:3129   */\n      dup3\n        /* \"#utility.yul\":3107:3130   */\n      calldataload\n        /* \"#utility.yul\":3139:3170   */\n      tag_555\n        /* \"#utility.yul\":3164:3169   */\n      dup2\n        /* \"#utility.yul\":3139:3170   */\n      tag_528\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":3189:3194   */\n      swap5\n        /* \"#utility.yul\":3241:3243   */\n      0x20\n        /* \"#utility.yul\":3226:3244   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3213:3245   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2936:3251   */\n      jump\t// out\n        /* \"#utility.yul\":3464:3591   */\n    tag_222:\n        /* \"#utility.yul\":3525:3535   */\n      0x4e487b71\n        /* \"#utility.yul\":3520:3523   */\n      0xe0\n        /* \"#utility.yul\":3516:3536   */\n      shl\n        /* \"#utility.yul\":3513:3514   */\n      0x00\n        /* \"#utility.yul\":3506:3537   */\n      mstore\n        /* \"#utility.yul\":3556:3560   */\n      0x41\n        /* \"#utility.yul\":3553:3554   */\n      0x04\n        /* \"#utility.yul\":3546:3561   */\n      mstore\n        /* \"#utility.yul\":3580:3584   */\n      0x24\n        /* \"#utility.yul\":3577:3578   */\n      0x00\n        /* \"#utility.yul\":3570:3585   */\n      revert\n        /* \"#utility.yul\":3596:4711   */\n    tag_141:\n        /* \"#utility.yul\":3680:3686   */\n      0x00\n        /* \"#utility.yul\":3711:3713   */\n      0x20\n        /* \"#utility.yul\":3754:3756   */\n      dup1\n        /* \"#utility.yul\":3742:3751   */\n      dup4\n        /* \"#utility.yul\":3733:3740   */\n      dup6\n        /* \"#utility.yul\":3729:3752   */\n      sub\n        /* \"#utility.yul\":3725:3757   */\n      slt\n        /* \"#utility.yul\":3722:3774   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":3770:3771   */\n      0x00\n        /* \"#utility.yul\":3767:3768   */\n      dup1\n        /* \"#utility.yul\":3760:3772   */\n      revert\n        /* \"#utility.yul\":3722:3774   */\n    tag_559:\n        /* \"#utility.yul\":3810:3819   */\n      dup3\n        /* \"#utility.yul\":3797:3820   */\n      calldataload\n        /* \"#utility.yul\":3839:3857   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3880:3882   */\n      dup1\n        /* \"#utility.yul\":3872:3878   */\n      dup3\n        /* \"#utility.yul\":3869:3883   */\n      gt\n        /* \"#utility.yul\":3866:3900   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":3896:3897   */\n      0x00\n        /* \"#utility.yul\":3893:3894   */\n      dup1\n        /* \"#utility.yul\":3886:3898   */\n      revert\n        /* \"#utility.yul\":3866:3900   */\n    tag_560:\n        /* \"#utility.yul\":3934:3940   */\n      dup2\n        /* \"#utility.yul\":3923:3932   */\n      dup6\n        /* \"#utility.yul\":3919:3941   */\n      add\n        /* \"#utility.yul\":3909:3941   */\n      swap2\n      pop\n        /* \"#utility.yul\":3979:3986   */\n      dup6\n        /* \"#utility.yul\":3972:3976   */\n      0x1f\n        /* \"#utility.yul\":3968:3970   */\n      dup4\n        /* \"#utility.yul\":3964:3977   */\n      add\n        /* \"#utility.yul\":3960:3987   */\n      slt\n        /* \"#utility.yul\":3950:4005   */\n      tag_561\n      jumpi\n        /* \"#utility.yul\":4001:4002   */\n      0x00\n        /* \"#utility.yul\":3998:3999   */\n      dup1\n        /* \"#utility.yul\":3991:4003   */\n      revert\n        /* \"#utility.yul\":3950:4005   */\n    tag_561:\n        /* \"#utility.yul\":4037:4039   */\n      dup2\n        /* \"#utility.yul\":4024:4040   */\n      calldataload\n        /* \"#utility.yul\":4059:4061   */\n      dup2\n        /* \"#utility.yul\":4055:4057   */\n      dup2\n        /* \"#utility.yul\":4052:4062   */\n      gt\n        /* \"#utility.yul\":4049:4085   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":4065:4083   */\n      tag_563\n      tag_222\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":4111:4113   */\n      dup1\n        /* \"#utility.yul\":4108:4109   */\n      0x05\n        /* \"#utility.yul\":4104:4114   */\n      shl\n        /* \"#utility.yul\":4143:4145   */\n      0x40\n        /* \"#utility.yul\":4137:4146   */\n      mload\n        /* \"#utility.yul\":4206:4208   */\n      0x1f\n        /* \"#utility.yul\":4202:4209   */\n      not\n        /* \"#utility.yul\":4197:4199   */\n      0x3f\n        /* \"#utility.yul\":4193:4195   */\n      dup4\n        /* \"#utility.yul\":4189:4200   */\n      add\n        /* \"#utility.yul\":4185:4210   */\n      and\n        /* \"#utility.yul\":4177:4183   */\n      dup2\n        /* \"#utility.yul\":4173:4211   */\n      add\n        /* \"#utility.yul\":4261:4267   */\n      dup2\n        /* \"#utility.yul\":4249:4259   */\n      dup2\n        /* \"#utility.yul\":4246:4268   */\n      lt\n        /* \"#utility.yul\":4241:4243   */\n      dup6\n        /* \"#utility.yul\":4229:4239   */\n      dup3\n        /* \"#utility.yul\":4226:4244   */\n      gt\n        /* \"#utility.yul\":4223:4269   */\n      or\n        /* \"#utility.yul\":4220:4292   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":4272:4290   */\n      tag_565\n      tag_222\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":4308:4310   */\n      0x40\n        /* \"#utility.yul\":4301:4323   */\n      mstore\n        /* \"#utility.yul\":4358:4376   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":4392:4407   */\n      dup5\n      dup3\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":4434:4445   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":4430:4450   */\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":4462:4481   */\n      dup9\n      dup4\n      gt\n        /* \"#utility.yul\":4459:4498   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":4494:4495   */\n      0x00\n        /* \"#utility.yul\":4491:4492   */\n      dup1\n        /* \"#utility.yul\":4484:4496   */\n      revert\n        /* \"#utility.yul\":4459:4498   */\n    tag_566:\n        /* \"#utility.yul\":4518:4529   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":4538:4680   */\n    tag_567:\n        /* \"#utility.yul\":4554:4560   */\n      dup3\n        /* \"#utility.yul\":4549:4552   */\n      dup6\n        /* \"#utility.yul\":4546:4561   */\n      lt\n        /* \"#utility.yul\":4538:4680   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":4620:4637   */\n      dup5\n      calldataload\n        /* \"#utility.yul\":4608:4638   */\n      dup5\n      mstore\n        /* \"#utility.yul\":4571:4583   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":4658:4670   */\n      swap3\n      dup6\n      add\n      swap3\n        /* \"#utility.yul\":4538:4680   */\n      jump(tag_567)\n    tag_569:\n        /* \"#utility.yul\":4699:4705   */\n      swap9\n        /* \"#utility.yul\":3596:4711   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5531:5658   */\n    tag_195:\n        /* \"#utility.yul\":5592:5602   */\n      0x4e487b71\n        /* \"#utility.yul\":5587:5590   */\n      0xe0\n        /* \"#utility.yul\":5583:5603   */\n      shl\n        /* \"#utility.yul\":5580:5581   */\n      0x00\n        /* \"#utility.yul\":5573:5604   */\n      mstore\n        /* \"#utility.yul\":5623:5627   */\n      0x32\n        /* \"#utility.yul\":5620:5621   */\n      0x04\n        /* \"#utility.yul\":5613:5628   */\n      mstore\n        /* \"#utility.yul\":5647:5651   */\n      0x24\n        /* \"#utility.yul\":5644:5645   */\n      0x00\n        /* \"#utility.yul\":5637:5652   */\n      revert\n        /* \"#utility.yul\":6434:6561   */\n    tag_529:\n        /* \"#utility.yul\":6495:6505   */\n      0x4e487b71\n        /* \"#utility.yul\":6490:6493   */\n      0xe0\n        /* \"#utility.yul\":6486:6506   */\n      shl\n        /* \"#utility.yul\":6483:6484   */\n      0x00\n        /* \"#utility.yul\":6476:6507   */\n      mstore\n        /* \"#utility.yul\":6526:6530   */\n      0x11\n        /* \"#utility.yul\":6523:6524   */\n      0x04\n        /* \"#utility.yul\":6516:6531   */\n      mstore\n        /* \"#utility.yul\":6550:6554   */\n      0x24\n        /* \"#utility.yul\":6547:6548   */\n      0x00\n        /* \"#utility.yul\":6540:6555   */\n      revert\n        /* \"#utility.yul\":6566:6734   */\n    tag_229:\n        /* \"#utility.yul\":6639:6648   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":6670:6679   */\n      dup2\n      iszero\n        /* \"#utility.yul\":6687:6702   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":6681:6703   */\n      dup5\n      eq\n        /* \"#utility.yul\":6667:6704   */\n      or\n        /* \"#utility.yul\":6657:6728   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":6708:6726   */\n      tag_383\n      tag_529\n      jump\t// in\n        /* \"#utility.yul\":6739:6864   */\n    tag_234:\n        /* \"#utility.yul\":6804:6813   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6825:6835   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6822:6858   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":6838:6856   */\n      tag_383\n      tag_529\n      jump\t// in\n        /* \"#utility.yul\":6869:7004   */\n    tag_236:\n        /* \"#utility.yul\":6908:6911   */\n      0x00\n        /* \"#utility.yul\":6929:6946   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":6926:6969   */\n      tag_584\n      jumpi\n        /* \"#utility.yul\":6949:6967   */\n      tag_584\n      tag_529\n      jump\t// in\n    tag_584:\n      pop\n        /* \"#utility.yul\":6996:6997   */\n      0x01\n        /* \"#utility.yul\":6985:6998   */\n      add\n      swap1\n        /* \"#utility.yul\":6869:7004   */\n      jump\t// out\n        /* \"#utility.yul\":7009:7137   */\n    tag_238:\n        /* \"#utility.yul\":7076:7085   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":7097:7108   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":7094:7131   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":7111:7129   */\n      tag_383\n      tag_529\n      jump\t// in\n        /* \"#utility.yul\":7142:7577   */\n    tag_530:\n        /* \"#utility.yul\":7195:7198   */\n      0x00\n        /* \"#utility.yul\":7233:7238   */\n      dup2\n        /* \"#utility.yul\":7227:7239   */\n      mload\n        /* \"#utility.yul\":7260:7266   */\n      dup1\n        /* \"#utility.yul\":7255:7258   */\n      dup5\n        /* \"#utility.yul\":7248:7267   */\n      mstore\n        /* \"#utility.yul\":7286:7290   */\n      0x20\n        /* \"#utility.yul\":7315:7317   */\n      dup1\n        /* \"#utility.yul\":7310:7313   */\n      dup6\n        /* \"#utility.yul\":7306:7318   */\n      add\n        /* \"#utility.yul\":7299:7318   */\n      swap5\n      pop\n        /* \"#utility.yul\":7352:7354   */\n      dup1\n        /* \"#utility.yul\":7345:7350   */\n      dup5\n        /* \"#utility.yul\":7341:7355   */\n      add\n        /* \"#utility.yul\":7373:7374   */\n      0x00\n        /* \"#utility.yul\":7383:7552   */\n    tag_589:\n        /* \"#utility.yul\":7397:7403   */\n      dup4\n        /* \"#utility.yul\":7394:7395   */\n      dup2\n        /* \"#utility.yul\":7391:7404   */\n      lt\n        /* \"#utility.yul\":7383:7552   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":7458:7471   */\n      dup2\n      mload\n        /* \"#utility.yul\":7446:7472   */\n      dup8\n      mstore\n        /* \"#utility.yul\":7492:7504   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":7527:7542   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":7419:7420   */\n      0x01\n        /* \"#utility.yul\":7412:7421   */\n      add\n        /* \"#utility.yul\":7383:7552   */\n      jump(tag_589)\n    tag_591:\n      pop\n        /* \"#utility.yul\":7568:7571   */\n      swap5\n      swap6\n        /* \"#utility.yul\":7142:7577   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7582:7843   */\n    tag_241:\n        /* \"#utility.yul\":7761:7763   */\n      0x20\n        /* \"#utility.yul\":7750:7759   */\n      dup2\n        /* \"#utility.yul\":7743:7764   */\n      mstore\n        /* \"#utility.yul\":7724:7728   */\n      0x00\n        /* \"#utility.yul\":7781:7837   */\n      tag_548\n        /* \"#utility.yul\":7833:7835   */\n      0x20\n        /* \"#utility.yul\":7822:7831   */\n      dup4\n        /* \"#utility.yul\":7818:7836   */\n      add\n        /* \"#utility.yul\":7810:7816   */\n      dup5\n        /* \"#utility.yul\":7781:7837   */\n      tag_530\n      jump\t// in\n        /* \"#utility.yul\":7848:8125   */\n    tag_258:\n        /* \"#utility.yul\":7915:7921   */\n      0x00\n        /* \"#utility.yul\":7968:7970   */\n      0x20\n        /* \"#utility.yul\":7956:7965   */\n      dup3\n        /* \"#utility.yul\":7947:7954   */\n      dup5\n        /* \"#utility.yul\":7943:7966   */\n      sub\n        /* \"#utility.yul\":7939:7971   */\n      slt\n        /* \"#utility.yul\":7936:7988   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":7984:7985   */\n      0x00\n        /* \"#utility.yul\":7981:7982   */\n      dup1\n        /* \"#utility.yul\":7974:7986   */\n      revert\n        /* \"#utility.yul\":7936:7988   */\n    tag_595:\n        /* \"#utility.yul\":8016:8025   */\n      dup2\n        /* \"#utility.yul\":8010:8026   */\n      mload\n        /* \"#utility.yul\":8069:8074   */\n      dup1\n        /* \"#utility.yul\":8062:8075   */\n      iszero\n        /* \"#utility.yul\":8055:8076   */\n      iszero\n        /* \"#utility.yul\":8048:8053   */\n      dup2\n        /* \"#utility.yul\":8045:8077   */\n      eq\n        /* \"#utility.yul\":8035:8095   */\n      tag_548\n      jumpi\n        /* \"#utility.yul\":8091:8092   */\n      0x00\n        /* \"#utility.yul\":8088:8089   */\n      dup1\n        /* \"#utility.yul\":8081:8093   */\n      revert\n        /* \"#utility.yul\":8748:8875   */\n    tag_531:\n        /* \"#utility.yul\":8809:8819   */\n      0x4e487b71\n        /* \"#utility.yul\":8804:8807   */\n      0xe0\n        /* \"#utility.yul\":8800:8820   */\n      shl\n        /* \"#utility.yul\":8797:8798   */\n      0x00\n        /* \"#utility.yul\":8790:8821   */\n      mstore\n        /* \"#utility.yul\":8840:8844   */\n      0x12\n        /* \"#utility.yul\":8837:8838   */\n      0x04\n        /* \"#utility.yul\":8830:8845   */\n      mstore\n        /* \"#utility.yul\":8864:8868   */\n      0x24\n        /* \"#utility.yul\":8861:8862   */\n      0x00\n        /* \"#utility.yul\":8854:8869   */\n      revert\n        /* \"#utility.yul\":8880:9000   */\n    tag_274:\n        /* \"#utility.yul\":8920:8921   */\n      0x00\n        /* \"#utility.yul\":8946:8947   */\n      dup3\n        /* \"#utility.yul\":8936:8971   */\n      tag_602\n      jumpi\n        /* \"#utility.yul\":8951:8969   */\n      tag_602\n      tag_531\n      jump\t// in\n    tag_602:\n      pop\n        /* \"#utility.yul\":8985:8994   */\n      div\n      swap1\n        /* \"#utility.yul\":8880:9000   */\n      jump\t// out\n        /* \"#utility.yul\":9005:9404   */\n    tag_280:\n        /* \"#utility.yul\":9207:9209   */\n      0x20\n        /* \"#utility.yul\":9189:9210   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9246:9248   */\n      0x23\n        /* \"#utility.yul\":9226:9244   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9219:9249   */\n      mstore\n        /* \"#utility.yul\":9285:9319   */\n      0x6265666f726520796f75206e6565642062656174206e65636573736172792062\n        /* \"#utility.yul\":9280:9282   */\n      0x40\n        /* \"#utility.yul\":9265:9283   */\n      dup3\n      add\n        /* \"#utility.yul\":9258:9320   */\n      mstore\n      shl(0xe8, 0x6f7373)\n        /* \"#utility.yul\":9351:9353   */\n      0x60\n        /* \"#utility.yul\":9336:9354   */\n      dup3\n      add\n        /* \"#utility.yul\":9329:9362   */\n      mstore\n        /* \"#utility.yul\":9394:9397   */\n      0x80\n        /* \"#utility.yul\":9379:9398   */\n      add\n      swap1\n        /* \"#utility.yul\":9005:9404   */\n      jump\t// out\n        /* \"#utility.yul\":10899:11231   */\n    tag_364:\n        /* \"#utility.yul\":11106:11112   */\n      dup3\n        /* \"#utility.yul\":11095:11104   */\n      dup2\n        /* \"#utility.yul\":11088:11113   */\n      mstore\n        /* \"#utility.yul\":11149:11151   */\n      0x40\n        /* \"#utility.yul\":11144:11146   */\n      0x20\n        /* \"#utility.yul\":11133:11142   */\n      dup3\n        /* \"#utility.yul\":11129:11147   */\n      add\n        /* \"#utility.yul\":11122:11152   */\n      mstore\n        /* \"#utility.yul\":11069:11073   */\n      0x00\n        /* \"#utility.yul\":11169:11225   */\n      tag_609\n        /* \"#utility.yul\":11221:11223   */\n      0x40\n        /* \"#utility.yul\":11210:11219   */\n      dup4\n        /* \"#utility.yul\":11206:11224   */\n      add\n        /* \"#utility.yul\":11198:11204   */\n      dup5\n        /* \"#utility.yul\":11169:11225   */\n      tag_530\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":11161:11225   */\n      swap5\n        /* \"#utility.yul\":10899:11231   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11666:11778   */\n    tag_384:\n        /* \"#utility.yul\":11698:11699   */\n      0x00\n        /* \"#utility.yul\":11724:11725   */\n      dup3\n        /* \"#utility.yul\":11714:11749   */\n      tag_613\n      jumpi\n        /* \"#utility.yul\":11729:11747   */\n      tag_613\n      tag_531\n      jump\t// in\n    tag_613:\n      pop\n        /* \"#utility.yul\":11763:11772   */\n      mod\n      swap1\n        /* \"#utility.yul\":11666:11778   */\n      jump\t// out\n        /* \"#utility.yul\":11783:12034   */\n    tag_395:\n        /* \"#utility.yul\":11853:11859   */\n      0x00\n        /* \"#utility.yul\":11906:11908   */\n      0x20\n        /* \"#utility.yul\":11894:11903   */\n      dup3\n        /* \"#utility.yul\":11885:11892   */\n      dup5\n        /* \"#utility.yul\":11881:11904   */\n      sub\n        /* \"#utility.yul\":11877:11909   */\n      slt\n        /* \"#utility.yul\":11874:11926   */\n      iszero\n      tag_615\n      jumpi\n        /* \"#utility.yul\":11922:11923   */\n      0x00\n        /* \"#utility.yul\":11919:11920   */\n      dup1\n        /* \"#utility.yul\":11912:11924   */\n      revert\n        /* \"#utility.yul\":11874:11926   */\n    tag_615:\n        /* \"#utility.yul\":11954:11963   */\n      dup2\n        /* \"#utility.yul\":11948:11964   */\n      mload\n        /* \"#utility.yul\":11973:12004   */\n      tag_548\n        /* \"#utility.yul\":11998:12003   */\n      dup2\n        /* \"#utility.yul\":11973:12004   */\n      tag_528\n      jump\t// in\n        /* \"#utility.yul\":13551:13735   */\n    tag_438:\n        /* \"#utility.yul\":13621:13627   */\n      0x00\n        /* \"#utility.yul\":13674:13676   */\n      0x20\n        /* \"#utility.yul\":13662:13671   */\n      dup3\n        /* \"#utility.yul\":13653:13660   */\n      dup5\n        /* \"#utility.yul\":13649:13672   */\n      sub\n        /* \"#utility.yul\":13645:13677   */\n      slt\n        /* \"#utility.yul\":13642:13694   */\n      iszero\n      tag_622\n      jumpi\n        /* \"#utility.yul\":13690:13691   */\n      0x00\n        /* \"#utility.yul\":13687:13688   */\n      dup1\n        /* \"#utility.yul\":13680:13692   */\n      revert\n        /* \"#utility.yul\":13642:13694   */\n    tag_622:\n      pop\n        /* \"#utility.yul\":13713:13729   */\n      mload\n      swap2\n        /* \"#utility.yul\":13551:13735   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201750815f4039664330196e2d4a6486be571dbd3e2553f5050a783ce06cd2debc64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_376": {
									"entryPoint": null,
									"id": 376,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 163,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@createBoss_852": {
									"entryPoint": 243,
									"id": 852,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:543:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:5"
															},
															"nodeType": "YulIf",
															"src": "105:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:5"
															},
															"nodeType": "YulIf",
															"src": "204:70:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:5",
														"type": ""
													}
												],
												"src": "14:290:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "356:185:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "395:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "416:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "423:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "428:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "419:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "419:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "409:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "409:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "409:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "460:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "463:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "453:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "453:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "453:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "488:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "491:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "481:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "481:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "481:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "372:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "383:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "379:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "379:6:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "369:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "369:17:5"
															},
															"nodeType": "YulIf",
															"src": "366:140:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "515:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "526:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "533:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "522:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "515:3:5"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "338:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "348:3:5",
														"type": ""
													}
												],
												"src": "309:232:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0x3 SSTORE PUSH1 0x64 PUSH1 0x4 SSTORE PUSH1 0x64 PUSH1 0x5 SSTORE PUSH2 0x3E8 PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0xA SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2475 CODESIZE SUB DUP1 PUSH3 0x2475 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x4E SWAP2 PUSH3 0x17C JUMP JUMPDEST PUSH3 0x59 CALLER PUSH3 0xA3 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH3 0x7E PUSH3 0xF3 JUMP JUMPDEST PUSH3 0x88 PUSH3 0xF3 JUMP JUMPDEST PUSH3 0x92 PUSH3 0xF3 JUMP JUMPDEST PUSH3 0x9C PUSH3 0xF3 JUMP JUMPDEST POP PUSH3 0x1D6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 PUSH1 0x1 SUB PUSH3 0x11A JUMPI PUSH2 0x3E8 DUP2 SSTORE PUSH1 0x19 PUSH1 0x1 DUP3 ADD SSTORE JUMPDEST PUSH1 0xA SLOAD PUSH1 0x2 SUB PUSH3 0x132 JUMPI PUSH2 0x7D0 DUP2 SSTORE PUSH1 0x1E PUSH1 0x1 DUP3 ADD SSTORE JUMPDEST PUSH1 0xA SLOAD PUSH1 0x3 SUB PUSH3 0x14A JUMPI PUSH2 0xBB8 DUP2 SSTORE PUSH1 0x28 PUSH1 0x1 DUP3 ADD SSTORE JUMPDEST PUSH1 0xA SLOAD PUSH1 0x4 SUB PUSH3 0x162 JUMPI PUSH2 0xFA0 DUP2 SSTORE PUSH1 0x32 PUSH1 0x1 DUP3 ADD SSTORE JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH3 0x174 DUP4 PUSH3 0x1AE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH3 0x1CF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x228F DUP1 PUSH3 0x1E6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x859A62D0 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xC724CFD3 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDD6FFD37 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD6FFD37 EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0xE2EB41FF EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xE6F4CAB2 EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0xFCEFB2B6 EQ PUSH2 0x65A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC724CFD3 EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0xC9EC3950 EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0xD175810D EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xD9193025 EQ PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB863BD37 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xB863BD37 EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0xBECE83E4 EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0xC178D83D EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0xC54B9C78 EQ PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x859A62D0 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xB0CD0D56 EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0xB1501F9C EQ PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45D9D0BE GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x7A742B2D EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x7ADED47E EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x83948115 EQ PUSH2 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45D9D0BE EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x5D1B3D76 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x6893F296 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x6B7C7264 EQ PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2AA04A66 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x2AA04A66 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x2B56C1DD EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x2F15911D EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x39850C6B EQ PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x127226CC EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x204597E0 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x224D54B3 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x271C52BA EQ PUSH2 0x296 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x72D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5C JUMP JUMPDEST PUSH2 0xA38 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH2 0xC6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x359 PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE6 JUMP JUMPDEST PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0xED4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x3B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F8F JUMP JUMPDEST PUSH2 0xFBF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0xFF8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH2 0x444 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH2 0x100C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x48C CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH2 0x103F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x128D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x4C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH2 0x139B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x4E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD1 JUMP JUMPDEST PUSH2 0x140A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x501 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH2 0x14D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x1591 JUMP JUMPDEST PUSH2 0x294 PUSH2 0x529 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD1 JUMP JUMPDEST PUSH2 0x1636 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x1978 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x58E CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH2 0x1A22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x1B6C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F2 PUSH2 0x5C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x635 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD1 JUMP JUMPDEST PUSH2 0x1BC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x655 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE6 JUMP JUMPDEST PUSH2 0x1C21 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x666 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x92DCECC2D8D2C840C8EACAD840D2DCC8CAF PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x6D2 JUMPI PUSH2 0x6D2 PUSH2 0x208F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x724 JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x716 JUMPI POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST ISZERO PUSH2 0x724 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x735 PUSH2 0x1D9E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP5 DUP2 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP2 MSTORE DUP2 MLOAD PUSH1 0x5 SWAP1 SWAP2 MUL PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 DUP2 ADD SWAP2 DUP3 SSTORE SWAP3 MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x7C5 SWAP2 PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE4 ADD SWAP1 PUSH1 0x2 PUSH2 0x1DBC JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT PUSH2 0x83D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7527726520616C72656164792062656174656E207468697320626F737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD CALLER DUP5 MSTORE PUSH1 0x6 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x8BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7520646F6E2774206861766520656E6F75676820656E6572677920666F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x207468697320626F7373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 GT PUSH2 0x964 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x910 PUSH1 0xA PUSH2 0x139B JUMP JUMPDEST PUSH2 0x91A SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST PUSH2 0x924 SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x939 JUMPI PUSH2 0x939 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x94E DUP2 DUP6 PUSH2 0x20D2 JUMP JUMPDEST SWAP4 POP POP DUP1 DUP1 PUSH2 0x95C SWAP1 PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8E8 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x983 SWAP1 DUP5 SWAP1 PUSH2 0x20FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x9EF JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE MLOAD DUP5 SWAP2 SWAP1 PUSH32 0x46475D55C3BC13C229507A0915F795FD03B23601512CC1AEAE9E0BF41A4075D8 SWAP1 PUSH2 0x9E2 SWAP1 DUP6 SWAP1 PUSH2 0x214C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xA0C SWAP1 PUSH1 0x3 PUSH2 0x20BB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xA2E SWAP1 DUP5 SWAP1 PUSH2 0x20FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP4 SWAP1 SSTORE SWAP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC13 JUMPI DUP2 PUSH1 0x5 ADD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0xA85 JUMPI PUSH2 0xA85 PUSH2 0x208F JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP6 MUL SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE POP SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2862BB25 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xACA JUMPI PUSH2 0xACA PUSH2 0x208F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB30 SWAP2 SWAP1 PUSH2 0x215F JUMP JUMPDEST ISZERO PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E20616C726561647920696E2067616D65000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFB4F8197 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xBA0 JUMPI PUSH2 0xBA0 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x20 SWAP1 SWAP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD PUSH1 0x4 DUP4 ADD MSTORE POP PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xC0B SWAP1 PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA67 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0xC27 PUSH1 0x14 PUSH2 0x139B JUMP JUMPDEST PUSH2 0xC32 SWAP1 PUSH1 0x64 PUSH2 0x20D2 JUMP JUMPDEST PUSH2 0xC3C SWAP2 SWAP1 PUSH2 0x2197 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0xC5C SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST PUSH2 0xC66 SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xC9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B4 SWAP1 PUSH2 0x21AB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xCB4 PUSH1 0x1 DUP4 PUSH2 0x20FE JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xCC4 JUMPI PUSH2 0xCC4 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND ISZERO PUSH2 0xD32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7527726520616C726561647920636C61696D656420746869732065666665 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x18DD PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3E PUSH1 0xA PUSH2 0x139B JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 GT PUSH2 0xD76 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0xA SWAP3 SWAP1 PUSH2 0xD6B SWAP1 DUP5 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xDEA SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0xA SWAP3 SWAP1 PUSH2 0xD99 SWAP1 DUP5 SWAP1 PUSH2 0x20FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 PUSH2 0xDBA DUP3 DUP6 PUSH2 0x20FE JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xDCA JUMPI PUSH2 0xDCA PUSH2 0x208F JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE27 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xC0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP2 DUP6 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD DUP1 SLOAD DUP6 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP7 MSTORE DUP1 DUP7 MSTORE SWAP2 SWAP5 SWAP3 SWAP4 PUSH1 0xA0 DUP7 ADD SWAP4 SWAP3 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xEC4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xEB0 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH2 0xEE0 PUSH2 0x1591 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xEF0 JUMPI PUSH2 0xEF0 PUSH2 0x208F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP CALLER DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0xF17 JUMPI PUSH2 0xF17 PUSH2 0x208F JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF84 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFA8 SWAP2 SWAP1 PUSH2 0x215F JUMP JUMPDEST POP DUP1 SLOAD DUP2 PUSH1 0x0 PUSH2 0xFB7 DUP4 PUSH2 0x20E5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x5 DUP2 LT PUSH2 0xFDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1000 PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0x100A PUSH1 0x0 PUSH2 0x1D4E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x101C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1054 JUMPI PUSH2 0x1054 PUSH2 0x208F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH2 0x106D DUP3 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x10AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x796F75277265206E6F7420696E20726F6F6D PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x2 DUP2 GT PUSH2 0x1151 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x10FD PUSH1 0xA PUSH2 0x139B JUMP JUMPDEST PUSH2 0x1107 SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST PUSH2 0x1111 SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST SWAP1 POP DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1126 JUMPI PUSH2 0x1126 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x113B DUP2 DUP5 PUSH2 0x20D2 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x1149 SWAP1 PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10D5 JUMP JUMPDEST POP CALLER PUSH1 0x1 DUP5 ADD PUSH1 0x0 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x11D9 JUMPI DUP1 DUP4 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x117D SWAP2 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP4 ADD SLOAD ISZERO PUSH2 0x11D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7527726520616C72656164792061747461636B656420696E206475656C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH2 0x1244 JUMP JUMPDEST DUP1 DUP4 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11ED SWAP2 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP4 ADD SLOAD ISZERO PUSH2 0x1244 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7527726520616C72656164792061747461636B656420696E206475656C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF2BA4445FBD3AF142B7A1251DF18B6D462B23687B1BC8799A1C3EDDB4FF0826 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x127F SWAP3 SWAP2 SWAP1 PUSH2 0x21EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 LT ISZERO PUSH2 0x135E JUMPI PUSH1 0x1 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xFB4F8197 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x12E4 JUMPI PUSH2 0x12E4 PUSH2 0x208F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1319 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1347 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x1356 SWAP1 PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1290 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 SSTORE SWAP1 PUSH2 0xDEA PUSH1 0x5 DUP4 ADD DUP3 PUSH2 0x1E14 JUMP JUMPDEST PUSH1 0x0 DUP2 TIMESTAMP DIFFICULTY PUSH2 0x13AB PUSH1 0x1 NUMBER PUSH2 0x20FE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE BLOCKHASH PUSH1 0x60 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP1 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x94 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x1404 SWAP2 SWAP1 PUSH2 0x220F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x14D0 JUMPI PUSH1 0x1 SLOAD DUP4 MLOAD ORIGIN SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 DUP7 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x1440 JUMPI PUSH2 0x1440 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1466 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1483 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14A7 SWAP2 SWAP1 PUSH2 0x2223 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x14BE JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x14C8 DUP2 PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x140E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD DUP3 PUSH2 0x14E9 SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1541 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1565 SWAP2 SWAP1 PUSH2 0x215F JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1588 SWAP1 DUP5 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x15E2 JUMPI PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x15B2 JUMPI PUSH2 0x15B2 PUSH2 0x208F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD SLOAD PUSH1 0x2 EQ PUSH2 0x15D0 JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH2 0x15DA DUP2 PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1595 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636F756C64206E6F742066696E6420617661696C61626C65206475656C20726F PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6F6D PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 EQ PUSH2 0x1695 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F75206861766520746F2064656665617420616C6C20626F73736573000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH2 0x169E DUP2 PUSH2 0x140A JUMP JUMPDEST PUSH2 0x16F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F75277265206E6F74206F776E6572206F6620746865736520746F6B656E49 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6473 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH2 0x16FE DUP2 PUSH2 0x1BC0 JUMP JUMPDEST ISZERO PUSH2 0x1741 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1D1BDAD95B9CC81DD95C994818DB185A5B5959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1932 JUMPI PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1766 JUMPI PUSH2 0x1766 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x179F PUSH1 0xA PUSH2 0x139B JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 GT PUSH2 0x18A1 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9113247 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x64 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA9113247 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1817 SWAP2 SWAP1 PUSH2 0x2240 JUMP JUMPDEST PUSH2 0x1822 SWAP1 PUSH1 0x14 PUSH2 0x20BB JUMP JUMPDEST PUSH2 0x182C SWAP2 SWAP1 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0x1836 SWAP1 DUP5 PUSH2 0x20D2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4261CADD PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x84C395BA SWAP2 PUSH2 0x186A SWAP2 PUSH1 0x4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1898 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x191F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x2710 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x191D SWAP2 SWAP1 PUSH2 0x215F JUMP JUMPDEST POP JUMPDEST POP DUP1 PUSH2 0x192A DUP2 PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1745 JUMP JUMPDEST POP DUP1 CALLVALUE LT ISZERO PUSH2 0xDEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x696E73756666696369656E742066756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x1998 SWAP1 PUSH3 0x15180 PUSH2 0x20D2 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x19D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3A393C903630BA32B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x3 SLOAD PUSH2 0x19F9 SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1A1B SWAP1 DUP5 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x1A51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B4 SWAP1 PUSH2 0x21AB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1A6B PUSH1 0x1 DUP4 PUSH2 0x20FE JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x1A7B JUMPI PUSH2 0x1A7B PUSH2 0x208F JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND ISZERO PUSH2 0x1AE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7527726520616C726561647920636C61696D6564207468697320626F6E75 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 PUSH1 0xA PUSH2 0x139B JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 GT PUSH2 0x1B2C JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0xA SWAP3 SWAP1 PUSH2 0x1B21 SWAP1 DUP5 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1B50 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x3E8 SWAP3 SWAP1 PUSH2 0xD99 SWAP1 DUP5 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 PUSH2 0xDBA DUP3 DUP6 PUSH2 0x20FE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH2 0x1B79 PUSH2 0x1591 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1B89 JUMPI PUSH2 0x1B89 PUSH2 0x208F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 ADD SLOAD DUP3 PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x1BB3 JUMPI POP PUSH1 0x0 PUSH2 0x1BB7 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x724 JUMPI PUSH1 0xB PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1BE3 JUMPI PUSH2 0x1BE3 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1C0F JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x1C19 DUP2 PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1BC4 JUMP JUMPDEST PUSH2 0x1C29 PUSH2 0x1CF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1C8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH2 0x1C97 DUP2 PUSH2 0x1D4E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4261CADD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x84C395BA SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x100A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH1 0x2 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1E04 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1E04 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1DCF JUMP JUMPDEST POP PUSH2 0x1E10 SWAP3 SWAP2 POP PUSH2 0x1E2E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1C97 SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1E10 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E2F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1EAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1EBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F03 DUP2 PUSH2 0x1ED1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE PUSH1 0xE0 DUP4 ADD DUP5 MLOAD DUP3 DUP6 ADD MSTORE DUP2 DUP6 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 DUP1 DUP7 ADD MSTORE DUP2 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x100 DUP8 ADD SWAP2 POP DUP5 DUP4 ADD SWAP4 POP PUSH1 0x0 SWAP3 POP JUMPDEST DUP1 DUP4 LT ISZERO PUSH2 0x1F84 JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1F64 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1FAD DUP2 PUSH2 0x1ED1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1FFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2010 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2022 JUMPI PUSH2 0x2022 PUSH2 0x1FBB JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x2047 JUMPI PUSH2 0x2047 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x2065 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x2083 JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x206A JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1404 JUMPI PUSH2 0x1404 PUSH2 0x20A5 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1404 JUMPI PUSH2 0x1404 PUSH2 0x20A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x20F7 JUMPI PUSH2 0x20F7 PUSH2 0x20A5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1404 JUMPI PUSH2 0x1404 PUSH2 0x20A5 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2141 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2125 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1F03 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2111 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1F03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x21A6 JUMPI PUSH2 0x21A6 PUSH2 0x2181 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x6265666F726520796F75206E6565642062656174206E65636573736172792062 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x6F7373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2207 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2111 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x221E JUMPI PUSH2 0x221E PUSH2 0x2181 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1F03 DUP2 PUSH2 0x1ED1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR POP DUP2 0x5F BLOCKHASH CODECOPY PUSH7 0x4330196E2D4A64 DUP7 0xBE JUMPI SAR 0xBD RETURNDATACOPY 0x25 MSTORE8 CREATE2 SDIV EXP PUSH25 0x3CE06CD2DEBC64736F6C634300081100330000000000000000 ",
							"sourceMap": "172:15853:4:-:0;;;286:2;259:29;;324:3;294:33;;408:3;384:27;;5165:4;5138:31;;6806:1;6787:20;;1778:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:1;936:18:0;:32::i;:::-;1821:10:4;:46;;-1:-1:-1;;;;;;1821:46:4;-1:-1:-1;;;;;1821:46:4;;;;;1877:12;:10;:12::i;:::-;1899;:10;:12::i;:::-;1921;:10;:12::i;:::-;1943;:10;:12::i;:::-;1778:185;172:15853;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;6814:630:4:-;6943:11;;6908:25;6936:19;;;:6;:19;;;;;;6985:1;6970:16;6967:97;;7015:4;6998:21;;7051:2;7029:19;;;:24;6967:97;7091:11;;7106:1;7091:16;7088:97;;7136:4;7119:21;;7172:2;7150:19;;;:24;7088:97;7202:11;;7217:1;7202:16;7199:97;;7247:4;7230:21;;7283:2;7261:19;;;:24;7199:97;7312:11;;7327:1;7312:16;7309:97;;7357:4;7340:21;;7393:2;7371:19;;;:24;7309:97;7424:11;:13;;;:11;:13;;;:::i;:::-;;;;;;6845:599;6814:630::o;14:290:5:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;309:232::-;348:3;369:17;;;366:140;;428:10;423:3;419:20;416:1;409:31;463:4;460:1;453:15;491:4;488:1;481:15;366:140;-1:-1:-1;533:1:5;522:13;;309:232::o;:::-;172:15853:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@RiseClaimMap_1399": {
									"entryPoint": 4031,
									"id": 1399,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 7412,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 7502,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@bosses_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyEnergyForTokens_1069": {
									"entryPoint": 5337,
									"id": 1069,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateTestDamage_534": {
									"entryPoint": 3097,
									"id": 534,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@checkOwnershipOfTokenIds_861": {
									"entryPoint": null,
									"id": 861,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@checkOwnershipOfTokens_1240": {
									"entryPoint": 5130,
									"id": 1240,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimBonus_1537": {
									"entryPoint": 6690,
									"id": 1537,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimDailyEnergy_1037": {
									"entryPoint": 6520,
									"id": 1037,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimDuel_767": {
									"entryPoint": 7020,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@claimMysticEffect_1468": {
									"entryPoint": 3179,
									"id": 1468,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@createNewDuelRoom_398": {
									"entryPoint": 1837,
									"id": 398,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@doAttackInDuel_658": {
									"entryPoint": 4159,
									"id": 658,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@duelPrice_661": {
									"entryPoint": null,
									"id": 661,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@duels_352": {
									"entryPoint": 4108,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@enterInDuel_732": {
									"entryPoint": 3796,
									"id": 732,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@enterInGame_956": {
									"entryPoint": 2616,
									"id": 956,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@fightWithBoss_1203": {
									"entryPoint": 2015,
									"id": 1203,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@findAvailableDuel_694": {
									"entryPoint": 5521,
									"id": 694,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getFinalTreasures_1383": {
									"entryPoint": 5686,
									"id": 1383,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getInfoPlayer_330": {
									"entryPoint": 3566,
									"id": 330,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isPlayerInDuelAtIndexRoom_509": {
									"entryPoint": 1647,
									"id": 509,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isTokenIdClaimed_1244": {
									"entryPoint": null,
									"id": 1244,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isTokensClaimedTreasures_1277": {
									"entryPoint": 7104,
									"id": 1277,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@leaveGame_996": {
									"entryPoint": 4749,
									"id": 996,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@players_298": {
									"entryPoint": null,
									"id": 298,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@random_429": {
									"entryPoint": 5019,
									"id": 429,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 4088,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setDefEnergyAccrual_439": {
									"entryPoint": null,
									"id": 439,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setDefaultDamage_459": {
									"entryPoint": null,
									"id": 459,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setEnergyPriceInTokens_449": {
									"entryPoint": null,
									"id": 449,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@testMintDirectFromGame_1393": {
									"entryPoint": 7322,
									"id": 1393,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 7201,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 8739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 7772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 8465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_uint256_t_uint256_t_bytes32_t_address__to_t_uint256_t_uint256_t_bytes32_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_rational_10000_by_1__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_042ec7ec98b3f211cb413ab2958a6f7f13583991e5c078900d538191a820bcb3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0939ab694db9cba523fa19a4866cc6fe9bcef54a022b3b70116dfe24e56c7639__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1c843c22ab705ff871884ba5c31e286000b8cc46dbeb0a4858793b65e0e28044__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_339208c11585afd5384077c9574a76ccd282609899e98140014d374ff38c0484__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4088d262d54f98b516ed3d13f15518bdec24917db2cb4cd4a4cbd72e67c9760b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_494e7d9414203e4790f373c2f3ed6cf36707b385d143fbcd9f2e28a8fdb561be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4be4fc7915517655f0bfc138bd013d6cd00655c1ed4b0cacb7fb403daf653f31__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_505f8ede6cd48fc2f47a81d280e79d7d2ce95903c145a2f5811078f0a2df5000__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_50b9da6f13e385724190f2ee96eb70fff1ae5199ea32a27a3ac2a614b36849b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8f899a6c2bdaa1b7b1a5d66ab55ed752230a4663d7d5450e0fd7ed7710d2b3b5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ac6ed9a7880861c81f7087f376773afba11c96d486a34846caade468b7bb4804__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b23db9d487ed652e0c0f36b6b0ad1ad36aa9b02edc831013d62dbfc2edbdfa26__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e2b1c12a23f52f354130f8004acf33f776b073263d72bf83489fb7b9e9f4ac1e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e433fbb6dc69f6fab1c5f5109768269d5ae7ef7a0fb6036cb1ba39964ad3df28__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Player_$317_memory_ptr__to_t_struct$_Player_$317_memory_ptr__fromStack_reversed": {
									"entryPoint": 7946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8686,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8357,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8577,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8335,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8123,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 7889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16173:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:5"
															},
															"nodeType": "YulIf",
															"src": "94:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:5",
														"type": ""
													}
												],
												"src": "14:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "304:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "327:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "312:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "312:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "304:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "346:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "371:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "364:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "364:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "357:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "357:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "339:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "339:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "339:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "263:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "285:4:5",
														"type": ""
													}
												],
												"src": "199:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "548:162:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "558:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "581:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "566:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "566:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "558:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "600:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "611:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "593:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "593:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "593:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "638:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "649:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "634:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "634:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "627:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "627:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "681:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "692:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "677:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "677:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "670:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "670:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "670:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "501:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "512:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "520:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "528:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "539:4:5",
														"type": ""
													}
												],
												"src": "391:319:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "820:510:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "866:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "875:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "868:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "868:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "868:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "841:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "850:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "837:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "837:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "862:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "833:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:32:5"
															},
															"nodeType": "YulIf",
															"src": "830:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "891:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "918:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "905:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "905:23:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "895:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "937:28:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "947:18:5",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "941:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "992:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1001:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1004:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "994:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "994:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "994:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "980:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "988:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "977:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "977:14:5"
															},
															"nodeType": "YulIf",
															"src": "974:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1017:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1031:9:5"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1042:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1027:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1027:22:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1021:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1097:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1106:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1109:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1099:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1099:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1099:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1076:2:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1080:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1072:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1072:13:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1087:7:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1068:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1068:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1061:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1061:35:5"
															},
															"nodeType": "YulIf",
															"src": "1058:55:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1122:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1149:2:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1136:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1136:16:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1126:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1179:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1188:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1191:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1181:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1181:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1181:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1167:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1175:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1164:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1164:14:5"
															},
															"nodeType": "YulIf",
															"src": "1161:34:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1253:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1262:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1265:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1255:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1255:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1255:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1218:2:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1226:1:5",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1229:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1222:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1222:14:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1214:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1214:23:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1239:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:32:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1244:7:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1207:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1207:45:5"
															},
															"nodeType": "YulIf",
															"src": "1204:65:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1278:21:5",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1292:2:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1296:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1288:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1288:11:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1278:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1308:16:5",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "1318:6:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1308:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "778:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "789:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "801:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "809:6:5",
														"type": ""
													}
												],
												"src": "715:615:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1436:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1446:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1458:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1469:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1454:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1446:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1488:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1499:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1481:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1481:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1481:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1405:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1416:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1427:4:5",
														"type": ""
													}
												],
												"src": "1335:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1562:86:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1626:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1635:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1638:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1628:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1628:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1628:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1585:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1596:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1611:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1616:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1607:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1607:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1620:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1603:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1603:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1592:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1592:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1582:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1582:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1575:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:50:5"
															},
															"nodeType": "YulIf",
															"src": "1572:70:5"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1551:5:5",
														"type": ""
													}
												],
												"src": "1517:131:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1723:177:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1769:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1778:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1781:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1771:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1771:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1771:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1744:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1753:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1740:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1740:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1765:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1736:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1736:32:5"
															},
															"nodeType": "YulIf",
															"src": "1733:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1794:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1820:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1807:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1807:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1798:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1864:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1839:24:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:31:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1879:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1889:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1879:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1689:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1700:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1712:6:5",
														"type": ""
													}
												],
												"src": "1653:247:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2052:879:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2062:12:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2072:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2066:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2090:9:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2101:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2083:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2083:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2083:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2113:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2131:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2142:3:5",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2127:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2127:19:5"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "2117:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2166:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2177:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2162:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2162:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2188:6:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2182:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2182:13:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2155:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2155:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2155:41:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2216:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2227:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2212:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2212:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2242:6:5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2250:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2238:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2238:15:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2232:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2232:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2205:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2205:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2205:50:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2275:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2286:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2271:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2271:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2301:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2309:2:5",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2297:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2297:15:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2291:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2291:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2264:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2264:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2264:50:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2334:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2345:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2330:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2330:19:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2361:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2369:2:5",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2357:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2357:15:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2351:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2351:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2323:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2323:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2323:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2394:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2405:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2390:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2390:19:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2421:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2429:3:5",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2417:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2417:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2411:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2411:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2383:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2383:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2383:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2444:43:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2474:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2482:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2470:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2470:16:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2464:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2464:23:5"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "2448:12:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2507:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2518:4:5",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2503:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2503:20:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2525:4:5",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2496:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2496:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2496:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2539:17:5",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "2550:6:5"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "2543:3:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2565:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "2585:12:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2579:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2579:19:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2569:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "2614:6:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2622:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2607:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2607:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2607:22:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2638:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2649:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2660:3:5",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2645:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2645:19:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2638:3:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2673:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "2691:12:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2705:2:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2687:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2687:21:5"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2677:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2717:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2726:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2721:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2785:120:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2806:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "2817:6:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2811:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2811:13:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2799:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2799:26:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2799:26:5"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2838:19:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2849:3:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2854:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2845:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2845:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2838:3:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2870:25:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2884:6:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2892:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2880:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2880:15:5"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2870:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2747:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2750:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2744:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2758:18:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2760:14:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2769:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2772:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2765:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2765:9:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2760:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2740:3:5",
																"statements": []
															},
															"src": "2736:169:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2914:11:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2922:3:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2914:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Player_$317_memory_ptr__to_t_struct$_Player_$317_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2021:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2032:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2043:4:5",
														"type": ""
													}
												],
												"src": "1905:1026:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3023:228:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3069:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3078:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3081:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3071:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3071:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3071:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3044:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3053:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3040:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3040:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3065:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3036:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3036:32:5"
															},
															"nodeType": "YulIf",
															"src": "3033:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3094:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3120:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3107:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3107:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3098:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3164:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3139:24:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3139:31:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3179:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3189:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3179:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3203:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3230:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3241:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3226:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3226:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3213:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3213:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3203:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2981:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2992:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3004:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3012:6:5",
														"type": ""
													}
												],
												"src": "2936:315:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3357:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3367:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3379:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3390:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3375:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3375:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3367:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3409:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3424:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3440:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3445:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3436:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3436:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3449:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3432:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3432:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3420:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3420:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3402:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3402:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3402:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3326:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3337:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3348:4:5",
														"type": ""
													}
												],
												"src": "3256:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3496:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3513:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3520:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3525:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3516:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3516:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3506:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3506:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3553:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3556:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3546:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3546:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3546:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3577:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3580:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3570:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3570:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3570:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3464:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3691:1020:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3701:12:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3711:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3705:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3758:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3767:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3770:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3760:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3760:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3760:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3733:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3742:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3729:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3729:23:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3754:2:5"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3725:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3725:32:5"
															},
															"nodeType": "YulIf",
															"src": "3722:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3783:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3810:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3797:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3797:23:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3787:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3829:28:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3839:18:5",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3833:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3884:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3893:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3896:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3886:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3886:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3886:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3872:6:5"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3880:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3869:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3869:14:5"
															},
															"nodeType": "YulIf",
															"src": "3866:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3909:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3923:9:5"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3934:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3919:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3919:22:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3913:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3989:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3998:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4001:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3991:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3991:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3991:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "3968:2:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3972:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3964:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3964:13:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3979:7:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3960:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3960:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3953:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3953:35:5"
															},
															"nodeType": "YulIf",
															"src": "3950:55:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4014:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4037:2:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4024:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4024:16:5"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4018:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4063:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4065:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4065:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4065:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4055:2:5"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4059:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4052:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4052:10:5"
															},
															"nodeType": "YulIf",
															"src": "4049:36:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4094:20:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4108:1:5",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4111:2:5"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4104:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4104:10:5"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "4098:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4123:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4143:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4137:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4137:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4127:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4155:56:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4177:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "4193:2:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4197:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4189:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4189:11:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4206:2:5",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4202:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4202:7:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4185:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4185:25:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4173:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4173:38:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4159:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4270:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4272:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4272:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4272:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4229:10:5"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4241:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4226:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4226:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4249:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4261:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4246:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4246:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4223:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4223:46:5"
															},
															"nodeType": "YulIf",
															"src": "4220:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4308:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4312:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4301:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4301:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4301:22:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4332:17:5",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4343:6:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4336:3:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4365:6:5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4373:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4358:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4358:18:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4358:18:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4385:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4396:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4404:2:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4392:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4392:15:5"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4385:3:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4416:34:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "4438:2:5"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "4442:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4434:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4434:11:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4447:2:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4430:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4430:20:5"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "4420:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4482:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4491:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4494:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4484:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4484:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4484:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4465:6:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4473:7:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4462:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4462:19:5"
															},
															"nodeType": "YulIf",
															"src": "4459:39:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4507:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4522:2:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4526:2:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4518:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4518:11:5"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4511:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4594:86:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4615:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "4633:3:5"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "4620:12:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4620:17:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4608:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4608:30:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4608:30:5"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4651:19:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4662:3:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4667:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4658:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4658:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4651:3:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4549:3:5"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4554:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4546:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4546:15:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4562:23:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4564:19:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4575:3:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4580:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4571:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4571:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4564:3:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4542:3:5",
																"statements": []
															},
															"src": "4538:142:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4689:16:5",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4699:6:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4689:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3657:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3668:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3680:6:5",
														"type": ""
													}
												],
												"src": "3596:1115:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4929:250:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4939:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4951:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4962:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4947:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4947:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4939:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4982:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4993:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4975:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4975:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4975:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5031:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5016:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5016:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5036:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5009:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5009:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5009:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5063:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5074:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5059:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5059:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5079:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5052:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5052:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5052:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5106:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5117:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5102:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5102:18:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5122:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5095:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5095:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5095:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5149:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5160:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5145:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5145:19:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "5166:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5138:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5138:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5138:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4866:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4877:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4885:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4893:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4901:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4909:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4920:4:5",
														"type": ""
													}
												],
												"src": "4716:463:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5358:168:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5375:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5386:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5368:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5368:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5368:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5409:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5420:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5405:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5405:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5425:2:5",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5398:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5398:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5398:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5448:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5459:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5444:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5444:18:5"
																	},
																	{
																		"hexValue": "496e76616c6964206475656c20696e646578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5464:20:5",
																		"type": "",
																		"value": "Invalid duel index"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5437:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5437:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5437:48:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5494:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5506:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5517:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5502:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5502:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5494:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_042ec7ec98b3f211cb413ab2958a6f7f13583991e5c078900d538191a820bcb3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5335:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5349:4:5",
														"type": ""
													}
												],
												"src": "5184:342:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5563:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5587:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5592:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5583:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5583:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5573:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5573:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5573:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5620:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5623:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5613:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5613:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5613:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5644:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5647:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5637:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5637:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5637:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5531:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5837:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5854:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5865:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5847:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5847:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5847:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5888:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5899:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5884:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5884:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5904:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5877:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5877:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5877:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5927:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5938:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5923:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5923:18:5"
																	},
																	{
																		"hexValue": "796f7527726520616c72656164792062656174656e207468697320626f7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5943:33:5",
																		"type": "",
																		"value": "you're already beaten this boss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5916:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5916:61:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5916:61:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5986:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5998:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6009:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5994:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5994:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5986:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_50b9da6f13e385724190f2ee96eb70fff1ae5199ea32a27a3ac2a614b36849b0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5814:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5828:4:5",
														"type": ""
													}
												],
												"src": "5663:355:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6197:232:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6214:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6225:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6207:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6207:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6207:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6248:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6259:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6244:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6244:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6264:2:5",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6237:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6237:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6237:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6287:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6298:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6283:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6283:18:5"
																	},
																	{
																		"hexValue": "796f7520646f6e2774206861766520656e6f75676820656e6572677920666f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6303:34:5",
																		"type": "",
																		"value": "you don't have enough energy for"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6276:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6276:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6276:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6358:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6369:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6354:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6354:18:5"
																	},
																	{
																		"hexValue": "207468697320626f7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6374:12:5",
																		"type": "",
																		"value": " this boss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6347:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6347:40:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6347:40:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6396:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6408:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6419:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6404:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6404:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6396:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4be4fc7915517655f0bfc138bd013d6cd00655c1ed4b0cacb7fb403daf653f31__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6174:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6188:4:5",
														"type": ""
													}
												],
												"src": "6023:406:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6466:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6483:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6490:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6495:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6486:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6486:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6476:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6476:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6476:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6523:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6526:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6516:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6516:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6516:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6547:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6550:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6540:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6540:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6540:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6434:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6618:116:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6628:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6643:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6646:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6639:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6639:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6628:7:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6706:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6708:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6708:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6708:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6677:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6670:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6670:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "6684:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "6691:7:5"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "6700:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "6687:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6687:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "6681:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6681:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "6667:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6667:37:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6660:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6660:45:5"
															},
															"nodeType": "YulIf",
															"src": "6657:71:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6597:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6600:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6606:7:5",
														"type": ""
													}
												],
												"src": "6566:168:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6787:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6797:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6808:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6811:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6804:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6804:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6797:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6836:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6838:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6838:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6838:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6828:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6831:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6825:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6825:10:5"
															},
															"nodeType": "YulIf",
															"src": "6822:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6770:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6773:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6779:3:5",
														"type": ""
													}
												],
												"src": "6739:125:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6916:88:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6947:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6949:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6949:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6949:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6932:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6943:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6939:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6939:6:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6929:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6929:17:5"
															},
															"nodeType": "YulIf",
															"src": "6926:43:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6978:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6989:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6996:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6985:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6985:13:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6978:3:5"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6898:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6908:3:5",
														"type": ""
													}
												],
												"src": "6869:135:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7058:79:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7068:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7080:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7083:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7076:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7076:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7068:4:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7109:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7111:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7111:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7111:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "7100:4:5"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7106:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7097:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7097:11:5"
															},
															"nodeType": "YulIf",
															"src": "7094:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7040:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7043:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7049:4:5",
														"type": ""
													}
												],
												"src": "7009:128:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7203:374:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7213:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7233:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7227:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7227:12:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7217:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7255:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7260:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7248:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7248:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7248:19:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7276:14:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7286:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7280:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7299:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7310:3:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7315:2:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7306:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7306:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7299:3:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7327:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7345:5:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7352:2:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7341:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7341:14:5"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "7331:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7364:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7373:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7368:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7432:120:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7453:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "7464:6:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7458:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7458:13:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7446:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7446:26:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7446:26:5"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7485:19:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7496:3:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7501:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7492:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7492:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7485:3:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7517:25:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7531:6:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7539:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7527:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7527:15:5"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7517:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7394:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7397:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7391:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7391:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7405:18:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7407:14:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7416:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7419:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7412:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7412:9:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7407:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7387:3:5",
																"statements": []
															},
															"src": "7383:169:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7561:10:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7568:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7561:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7180:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7187:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7195:3:5",
														"type": ""
													}
												],
												"src": "7142:435:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7733:110:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7750:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7761:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7743:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7743:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7743:21:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7773:64:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7810:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7822:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7833:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7818:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7818:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7781:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7781:56:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7773:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7702:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7713:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7724:4:5",
														"type": ""
													}
												],
												"src": "7582:261:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7926:199:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7972:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7981:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7984:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7974:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7974:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7974:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7947:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7956:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7943:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7943:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7968:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7939:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7939:32:5"
															},
															"nodeType": "YulIf",
															"src": "7936:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7997:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8016:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8010:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8010:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "8001:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8079:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8088:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8091:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8081:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8081:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8081:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8048:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "8069:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "8062:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8062:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8055:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8055:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8045:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8045:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8038:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8038:40:5"
															},
															"nodeType": "YulIf",
															"src": "8035:60:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8104:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8114:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8104:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7892:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7903:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7915:6:5",
														"type": ""
													}
												],
												"src": "7848:277:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8304:176:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8321:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8332:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8314:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8314:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8314:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8355:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8366:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8351:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8351:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8371:2:5",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8344:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8344:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8344:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8394:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8405:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8390:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8390:18:5"
																	},
																	{
																		"hexValue": "5468697320746f6b656e20616c726561647920696e2067616d65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8410:28:5",
																		"type": "",
																		"value": "This token already in game"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8383:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8383:56:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8383:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8448:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8460:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8471:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8456:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8456:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8448:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_505f8ede6cd48fc2f47a81d280e79d7d2ce95903c145a2f5811078f0a2df5000__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8281:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8295:4:5",
														"type": ""
													}
												],
												"src": "8130:350:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8608:135:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8618:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8630:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8641:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8626:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8626:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8618:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8660:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8671:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8653:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8653:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8653:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8698:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8709:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8694:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8694:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "8728:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8721:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8721:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8714:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8714:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8687:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8687:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8687:50:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8569:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8580:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8588:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8599:4:5",
														"type": ""
													}
												],
												"src": "8485:258:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8780:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8797:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8804:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8809:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8800:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8800:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8790:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8790:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8790:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8837:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8840:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8830:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8830:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8830:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8861:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8864:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8854:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8854:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8854:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "8748:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8926:74:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8949:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "8951:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8951:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8951:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8946:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8939:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8939:9:5"
															},
															"nodeType": "YulIf",
															"src": "8936:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8980:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8989:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8992:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8985:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8985:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8980:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8911:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8914:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8920:1:5",
														"type": ""
													}
												],
												"src": "8880:120:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9179:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9196:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9207:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9189:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9189:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9189:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9230:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9241:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9226:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9226:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9246:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9219:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9219:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9219:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9269:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9280:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9265:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9265:18:5"
																	},
																	{
																		"hexValue": "6265666f726520796f75206e6565642062656174206e65636573736172792062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9285:34:5",
																		"type": "",
																		"value": "before you need beat necessary b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9258:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9258:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9258:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9340:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9351:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9336:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9336:18:5"
																	},
																	{
																		"hexValue": "6f7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9356:5:5",
																		"type": "",
																		"value": "oss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9329:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9329:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9329:33:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9371:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9383:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9394:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9379:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9379:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9371:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_339208c11585afd5384077c9574a76ccd282609899e98140014d374ff38c0484__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9156:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9170:4:5",
														"type": ""
													}
												],
												"src": "9005:399:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9583:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9600:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9611:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9593:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9593:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9593:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9634:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9645:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9630:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9630:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9650:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9623:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9623:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9623:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9673:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9684:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9669:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9669:18:5"
																	},
																	{
																		"hexValue": "796f7527726520616c726561647920636c61696d656420746869732065666665",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9689:34:5",
																		"type": "",
																		"value": "you're already claimed this effe"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9662:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9662:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9662:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9744:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9755:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9740:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9740:18:5"
																	},
																	{
																		"hexValue": "6374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9760:4:5",
																		"type": "",
																		"value": "ct"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9733:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9733:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9733:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9774:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9786:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9797:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9782:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9782:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9774:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0939ab694db9cba523fa19a4866cc6fe9bcef54a022b3b70116dfe24e56c7639__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9560:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9574:4:5",
														"type": ""
													}
												],
												"src": "9409:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9969:218:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9979:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9991:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10002:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9987:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9987:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9979:4:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10014:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10032:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10037:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10028:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10028:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10041:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10024:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10024:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10018:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10059:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10074:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10082:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10070:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10070:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10052:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10052:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10052:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10106:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10117:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10102:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10102:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10126:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10134:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10122:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10122:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10095:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10095:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10095:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10158:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10169:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10154:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10154:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10174:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10147:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10147:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10147:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9922:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9933:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9941:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9949:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9960:4:5",
														"type": ""
													}
												],
												"src": "9812:375:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10366:168:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10383:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10394:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10376:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10376:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10376:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10417:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10428:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10413:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10413:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10433:2:5",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10406:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10406:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10406:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10456:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10467:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10452:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10452:18:5"
																	},
																	{
																		"hexValue": "796f75277265206e6f7420696e20726f6f6d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10472:20:5",
																		"type": "",
																		"value": "you're not in room"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10445:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10445:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10445:48:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10502:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10514:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10525:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10510:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10510:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10502:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_494e7d9414203e4790f373c2f3ed6cf36707b385d143fbcd9f2e28a8fdb561be__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10343:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10357:4:5",
														"type": ""
													}
												],
												"src": "10192:342:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10713:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10730:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10741:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10723:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10723:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10723:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10764:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10775:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10760:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10760:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10780:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10753:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10753:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10753:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10803:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10814:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10799:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10799:18:5"
																	},
																	{
																		"hexValue": "796f7527726520616c72656164792061747461636b656420696e206475656c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10819:33:5",
																		"type": "",
																		"value": "you're already attacked in duel"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10792:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10792:61:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10792:61:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10862:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10874:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10885:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10870:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10870:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10862:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4088d262d54f98b516ed3d13f15518bdec24917db2cb4cd4a4cbd72e67c9760b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10690:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10704:4:5",
														"type": ""
													}
												],
												"src": "10539:355:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11078:153:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11095:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11106:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11088:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11088:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11088:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11133:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11144:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11129:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11129:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11149:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11122:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11122:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11122:30:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11161:64:5",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11198:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11210:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11221:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11206:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11206:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11169:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11169:56:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11161:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11039:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11050:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11058:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11069:4:5",
														"type": ""
													}
												],
												"src": "10899:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11439:222:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11456:3:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11461:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11449:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11449:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11449:19:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "11488:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11493:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11484:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11484:12:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11498:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11477:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11477:28:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11477:28:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "11525:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11530:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11521:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11521:12:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11535:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11514:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11514:28:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11514:28:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "11562:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11567:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11558:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11558:12:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11580:2:5",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value3",
																						"nodeType": "YulIdentifier",
																						"src": "11584:6:5"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "11576:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11576:15:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11597:26:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "11593:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11593:31:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11572:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11572:53:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11551:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11551:75:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11551:75:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11635:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11646:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11651:3:5",
																		"type": "",
																		"value": "116"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11642:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11642:13:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11635:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_uint256_t_bytes32_t_address__to_t_uint256_t_uint256_t_bytes32_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11391:3:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11396:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11404:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11412:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11420:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11431:3:5",
														"type": ""
													}
												],
												"src": "11236:425:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11704:74:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11727:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11729:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11729:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11729:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11724:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11717:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11717:9:5"
															},
															"nodeType": "YulIf",
															"src": "11714:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11758:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11767:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11770:1:5"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "11763:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11763:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11758:1:5"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11689:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11692:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11698:1:5",
														"type": ""
													}
												],
												"src": "11666:112:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11864:170:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11910:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11919:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11922:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11912:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11912:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11912:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11885:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11894:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11881:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11881:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11906:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11877:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11877:32:5"
															},
															"nodeType": "YulIf",
															"src": "11874:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11935:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11954:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11948:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11948:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "11939:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11998:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "11973:24:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11973:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11973:31:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12013:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12023:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12013:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11830:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11841:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11853:6:5",
														"type": ""
													}
												],
												"src": "11783:251:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12213:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12230:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12241:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12223:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12223:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12223:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12264:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12275:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12260:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12260:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12280:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12253:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12253:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12253:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12303:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12314:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12299:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12299:18:5"
																	},
																	{
																		"hexValue": "636f756c64206e6f742066696e6420617661696c61626c65206475656c20726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12319:34:5",
																		"type": "",
																		"value": "could not find available duel ro"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12292:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12292:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12292:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12374:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12385:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12370:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12370:18:5"
																	},
																	{
																		"hexValue": "6f6d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12390:4:5",
																		"type": "",
																		"value": "om"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12363:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12363:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12363:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12404:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12416:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12427:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12412:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12412:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12404:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1c843c22ab705ff871884ba5c31e286000b8cc46dbeb0a4858793b65e0e28044__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12190:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12204:4:5",
														"type": ""
													}
												],
												"src": "12039:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12616:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12633:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12644:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12626:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12626:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12626:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12667:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12678:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12663:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12663:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12683:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12656:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12656:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12656:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12706:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12717:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12702:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12702:18:5"
																	},
																	{
																		"hexValue": "796f75206861766520746f2064656665617420616c6c20626f73736573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12722:31:5",
																		"type": "",
																		"value": "you have to defeat all bosses"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12695:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12695:59:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12695:59:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12763:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12775:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12786:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12771:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12771:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12763:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e2b1c12a23f52f354130f8004acf33f776b073263d72bf83489fb7b9e9f4ac1e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12593:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12607:4:5",
														"type": ""
													}
												],
												"src": "12442:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12974:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12991:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13002:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12984:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12984:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12984:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13025:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13036:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13021:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13021:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13041:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13014:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13014:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13014:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13064:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13075:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13060:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13060:18:5"
																	},
																	{
																		"hexValue": "796f75277265206e6f74206f776e6572206f6620746865736520746f6b656e49",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13080:34:5",
																		"type": "",
																		"value": "you're not owner of these tokenI"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13053:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13053:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13053:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13135:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13146:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13131:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13131:18:5"
																	},
																	{
																		"hexValue": "6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13151:4:5",
																		"type": "",
																		"value": "ds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13124:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13124:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13124:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13165:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13177:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13188:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13173:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13173:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13165:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b23db9d487ed652e0c0f36b6b0ad1ad36aa9b02edc831013d62dbfc2edbdfa26__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12951:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12965:4:5",
														"type": ""
													}
												],
												"src": "12800:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13377:169:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13394:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13405:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13387:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13387:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13387:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13428:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13439:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13424:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13424:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13444:2:5",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13417:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13417:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13417:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13467:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13478:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13463:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13463:18:5"
																	},
																	{
																		"hexValue": "746f6b656e73207765726520636c61696d6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13483:21:5",
																		"type": "",
																		"value": "tokens were claimed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13456:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13456:49:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13456:49:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13514:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13526:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13537:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13522:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13522:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13514:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e433fbb6dc69f6fab1c5f5109768269d5ae7ef7a0fb6036cb1ba39964ad3df28__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13354:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13368:4:5",
														"type": ""
													}
												],
												"src": "13203:343:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13632:103:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13678:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13687:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13690:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13680:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13680:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13680:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13653:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13662:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13649:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13649:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13674:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13645:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13645:32:5"
															},
															"nodeType": "YulIf",
															"src": "13642:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13703:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13719:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13713:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13713:16:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "13703:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13598:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13609:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13621:6:5",
														"type": ""
													}
												],
												"src": "13551:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13849:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13859:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13871:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13882:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13867:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13867:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13859:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13901:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13912:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13894:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13894:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13894:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13818:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13829:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13840:4:5",
														"type": ""
													}
												],
												"src": "13740:185:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14099:218:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14109:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14121:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14132:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14117:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14117:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14109:4:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14144:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14162:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14167:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14158:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14158:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14171:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14154:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14154:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14148:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14189:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14204:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14212:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14200:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14200:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14182:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14182:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14182:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14236:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14247:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14232:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14232:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "14256:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14264:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14252:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14252:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14225:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14225:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14225:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14288:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14299:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14284:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14284:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14304:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14277:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14277:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14277:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_rational_10000_by_1__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14052:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14063:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14071:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14079:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14090:4:5",
														"type": ""
													}
												],
												"src": "13930:387:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14496:168:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14513:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14524:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14506:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14506:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14506:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14547:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14558:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14543:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14543:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14563:2:5",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14536:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14536:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14536:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14586:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14597:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14582:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14582:18:5"
																	},
																	{
																		"hexValue": "696e73756666696369656e742066756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14602:20:5",
																		"type": "",
																		"value": "insufficient funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14575:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14575:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14575:48:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14632:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14644:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14655:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14640:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14640:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14632:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14473:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14487:4:5",
														"type": ""
													}
												],
												"src": "14322:342:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14843:158:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14860:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14871:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14853:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14853:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14853:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14894:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14905:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14890:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14890:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14910:1:5",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14883:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14883:29:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14883:29:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14932:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14943:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14928:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14928:18:5"
																	},
																	{
																		"hexValue": "747279206c61746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14948:11:5",
																		"type": "",
																		"value": "try later"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14921:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14921:39:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14921:39:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14969:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14981:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14992:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14977:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14977:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14969:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8f899a6c2bdaa1b7b1a5d66ab55ed752230a4663d7d5450e0fd7ed7710d2b3b5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14820:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14834:4:5",
														"type": ""
													}
												],
												"src": "14669:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15180:223:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15197:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15208:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15190:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15190:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15190:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15231:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15242:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15227:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15227:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15247:2:5",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15220:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15220:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15220:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15270:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15281:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15266:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15266:18:5"
																	},
																	{
																		"hexValue": "796f7527726520616c726561647920636c61696d6564207468697320626f6e75",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15286:34:5",
																		"type": "",
																		"value": "you're already claimed this bonu"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15259:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15259:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15259:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15341:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15352:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15337:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15337:18:5"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15357:3:5",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15330:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15330:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15330:31:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15370:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15382:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15393:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15378:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15378:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15370:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ac6ed9a7880861c81f7087f376773afba11c96d486a34846caade468b7bb4804__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15157:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15171:4:5",
														"type": ""
													}
												],
												"src": "15006:397:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15582:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15599:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15610:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15592:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15592:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15592:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15633:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15644:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15629:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15629:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15649:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15622:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15622:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15622:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15672:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15683:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15668:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15668:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15688:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15661:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15661:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15661:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15743:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15754:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15739:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15739:18:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15759:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15732:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15732:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15732:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15777:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15789:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15800:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15785:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15785:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15777:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15559:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15573:4:5",
														"type": ""
													}
												],
												"src": "15408:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15989:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16006:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16017:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15999:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15999:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15999:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16040:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16051:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16036:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16036:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16056:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16029:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16029:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16029:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16079:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16090:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16075:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16075:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16095:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16068:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16068:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16068:62:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16139:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16151:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16162:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16147:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16147:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16139:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15966:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15980:4:5",
														"type": ""
													}
												],
												"src": "15815:356:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_struct$_Player_$317_memory_ptr__to_t_struct$_Player_$317_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let tail_1 := add(headStart, 224)\n        mstore(add(headStart, _1), mload(value0))\n        mstore(add(headStart, 64), mload(add(value0, _1)))\n        mstore(add(headStart, 96), mload(add(value0, 64)))\n        mstore(add(headStart, 128), mload(add(value0, 96)))\n        mstore(add(headStart, 160), mload(add(value0, 128)))\n        let memberValue0 := mload(add(value0, 160))\n        mstore(add(headStart, 0xc0), 0xc0)\n        let pos := tail_1\n        let length := mload(memberValue0)\n        mstore(tail_1, length)\n        pos := add(headStart, 256)\n        let srcPtr := add(memberValue0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n        }\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_042ec7ec98b3f211cb413ab2958a6f7f13583991e5c078900d538191a820bcb3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid duel index\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_50b9da6f13e385724190f2ee96eb70fff1ae5199ea32a27a3ac2a614b36849b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"you're already beaten this boss\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4be4fc7915517655f0bfc138bd013d6cd00655c1ed4b0cacb7fb403daf653f31__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"you don't have enough energy for\")\n        mstore(add(headStart, 96), \" this boss\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_505f8ede6cd48fc2f47a81d280e79d7d2ce95903c145a2f5811078f0a2df5000__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"This token already in game\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_339208c11585afd5384077c9574a76ccd282609899e98140014d374ff38c0484__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"before you need beat necessary b\")\n        mstore(add(headStart, 96), \"oss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0939ab694db9cba523fa19a4866cc6fe9bcef54a022b3b70116dfe24e56c7639__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"you're already claimed this effe\")\n        mstore(add(headStart, 96), \"ct\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_494e7d9414203e4790f373c2f3ed6cf36707b385d143fbcd9f2e28a8fdb561be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"you're not in room\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4088d262d54f98b516ed3d13f15518bdec24917db2cb4cd4a4cbd72e67c9760b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"you're already attacked in duel\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_array_uint256_dyn(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_packed_t_uint256_t_uint256_t_bytes32_t_address__to_t_uint256_t_uint256_t_bytes32_t_address__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        mstore(add(pos, 64), value2)\n        mstore(add(pos, 96), and(shl(96, value3), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 116)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_1c843c22ab705ff871884ba5c31e286000b8cc46dbeb0a4858793b65e0e28044__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"could not find available duel ro\")\n        mstore(add(headStart, 96), \"om\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e2b1c12a23f52f354130f8004acf33f776b073263d72bf83489fb7b9e9f4ac1e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"you have to defeat all bosses\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b23db9d487ed652e0c0f36b6b0ad1ad36aa9b02edc831013d62dbfc2edbdfa26__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"you're not owner of these tokenI\")\n        mstore(add(headStart, 96), \"ds\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e433fbb6dc69f6fab1c5f5109768269d5ae7ef7a0fb6036cb1ba39964ad3df28__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"tokens were claimed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address_t_address_t_rational_10000_by_1__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"insufficient funds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8f899a6c2bdaa1b7b1a5d66ab55ed752230a4663d7d5450e0fd7ed7710d2b3b5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"try later\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ac6ed9a7880861c81f7087f376773afba11c96d486a34846caade468b7bb4804__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"you're already claimed this bonu\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x859A62D0 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xC724CFD3 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDD6FFD37 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD6FFD37 EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0xE2EB41FF EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xE6F4CAB2 EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0xFCEFB2B6 EQ PUSH2 0x65A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC724CFD3 EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0xC9EC3950 EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0xD175810D EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xD9193025 EQ PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB863BD37 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xB863BD37 EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0xBECE83E4 EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0xC178D83D EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0xC54B9C78 EQ PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x859A62D0 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xB0CD0D56 EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0xB1501F9C EQ PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45D9D0BE GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x7A742B2D EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x7ADED47E EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x83948115 EQ PUSH2 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45D9D0BE EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x5D1B3D76 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x6893F296 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x6B7C7264 EQ PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2AA04A66 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x2AA04A66 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x2B56C1DD EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x2F15911D EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x39850C6B EQ PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x127226CC EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x204597E0 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x224D54B3 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x271C52BA EQ PUSH2 0x296 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x72D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5C JUMP JUMPDEST PUSH2 0xA38 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH2 0xC6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x359 PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE6 JUMP JUMPDEST PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0xED4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x3B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F8F JUMP JUMPDEST PUSH2 0xFBF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0xFF8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x264 PUSH2 0x444 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH2 0x100C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x48C CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH2 0x103F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x128D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x4C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH2 0x139B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x4E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD1 JUMP JUMPDEST PUSH2 0x140A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x501 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH2 0x14D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x1591 JUMP JUMPDEST PUSH2 0x294 PUSH2 0x529 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD1 JUMP JUMPDEST PUSH2 0x1636 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x1978 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x58E CALLDATASIZE PUSH1 0x4 PUSH2 0x1E43 JUMP JUMPDEST PUSH2 0x1A22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x1B6C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F2 PUSH2 0x5C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x635 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD1 JUMP JUMPDEST PUSH2 0x1BC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x655 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE6 JUMP JUMPDEST PUSH2 0x1C21 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x666 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x92DCECC2D8D2C840C8EACAD840D2DCC8CAF PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x6D2 JUMPI PUSH2 0x6D2 PUSH2 0x208F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x724 JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x716 JUMPI POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST ISZERO PUSH2 0x724 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x735 PUSH2 0x1D9E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP5 DUP2 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP2 MSTORE DUP2 MLOAD PUSH1 0x5 SWAP1 SWAP2 MUL PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 DUP2 ADD SWAP2 DUP3 SSTORE SWAP3 MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x7C5 SWAP2 PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE4 ADD SWAP1 PUSH1 0x2 PUSH2 0x1DBC JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT PUSH2 0x83D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7527726520616C72656164792062656174656E207468697320626F737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD CALLER DUP5 MSTORE PUSH1 0x6 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x8BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7520646F6E2774206861766520656E6F75676820656E6572677920666F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x207468697320626F7373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 GT PUSH2 0x964 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x910 PUSH1 0xA PUSH2 0x139B JUMP JUMPDEST PUSH2 0x91A SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST PUSH2 0x924 SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x939 JUMPI PUSH2 0x939 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x94E DUP2 DUP6 PUSH2 0x20D2 JUMP JUMPDEST SWAP4 POP POP DUP1 DUP1 PUSH2 0x95C SWAP1 PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8E8 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x983 SWAP1 DUP5 SWAP1 PUSH2 0x20FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x9EF JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE MLOAD DUP5 SWAP2 SWAP1 PUSH32 0x46475D55C3BC13C229507A0915F795FD03B23601512CC1AEAE9E0BF41A4075D8 SWAP1 PUSH2 0x9E2 SWAP1 DUP6 SWAP1 PUSH2 0x214C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xA0C SWAP1 PUSH1 0x3 PUSH2 0x20BB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xA2E SWAP1 DUP5 SWAP1 PUSH2 0x20FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP4 SWAP1 SSTORE SWAP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC13 JUMPI DUP2 PUSH1 0x5 ADD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0xA85 JUMPI PUSH2 0xA85 PUSH2 0x208F JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP6 MUL SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE POP SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2862BB25 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xACA JUMPI PUSH2 0xACA PUSH2 0x208F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB30 SWAP2 SWAP1 PUSH2 0x215F JUMP JUMPDEST ISZERO PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E20616C726561647920696E2067616D65000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFB4F8197 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xBA0 JUMPI PUSH2 0xBA0 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x20 SWAP1 SWAP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD PUSH1 0x4 DUP4 ADD MSTORE POP PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xC0B SWAP1 PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA67 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0xC27 PUSH1 0x14 PUSH2 0x139B JUMP JUMPDEST PUSH2 0xC32 SWAP1 PUSH1 0x64 PUSH2 0x20D2 JUMP JUMPDEST PUSH2 0xC3C SWAP2 SWAP1 PUSH2 0x2197 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0xC5C SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST PUSH2 0xC66 SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xC9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B4 SWAP1 PUSH2 0x21AB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xCB4 PUSH1 0x1 DUP4 PUSH2 0x20FE JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xCC4 JUMPI PUSH2 0xCC4 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND ISZERO PUSH2 0xD32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7527726520616C726561647920636C61696D656420746869732065666665 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x18DD PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3E PUSH1 0xA PUSH2 0x139B JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 GT PUSH2 0xD76 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0xA SWAP3 SWAP1 PUSH2 0xD6B SWAP1 DUP5 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xDEA SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0xA SWAP3 SWAP1 PUSH2 0xD99 SWAP1 DUP5 SWAP1 PUSH2 0x20FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 PUSH2 0xDBA DUP3 DUP6 PUSH2 0x20FE JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xDCA JUMPI PUSH2 0xDCA PUSH2 0x208F JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE27 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xC0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP2 DUP6 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD DUP1 SLOAD DUP6 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP7 MSTORE DUP1 DUP7 MSTORE SWAP2 SWAP5 SWAP3 SWAP4 PUSH1 0xA0 DUP7 ADD SWAP4 SWAP3 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xEC4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xEB0 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH2 0xEE0 PUSH2 0x1591 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xEF0 JUMPI PUSH2 0xEF0 PUSH2 0x208F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP CALLER DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0xF17 JUMPI PUSH2 0xF17 PUSH2 0x208F JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF84 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFA8 SWAP2 SWAP1 PUSH2 0x215F JUMP JUMPDEST POP DUP1 SLOAD DUP2 PUSH1 0x0 PUSH2 0xFB7 DUP4 PUSH2 0x20E5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x5 DUP2 LT PUSH2 0xFDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1000 PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0x100A PUSH1 0x0 PUSH2 0x1D4E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x101C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1054 JUMPI PUSH2 0x1054 PUSH2 0x208F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH2 0x106D DUP3 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x10AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x796F75277265206E6F7420696E20726F6F6D PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x2 DUP2 GT PUSH2 0x1151 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x10FD PUSH1 0xA PUSH2 0x139B JUMP JUMPDEST PUSH2 0x1107 SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST PUSH2 0x1111 SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST SWAP1 POP DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1126 JUMPI PUSH2 0x1126 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x113B DUP2 DUP5 PUSH2 0x20D2 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x1149 SWAP1 PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10D5 JUMP JUMPDEST POP CALLER PUSH1 0x1 DUP5 ADD PUSH1 0x0 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x11D9 JUMPI DUP1 DUP4 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x117D SWAP2 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP4 ADD SLOAD ISZERO PUSH2 0x11D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7527726520616C72656164792061747461636B656420696E206475656C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH2 0x1244 JUMP JUMPDEST DUP1 DUP4 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11ED SWAP2 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP4 ADD SLOAD ISZERO PUSH2 0x1244 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7527726520616C72656164792061747461636B656420696E206475656C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF2BA4445FBD3AF142B7A1251DF18B6D462B23687B1BC8799A1C3EDDB4FF0826 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x127F SWAP3 SWAP2 SWAP1 PUSH2 0x21EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 LT ISZERO PUSH2 0x135E JUMPI PUSH1 0x1 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xFB4F8197 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x12E4 JUMPI PUSH2 0x12E4 PUSH2 0x208F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1319 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1347 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x1356 SWAP1 PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1290 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 SSTORE SWAP1 PUSH2 0xDEA PUSH1 0x5 DUP4 ADD DUP3 PUSH2 0x1E14 JUMP JUMPDEST PUSH1 0x0 DUP2 TIMESTAMP DIFFICULTY PUSH2 0x13AB PUSH1 0x1 NUMBER PUSH2 0x20FE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE BLOCKHASH PUSH1 0x60 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP1 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x94 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x1404 SWAP2 SWAP1 PUSH2 0x220F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x14D0 JUMPI PUSH1 0x1 SLOAD DUP4 MLOAD ORIGIN SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 DUP7 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x1440 JUMPI PUSH2 0x1440 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1466 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1483 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14A7 SWAP2 SWAP1 PUSH2 0x2223 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x14BE JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x14C8 DUP2 PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x140E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD DUP3 PUSH2 0x14E9 SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1541 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1565 SWAP2 SWAP1 PUSH2 0x215F JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1588 SWAP1 DUP5 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x15E2 JUMPI PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x15B2 JUMPI PUSH2 0x15B2 PUSH2 0x208F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD SLOAD PUSH1 0x2 EQ PUSH2 0x15D0 JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH2 0x15DA DUP2 PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1595 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636F756C64206E6F742066696E6420617661696C61626C65206475656C20726F PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6F6D PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 EQ PUSH2 0x1695 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F75206861766520746F2064656665617420616C6C20626F73736573000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH2 0x169E DUP2 PUSH2 0x140A JUMP JUMPDEST PUSH2 0x16F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F75277265206E6F74206F776E6572206F6620746865736520746F6B656E49 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6473 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH2 0x16FE DUP2 PUSH2 0x1BC0 JUMP JUMPDEST ISZERO PUSH2 0x1741 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1D1BDAD95B9CC81DD95C994818DB185A5B5959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1932 JUMPI PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1766 JUMPI PUSH2 0x1766 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x179F PUSH1 0xA PUSH2 0x139B JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 GT PUSH2 0x18A1 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9113247 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x64 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA9113247 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1817 SWAP2 SWAP1 PUSH2 0x2240 JUMP JUMPDEST PUSH2 0x1822 SWAP1 PUSH1 0x14 PUSH2 0x20BB JUMP JUMPDEST PUSH2 0x182C SWAP2 SWAP1 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0x1836 SWAP1 DUP5 PUSH2 0x20D2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4261CADD PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x84C395BA SWAP2 PUSH2 0x186A SWAP2 PUSH1 0x4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1898 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x191F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x2710 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x191D SWAP2 SWAP1 PUSH2 0x215F JUMP JUMPDEST POP JUMPDEST POP DUP1 PUSH2 0x192A DUP2 PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1745 JUMP JUMPDEST POP DUP1 CALLVALUE LT ISZERO PUSH2 0xDEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x696E73756666696369656E742066756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x1998 SWAP1 PUSH3 0x15180 PUSH2 0x20D2 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x19D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3A393C903630BA32B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x1 ADD SLOAD PUSH1 0x3 SLOAD PUSH2 0x19F9 SWAP2 SWAP1 PUSH2 0x20BB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1A1B SWAP1 DUP5 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x1A51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B4 SWAP1 PUSH2 0x21AB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1A6B PUSH1 0x1 DUP4 PUSH2 0x20FE JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x1A7B JUMPI PUSH2 0x1A7B PUSH2 0x208F JUMP JUMPDEST PUSH1 0x20 DUP2 DIV SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x1F SWAP1 SWAP3 AND PUSH2 0x100 EXP SWAP1 DIV AND ISZERO PUSH2 0x1AE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7527726520616C726561647920636C61696D6564207468697320626F6E75 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 PUSH1 0xA PUSH2 0x139B JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 GT PUSH2 0x1B2C JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0xA SWAP3 SWAP1 PUSH2 0x1B21 SWAP1 DUP5 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1B50 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x3E8 SWAP3 SWAP1 PUSH2 0xD99 SWAP1 DUP5 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 PUSH2 0xDBA DUP3 DUP6 PUSH2 0x20FE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH2 0x1B79 PUSH2 0x1591 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1B89 JUMPI PUSH2 0x1B89 PUSH2 0x208F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 ADD SLOAD DUP3 PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x1BB3 JUMPI POP PUSH1 0x0 PUSH2 0x1BB7 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x724 JUMPI PUSH1 0xB PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1BE3 JUMPI PUSH2 0x1BE3 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1C0F JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x1C19 DUP2 PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1BC4 JUMP JUMPDEST PUSH2 0x1C29 PUSH2 0x1CF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1C8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH2 0x1C97 DUP2 PUSH2 0x1D4E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4261CADD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x84C395BA SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x100A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH1 0x2 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1E04 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1E04 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1DCF JUMP JUMPDEST POP PUSH2 0x1E10 SWAP3 SWAP2 POP PUSH2 0x1E2E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1C97 SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1E10 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E2F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1EAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1EBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F03 DUP2 PUSH2 0x1ED1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE PUSH1 0xE0 DUP4 ADD DUP5 MLOAD DUP3 DUP6 ADD MSTORE DUP2 DUP6 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 DUP1 DUP7 ADD MSTORE DUP2 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x100 DUP8 ADD SWAP2 POP DUP5 DUP4 ADD SWAP4 POP PUSH1 0x0 SWAP3 POP JUMPDEST DUP1 DUP4 LT ISZERO PUSH2 0x1F84 JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1F64 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1FAD DUP2 PUSH2 0x1ED1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1FFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2010 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2022 JUMPI PUSH2 0x2022 PUSH2 0x1FBB JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x2047 JUMPI PUSH2 0x2047 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x2065 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x2083 JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x206A JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1404 JUMPI PUSH2 0x1404 PUSH2 0x20A5 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1404 JUMPI PUSH2 0x1404 PUSH2 0x20A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x20F7 JUMPI PUSH2 0x20F7 PUSH2 0x20A5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1404 JUMPI PUSH2 0x1404 PUSH2 0x20A5 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2141 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2125 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1F03 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2111 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1F03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x21A6 JUMPI PUSH2 0x21A6 PUSH2 0x2181 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x6265666F726520796F75206E6565642062656174206E65636573736172792062 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x6F7373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2207 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2111 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x221E JUMPI PUSH2 0x221E PUSH2 0x2181 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1F03 DUP2 PUSH2 0x1ED1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR POP DUP2 0x5F BLOCKHASH CODECOPY PUSH7 0x4330196E2D4A64 DUP7 0xBE JUMPI SAR 0xBD RETURNDATACOPY 0x25 MSTORE8 CREATE2 SDIV EXP PUSH25 0x3CE06CD2DEBC64736F6C634300081100330000000000000000 ",
							"sourceMap": "172:15853:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3093:401;;;;;;;;;;-1:-1:-1;3093:401:4;;;;;:::i;:::-;;:::i;:::-;;;364:14:5;;357:22;339:41;;327:2;312:18;3093:401:4;;;;;;;;472:43;;;;;;;;;;-1:-1:-1;472:43:4;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;593:25:5;;;649:2;634:18;;627:34;;;;677:18;;;670:34;581:2;566:18;472:43:4;391:319:5;1969:174:4;;;;;;;;;;;;;:::i;:::-;;2998:88;;;;;;;;;;-1:-1:-1;2998:88:4;;;;;:::i;:::-;3057:13;:22;2998:88;10312:1367;;;;;;;;;;-1:-1:-1;10312:1367:4;;;;;:::i;:::-;;:::i;7562:985::-;;;;;;;;;;-1:-1:-1;7562:985:4;;;;;:::i;:::-;;:::i;3500:179::-;;;;;;;;;;;;;:::i;:::-;;;1481:25:5;;;1469:2;1454:18;3500:179:4;1335:177:5;14197:867:4;;;;;;;;;;-1:-1:-1;14197:867:4;;;;;:::i;:::-;;:::i;1233:115::-;;;;;;;;;;-1:-1:-1;1233:115:4;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2648:94::-;;;;;;;;;;-1:-1:-1;2648:94:4;;;;;:::i;:::-;2710:16;:25;2648:94;5446:520;;;;;;;;;;;;;:::i;13971:48::-;;;;;;;;;;-1:-1:-1;13971:48:4;;;;;:::i;:::-;;:::i;1824:101:0:-;;;;;;;;;;;;;:::i;2841:100:4:-;;;;;;;;;;-1:-1:-1;2841:100:4;;;;;:::i;:::-;2906:19;:28;2841:100;7450:106;;;;;;;;;;-1:-1:-1;7450:106:4;;;;;:::i;:::-;7534:4;7450:106;;;;;5138:31;;;;;;;;;;;;;;;;1748:23;;;;;;;;;;-1:-1:-1;1748:23:4;;;;;:::i;:::-;;:::i;1201:85:0:-;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:0;;;3402:51:5;;3390:2;3375:18;1201:85:0;3256:203:5;3781:1350:4;;;;;;;;;;-1:-1:-1;3781:1350:4;;;;;:::i;:::-;;:::i;8553:549::-;;;;;;;;;;;;;:::i;2151:405::-;;;;;;;;;;-1:-1:-1;2151:405:4;;;;;:::i;:::-;;:::i;11691:322::-;;;;;;;;;;-1:-1:-1;11691:322:4;;;;;:::i;:::-;;:::i;9850:345::-;;;;;;;;;;-1:-1:-1;9850:345:4;;;;;:::i;:::-;;:::i;5176:264::-;;;;;;;;;;;;;:::i;12442:1164::-;;;;;;:::i;:::-;;:::i;9299:545::-;;;;;;;;;;;;;:::i;12019:48::-;;;;;;;;;;-1:-1:-1;12019:48:4;;;;;:::i;:::-;;;;;;;;;;;;;;;;15077:942;;;;;;;;;;-1:-1:-1;15077:942:4;;;;;:::i;:::-;;:::i;5972:809::-;;;;;;;;;;;;;:::i;425:41::-;;;;;;;;;;-1:-1:-1;425:41:4;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4975:25:5;;;5031:2;5016:18;;5009:34;;;;5059:18;;;5052:34;;;;5117:2;5102:18;;5095:34;5160:3;5145:19;;5138:35;4962:3;4947:19;425:41:4;4716:463:5;12074:290:4;;;;;;;;;;-1:-1:-1;12074:290:4;;;;;:::i;:::-;;:::i;2074:198:0:-;;;;;;;;;;-1:-1:-1;2074:198:0;;;;;:::i;:::-;;:::i;13612:97:4:-;;;;;;;;;;;;;:::i;3093:401::-;3203:5;:12;3170:4;;3190:25;;3182:56;;;;-1:-1:-1;;;3182:56:4;;5386:2:5;3182:56:4;;;5368:21:5;5425:2;5405:18;;;5398:30;-1:-1:-1;;;5444:18:5;;;5437:48;5502:18;;3182:56:4;;;;;;;;;3249:28;3280:5;3286:10;3280:17;;;;;;;;:::i;:::-;;;;;;;;;;;3249:48;;3332:1;3307:11;:22;;;:26;3303:166;;;3349:19;;;:22;-1:-1:-1;;;;;3349:22:4;3375:10;3349:36;;:76;;-1:-1:-1;3389:22:4;;;;-1:-1:-1;;;;;3389:22:4;3415:10;3389:36;3349:76;3345:118;;;-1:-1:-1;3448:4:4;;3093:401;-1:-1:-1;;3093:401:4:o;3345:118::-;-1:-1:-1;3486:5:4;;3093:401;-1:-1:-1;;3093:401:4:o;1969:174::-;2024:30;;:::i;:::-;2076:59;;;;;;;;-1:-1:-1;2076:59:4;;;;;;;;;;;;;;;;;;;;;2065:5;:71;;;;;;;;;;;;;;;;;;;;;;;2076:59;;2065:71;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;2005:138;1969:174::o;10312:1367::-;10398:10;10390:19;;;;:7;:19;;;;;:35;:48;-1:-1:-1;10382:92:4;;;;-1:-1:-1;;;10382:92:4;;5865:2:5;10382:92:4;;;5847:21:5;5904:2;5884:18;;;5877:30;5943:33;5923:18;;;5916:61;5994:18;;10382:92:4;5663:355:5;10382:92:4;10700:18;;;;:6;:18;;;;;;;;:25;10671:10;10663:19;;:7;:19;;;;;;:33;;;:62;;10655:117;;;;-1:-1:-1;;;10655:117:4;;6225:2:5;10655:117:4;;;6207:21:5;6264:2;6244:18;;;6237:30;6303:34;6283:18;;;6276:62;-1:-1:-1;;;6354:18:5;;;6347:40;6404:19;;10655:117:4;6023:406:5;10655:117:4;10844:16;;;10858:1;10844:16;;;;;;;;;10786;;;;10844;;;;;;;;;;;-1:-1:-1;10844:16:4;10817:43;;10876:6;10871:220;10893:1;10888;:6;10871:220;;10984:10;10933:11;10976:19;;;:7;:19;;;;;:32;;;10960:13;;10947:10;10954:2;10947:6;:10::i;:::-;:26;;;;:::i;:::-;:61;;;;:::i;:::-;10933:75;;11039:6;11026:7;11034:1;11026:10;;;;;;;;:::i;:::-;;;;;;;;;;:19;11059:21;11074:6;11059:21;;:::i;:::-;;;10911:180;10896:4;;;;;:::i;:::-;;;;10871:220;;;-1:-1:-1;11101:18:4;;;;:6;:18;;;;;:40;;11130:11;;11101:18;:40;;11130:11;;11101:40;:::i;:::-;;;;-1:-1:-1;;11231:18:4;;;;:6;:18;;;;;:25;:30;;11228:444;;11359:10;11351:19;;;;:7;:19;;;;;;;:48;;;11418:45;11389:10;;11359;11418:45;;;;11455:7;;11418:45;:::i;:::-;;;;;;;;10363:1316;;10312:1367;:::o;11228:444::-;11626:18;;;;:6;:18;;;;;:31;;;:34;;11659:1;11626:34;:::i;:::-;11597:10;11589:19;;;;:7;:19;;;;;:33;;:71;;:33;;:19;:71;;;;;:::i;:::-;;;;-1:-1:-1;;10363:1316:4;;10312:1367;:::o;7562:985::-;7717:10;7682:24;7709:19;;;:7;:19;;;;;7917:29;;;7981:1;7956:22;;;:26;7992:23;;;:27;;;8071:36;;;:40;;;8029:28;;;8121:47;;;7709:19;8264:277;8284:20;;;8264:277;;;8325:9;:25;;8356:9;;8366:1;8356:12;;;;;;;:::i;:::-;8325:44;;;;;;;;-1:-1:-1;8325:44:4;;;8356:12;8325:44;;;;8356:12;;;;;;;;;8325:44;;;;;;-1:-1:-1;8392:10:4;-1:-1:-1;;;;;8392:10:4;:30;8423:9;;8433:1;8423:12;;;;;;;:::i;:::-;;;;;;;8392:44;;;;;;;;;;;;;1481:25:5;;1469:2;1454:18;;1335:177;8392:44:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8391:45;8383:84;;;;-1:-1:-1;;;8383:84:4;;8332:2:5;8383:84:4;;;8314:21:5;8371:2;8351:18;;;8344:30;8410:28;8390:18;;;8383:56;8456:18;;8383:84:4;8130:350:5;8383:84:4;8481:10;;-1:-1:-1;;;;;8481:10:4;:29;8511:9;;8521:1;8511:12;;;;;;;:::i;:::-;8481:49;;-1:-1:-1;;;;;;8481:49:4;;;;;;;8511:12;;;;;;;;;8481:49;;;8653:25:5;-1:-1:-1;8525:4:4;8694:18:5;;;8687:50;8626:18;;8481:49:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8306:3;;;;;:::i;:::-;;;;8264:277;;;;7620:927;7562:985;;:::o;3500:179::-;3551:4;3648:3;3630:10;3637:2;3630:6;:10::i;:::-;:16;;3643:3;3630:16;:::i;:::-;3629:22;;;;:::i;:::-;3600:10;3592:19;;;;:7;:19;;;;;:32;;;3576:13;;:48;;3592:32;3576:48;:::i;:::-;3575:78;;;;:::i;:::-;3567:86;;3500:179;:::o;14197:867::-;14283:10;14275:19;;;;:7;:19;;;;;:35;:53;-1:-1:-1;14275:53:4;14267:101;;;;-1:-1:-1;;;14267:101:4;;;;;;;:::i;:::-;14724:10;14711:24;;;;:12;:24;;;;;14736:16;14751:1;14736:14;:16;:::i;:::-;14711:42;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;14710:43;14702:90;;;;-1:-1:-1;;;14702:90:4;;9611:2:5;14702:90:4;;;9593:21:5;9650:2;9630:18;;;9623:30;9689:34;9669:18;;;9662:62;-1:-1:-1;;;9740:18:5;;;9733:32;9782:19;;14702:90:4;9409:398:5;14702:90:4;14802:11;14816:10;14823:2;14816:6;:10::i;:::-;14802:24;;14850:1;14841:6;:10;14838:225;;14875:10;14867:19;;;;:7;:19;;;;;:32;;:38;;14903:2;;14867:19;:38;;14903:2;;14867:38;:::i;:::-;;;;-1:-1:-1;14838:225:4;;-1:-1:-1;14838:225:4;;14962:10;14954:19;;;;:7;:19;;;;;:32;;:38;;14990:2;;14954:19;:38;;14990:2;;14954:38;:::i;:::-;;;;-1:-1:-1;;15020:10:4;15007:24;;;;:12;:24;;;;;15052:4;;15032:16;15052:4;15032:14;:16;:::i;:::-;15007:42;;;;;;;:::i;:::-;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;14838:225;14252:812;14197:867;:::o;1233:115::-;1293:13;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1293:13:4;-1:-1:-1;;;;;1325:16:4;;;;;;:7;:16;;;;;;;;;1318:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1325:16;;1318:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1233:115;;;:::o;5446:520::-;5487:28;5518:5;5524:19;:17;:19::i;:::-;5518:26;;;;;;;;:::i;:::-;;;;;;;;;;;5487:57;;5737:10;5712:11;:19;;5732:1;5712:22;;;;;;;:::i;:::-;;:35;;-1:-1:-1;;;;;;5712:35:4;-1:-1:-1;;;;;5712:35:4;;;;;;5761:7;;5809:9;;5761:59;;-1:-1:-1;;;5761:59:4;;5782:10;5761:59;;;10052:34:5;5802:4:4;10102:18:5;;;10095:43;10154:18;;;10147:34;;;;5761:7:4;;;:20;;9987:18:5;;5761:59:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5835:24:4;;:11;:22;:24;;;:::i;:::-;;;;;;5476:490;5446:520::o;13971:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13971:48:4;;-1:-1:-1;13971:48:4:o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1748:23:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1748:23:4;:::o;3781:1350::-;3861:28;3892:5;3898:10;3892:17;;;;;;;;:::i;:::-;;;;;;;;;;;3861:48;;3928:37;3954:10;3928:25;:37::i;:::-;3920:68;;;;-1:-1:-1;;;3920:68:4;;10394:2:5;3920:68:4;;;10376:21:5;10433:2;10413:18;;;10406:30;-1:-1:-1;;;10452:18:5;;;10445:48;10510:18;;3920:68:4;10192:342:5;3920:68:4;4258:16;;;4272:1;4258:16;;;;;;;;;4231:24;;4258:16;;;;;;;;;;-1:-1:-1;;4231:43:4;-1:-1:-1;4285:16:4;;4312:220;4334:1;4329;:6;4312:220;;4425:10;4374:11;4417:19;;;:7;:19;;;;;:32;;;4401:13;;4388:10;4395:2;4388:6;:10::i;:::-;:26;;;;:::i;:::-;:61;;;;:::i;:::-;4374:75;;4480:6;4467:7;4475:1;4467:10;;;;;;;;:::i;:::-;;;;;;;;;;:19;4500:21;4515:6;4500:21;;:::i;:::-;;;4352:180;4337:4;;;;;:::i;:::-;;;;4312:220;;;-1:-1:-1;4578:10:4;4552:19;;;4572:1;4552:22;;-1:-1:-1;;;;;4552:22:4;:36;4548:501;;4651:11;4617;:30;;;:45;;;;;;;:::i;:::-;;;;-1:-1:-1;;4721:30:4;;;;:35;4713:79;;;;-1:-1:-1;;;4713:79:4;;10741:2:5;4713:79:4;;;10723:21:5;10780:2;10760:18;;;10753:30;10819:33;10799:18;;;10792:61;10870:18;;4713:79:4;10539:355:5;4713:79:4;4548:501;;;4866:11;4832;:30;;;:45;;;;;;;:::i;:::-;;;;-1:-1:-1;;4966:30:4;;;;:35;4958:79;;;;-1:-1:-1;;;4958:79:4;;10741:2:5;4958:79:4;;;10723:21:5;10780:2;10760:18;;;10753:30;10819:33;10799:18;;;10792:61;10870:18;;4958:79:4;10539:355:5;4958:79:4;5080:10;-1:-1:-1;;;;;5065:47:4;;5092:10;5104:7;5065:47;;;;;;;:::i;:::-;;;;;;;;3832:1299;;;3781:1350;:::o;8553:549::-;8709:9;8691:368;8748:10;8740:19;;;;:7;:19;;;;;:35;;:42;8736:46;;8691:368;;;8824:10;;8879;8824;8871:19;;;:7;:19;;;;;:35;;:38;;-1:-1:-1;;;;;8824:10:4;;;;:29;;8871:35;8907:1;;8871:38;;;;;;:::i;:::-;;;;;;;;;8927:5;8824:122;;;;;;;;;;;;;;;8653:25:5;;;8721:14;8714:22;8709:2;8694:18;;8687:50;8641:2;8626:18;;8485:258;8824:122:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8796:3;;;;;:::i;:::-;;;;8691:368;;;-1:-1:-1;9084:10:4;9076:19;;;;:7;:19;;;;;9069:26;;;;;;;;;;;;;;;;;;;;;;;;;;;9076:19;9069:26;;;;9076:19;9069:26;:::i;2151:405::-;2204:7;2543:6;2340:15;2381:16;2433;2448:1;2433:12;:16;:::i;:::-;2298:210;;;;;;11449:19:5;;;;11484:12;;11477:28;;;;2423:27:4;11521:12:5;;;;11514:28;;;;2476:10:4;11576:15:5;;-1:-1:-1;;11572:53:5;11558:12;;;11551:75;11642:13;;2298:210:4;;;;;;;;;;;;2267:259;;;;;;2242:298;;:307;;;;:::i;:::-;2223:326;2151:405;-1:-1:-1;;2151:405:4:o;11691:322::-;11771:4;;11788:198;11809:9;:16;11805:1;:20;11788:198;;;11886:10;;11905:12;;11922:9;;-1:-1:-1;;;;;11886:10:4;;:18;;11905:9;;11915:1;;11905:12;;;;;;:::i;:::-;;;;;;;11886:32;;;;;;;;;;;;;1481:25:5;;1469:2;1454:18;;1335:177;11886:32:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11886:45:4;;11883:93;;-1:-1:-1;11957:5:4;;11691:322;-1:-1:-1;;11691:322:4:o;11883:93::-;11827:3;;;;:::i;:::-;;;;11788:198;;;-1:-1:-1;12002:4:4;;11691:322;-1:-1:-1;;11691:322:4:o;9850:345::-;9918:25;9962:19;;9946:13;:35;;;;:::i;:::-;9992:7;;:66;;-1:-1:-1;;;9992:66:4;;10013:10;9992:66;;;10052:34:5;10033:4:4;10102:18:5;;;10095:43;10154:18;;;10147:34;;;9918:63:4;;-1:-1:-1;;;;;;9992:7:4;;:20;;9987:18:5;;9992:66:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10077:10:4;10069:19;;;;:7;:19;;;;;:33;;:50;;10106:13;;10069:19;:50;;10106:13;;10069:50;:::i;:::-;;;;-1:-1:-1;;;;9850:345:4:o;5176:264::-;5225:7;;5245:132;5266:5;:12;5262:16;;5245:132;;;5308:5;5314:1;5308:8;;;;;;;;:::i;:::-;;;;;;;;;;;:19;;;5330:1;5308:23;5305:61;;5354:1;5176:264;-1:-1:-1;5176:264:4:o;5305:61::-;5280:3;;;;:::i;:::-;;;;5245:132;;;-1:-1:-1;5387:44:4;;-1:-1:-1;;;5387:44:4;;12241:2:5;5387:44:4;;;12223:21:5;12280:2;12260:18;;;12253:30;12319:34;12299:18;;;12292:62;-1:-1:-1;;;12370:18:5;;;12363:32;12412:19;;5387:44:4;12039:398:5;12442:1164:4;12861:10;12853:19;;;;:7;:19;;;;;:35;12892:1;12853:40;12845:82;;;;-1:-1:-1;;;12845:82:4;;12644:2:5;12845:82:4;;;12626:21:5;12683:2;12663:18;;;12656:30;12722:31;12702:18;;;12695:59;12771:18;;12845:82:4;12442:353:5;12845:82:4;12944:34;12968:9;12944:22;:34::i;:::-;12936:81;;;;-1:-1:-1;;;12936:81:4;;13002:2:5;12936:81:4;;;12984:21:5;13041:2;13021:18;;;13014:30;13080:34;13060:18;;;13053:62;-1:-1:-1;;;13131:18:5;;;13124:32;13173:19;;12936:81:4;12800:398:5;12936:81:4;13035:36;13061:9;13035:24;:36::i;:::-;13034:37;13026:69;;;;-1:-1:-1;;;13026:69:4;;13405:2:5;13026:69:4;;;13387:21:5;13444:2;13424:18;;;13417:30;-1:-1:-1;;;13463:18:5;;;13456:49;13522:18;;13026:69:4;13203:343:5;13026:69:4;13107:18;;13136:380;13157:9;:16;13153:1;:20;13136:380;;;13228:4;13195:16;:30;13212:9;13222:1;13212:12;;;;;;;;:::i;:::-;;;;;;;13195:30;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;13246:11;13260:10;13267:2;13260:6;:10::i;:::-;13246:24;;13293:1;13284:6;:10;13281:234;;13328:10;;:24;;;-1:-1:-1;;;13328:24:4;;;;13360:3;;-1:-1:-1;;;;;13328:10:4;;:22;;:24;;;;;;;;;;;;;;:10;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:29;;13355:2;13328:29;:::i;:::-;13327:36;;;;:::i;:::-;13310:53;;;;:::i;:::-;13382:10;;;:26;;-1:-1:-1;;;13382:26:4;;13310:53;;-1:-1:-1;;;;;;13382:10:4;;:23;;:26;;;;1481:25:5;;;1469:2;1454:18;;1335:177;13382:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13281:234;;;13448:7;;:54;;-1:-1:-1;;;13448:54:4;;13477:4;13448:54;;;10052:34:5;13484:10:4;10102:18:5;;;10095:43;13496:5:4;10154:18:5;;;10147:34;-1:-1:-1;;;;;13448:7:4;;;;:20;;9987:18:5;;13448:54:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13281:234;-1:-1:-1;13175:3:4;;;;:::i;:::-;;;;13136:380;;;;13548:13;13535:9;:26;;13527:57;;;;-1:-1:-1;;;13527:57:4;;14524:2:5;13527:57:4;;;14506:21:5;14563:2;14543:18;;;14536:30;-1:-1:-1;;;14582:18:5;;;14575:48;14640:18;;13527:57:4;14322:342:5;9299:545:4;9558:10;9550:19;;;;:7;:19;;;;;:46;;;:55;;9599:6;9550:55;:::i;:::-;9515:15;:90;;9494:146;;;;-1:-1:-1;;;9494:146:4;;14871:2:5;9494:146:4;;;14853:21:5;14910:1;14890:18;;;14883:29;-1:-1:-1;;;14928:18:5;;;14921:39;14977:18;;9494:146:4;14669:332:5;9494:146:4;9659:10;9651:19;;;;:7;:19;;;;;9700:15;9651:46;;;:64;9805:32;;;9774:16;;:63;;9805:32;9774:63;:::i;:::-;9733:10;9725:19;;;;:7;:19;;;;;:33;;:112;;:33;;:19;:112;;;;;:::i;:::-;;;;-1:-1:-1;;9299:545:4:o;15077:942::-;15216:10;15208:19;;;;:7;:19;;;;;:35;:53;-1:-1:-1;15208:53:4;15200:101;;;;-1:-1:-1;;;15200:101:4;;;;;;;:::i;:::-;15657:10;15644:24;;;;:12;:24;;;;;15669:16;15684:1;15669:14;:16;:::i;:::-;15644:42;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;15643:43;15635:89;;;;-1:-1:-1;;;15635:89:4;;15208:2:5;15635:89:4;;;15190:21:5;15247:2;15227:18;;;15220:30;15286:34;15266:18;;;15259:62;-1:-1:-1;;;15337:18:5;;;15330:31;15378:19;;15635:89:4;15006:397:5;15635:89:4;15735:11;15749:10;15756:2;15749:6;:10::i;:::-;15735:24;;15783:1;15774:6;:10;15771:173;;15808:10;15800:19;;;;:7;:19;;;;;:32;;:38;;15836:2;;15800:19;:38;;15836:2;;15800:38;:::i;:::-;;;;-1:-1:-1;15771:173:4;;-1:-1:-1;15771:173:4;;15895:10;15887:19;;;;:7;:19;;;;;:33;;:41;;15924:4;;15887:19;:41;;15924:4;;15887:41;:::i;15771:173::-;15975:10;15962:24;;;;:12;:24;;;;;16007:4;;15987:16;16007:4;15987:14;:16;:::i;5972:809::-;6014:7;6134:28;6165:5;6171:19;:17;:19::i;:::-;6165:26;;;;;;;;:::i;:::-;;;;;;;;;;;6134:57;;6203:19;6269:11;:30;;;6236:11;:30;;;:63;6232:155;;;-1:-1:-1;6329:1:4;6232:155;;;-1:-1:-1;6375:1:4;6232:155;6773:1;6766:8;;;;5972:809;:::o;12074:290::-;12156:4;;12179:154;12200:9;:16;12196:1;:20;12179:154;;;12248:16;:30;12265:9;12275:1;12265:12;;;;;;;;:::i;:::-;;;;;;;;;;;;12248:30;;;;;;;;;;-1:-1:-1;12248:30:4;;;;12245:78;;;-1:-1:-1;12305:4:4;;12074:290;-1:-1:-1;;12074:290:4:o;12245:78::-;12218:3;;;;:::i;:::-;;;;12179:154;;2074:198:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;15610:2:5;2154:73:0::1;::::0;::::1;15592:21:5::0;15649:2;15629:18;;;15622:30;15688:34;15668:18;;;15661:62;-1:-1:-1;;;15739:18:5;;;15732:36;15785:19;;2154:73:0::1;15408:402:5::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;13612:97:4:-;13675:10;;;:26;;-1:-1:-1;;;13675:26:4;;;;;1481:25:5;;;;-1:-1:-1;;;;;13675:10:4;;:23;;1454:18:5;;13675:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:130:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:1;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;16017:2:5;1414:68:0;;;15999:21:5;;;16036:18;;;16029:30;16095:34;16075:18;;;16068:62;16147:18;;1414:68:0;15815:356:5;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:5;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:5;;14:180;-1:-1:-1;14:180:5:o;715:615::-;801:6;809;862:2;850:9;841:7;837:23;833:32;830:52;;;878:1;875;868:12;830:52;918:9;905:23;947:18;988:2;980:6;977:14;974:34;;;1004:1;1001;994:12;974:34;1042:6;1031:9;1027:22;1017:32;;1087:7;1080:4;1076:2;1072:13;1068:27;1058:55;;1109:1;1106;1099:12;1058:55;1149:2;1136:16;1175:2;1167:6;1164:14;1161:34;;;1191:1;1188;1181:12;1161:34;1244:7;1239:2;1229:6;1226:1;1222:14;1218:2;1214:23;1210:32;1207:45;1204:65;;;1265:1;1262;1255:12;1204:65;1296:2;1288:11;;;;;1318:6;;-1:-1:-1;715:615:5;;-1:-1:-1;;;;715:615:5:o;1517:131::-;-1:-1:-1;;;;;1592:31:5;;1582:42;;1572:70;;1638:1;1635;1628:12;1653:247;1712:6;1765:2;1753:9;1744:7;1740:23;1736:32;1733:52;;;1781:1;1778;1771:12;1733:52;1820:9;1807:23;1839:31;1864:5;1839:31;:::i;:::-;1889:5;1653:247;-1:-1:-1;;;1653:247:5:o;1905:1026::-;2043:4;2072:2;2101;2090:9;2083:21;2142:3;2131:9;2127:19;2188:6;2182:13;2177:2;2166:9;2162:18;2155:41;2250:2;2242:6;2238:15;2232:22;2227:2;2216:9;2212:18;2205:50;2309:2;2301:6;2297:15;2291:22;2286:2;2275:9;2271:18;2264:50;2369:2;2361:6;2357:15;2351:22;2345:3;2334:9;2330:19;2323:51;2429:3;2421:6;2417:16;2411:23;2405:3;2394:9;2390:19;2383:52;2482:3;2474:6;2470:16;2464:23;2525:4;2518;2507:9;2503:20;2496:34;2550:6;2585:12;2579:19;2622:6;2614;2607:22;2660:3;2649:9;2645:19;2638:26;;2705:2;2691:12;2687:21;2673:35;;2726:1;2717:10;;2736:169;2750:6;2747:1;2744:13;2736:169;;;2811:13;;2799:26;;2880:15;;;;2772:1;2765:9;;;;;2845:12;;;;2736:169;;;-1:-1:-1;2922:3:5;1905:1026;-1:-1:-1;;;;;;1905:1026:5:o;2936:315::-;3004:6;3012;3065:2;3053:9;3044:7;3040:23;3036:32;3033:52;;;3081:1;3078;3071:12;3033:52;3120:9;3107:23;3139:31;3164:5;3139:31;:::i;:::-;3189:5;3241:2;3226:18;;;;3213:32;;-1:-1:-1;;;2936:315:5:o;3464:127::-;3525:10;3520:3;3516:20;3513:1;3506:31;3556:4;3553:1;3546:15;3580:4;3577:1;3570:15;3596:1115;3680:6;3711:2;3754;3742:9;3733:7;3729:23;3725:32;3722:52;;;3770:1;3767;3760:12;3722:52;3810:9;3797:23;3839:18;3880:2;3872:6;3869:14;3866:34;;;3896:1;3893;3886:12;3866:34;3934:6;3923:9;3919:22;3909:32;;3979:7;3972:4;3968:2;3964:13;3960:27;3950:55;;4001:1;3998;3991:12;3950:55;4037:2;4024:16;4059:2;4055;4052:10;4049:36;;;4065:18;;:::i;:::-;4111:2;4108:1;4104:10;4143:2;4137:9;4206:2;4202:7;4197:2;4193;4189:11;4185:25;4177:6;4173:38;4261:6;4249:10;4246:22;4241:2;4229:10;4226:18;4223:46;4220:72;;;4272:18;;:::i;:::-;4308:2;4301:22;4358:18;;;4392:15;;;;-1:-1:-1;4434:11:5;;;4430:20;;;4462:19;;;4459:39;;;4494:1;4491;4484:12;4459:39;4518:11;;;;4538:142;4554:6;4549:3;4546:15;4538:142;;;4620:17;;4608:30;;4571:12;;;;4658;;;;4538:142;;;4699:6;3596:1115;-1:-1:-1;;;;;;;;3596:1115:5:o;5531:127::-;5592:10;5587:3;5583:20;5580:1;5573:31;5623:4;5620:1;5613:15;5647:4;5644:1;5637:15;6434:127;6495:10;6490:3;6486:20;6483:1;6476:31;6526:4;6523:1;6516:15;6550:4;6547:1;6540:15;6566:168;6639:9;;;6670;;6687:15;;;6681:22;;6667:37;6657:71;;6708:18;;:::i;6739:125::-;6804:9;;;6825:10;;;6822:36;;;6838:18;;:::i;6869:135::-;6908:3;6929:17;;;6926:43;;6949:18;;:::i;:::-;-1:-1:-1;6996:1:5;6985:13;;6869:135::o;7009:128::-;7076:9;;;7097:11;;;7094:37;;;7111:18;;:::i;7142:435::-;7195:3;7233:5;7227:12;7260:6;7255:3;7248:19;7286:4;7315:2;7310:3;7306:12;7299:19;;7352:2;7345:5;7341:14;7373:1;7383:169;7397:6;7394:1;7391:13;7383:169;;;7458:13;;7446:26;;7492:12;;;;7527:15;;;;7419:1;7412:9;7383:169;;;-1:-1:-1;7568:3:5;;7142:435;-1:-1:-1;;;;;7142:435:5:o;7582:261::-;7761:2;7750:9;7743:21;7724:4;7781:56;7833:2;7822:9;7818:18;7810:6;7781:56;:::i;7848:277::-;7915:6;7968:2;7956:9;7947:7;7943:23;7939:32;7936:52;;;7984:1;7981;7974:12;7936:52;8016:9;8010:16;8069:5;8062:13;8055:21;8048:5;8045:32;8035:60;;8091:1;8088;8081:12;8748:127;8809:10;8804:3;8800:20;8797:1;8790:31;8840:4;8837:1;8830:15;8864:4;8861:1;8854:15;8880:120;8920:1;8946;8936:35;;8951:18;;:::i;:::-;-1:-1:-1;8985:9:5;;8880:120::o;9005:399::-;9207:2;9189:21;;;9246:2;9226:18;;;9219:30;9285:34;9280:2;9265:18;;9258:62;-1:-1:-1;;;9351:2:5;9336:18;;9329:33;9394:3;9379:19;;9005:399::o;10899:332::-;11106:6;11095:9;11088:25;11149:2;11144;11133:9;11129:18;11122:30;11069:4;11169:56;11221:2;11210:9;11206:18;11198:6;11169:56;:::i;:::-;11161:64;10899:332;-1:-1:-1;;;;10899:332:5:o;11666:112::-;11698:1;11724;11714:35;;11729:18;;:::i;:::-;-1:-1:-1;11763:9:5;;11666:112::o;11783:251::-;11853:6;11906:2;11894:9;11885:7;11881:23;11877:32;11874:52;;;11922:1;11919;11912:12;11874:52;11954:9;11948:16;11973:31;11998:5;11973:31;:::i;13551:184::-;13621:6;13674:2;13662:9;13653:7;13649:23;13645:32;13642:52;;;13690:1;13687;13680:12;13642:52;-1:-1:-1;13713:16:5;;13551:184;-1:-1:-1;13551:184:5:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1769400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"RiseClaimMap(address,uint256)": "4345",
								"bosses(uint256)": "6782",
								"buyEnergyForTokens(uint256)": "infinite",
								"calculateTestDamage()": "infinite",
								"checkOwnershipOfTokenIds(uint256[])": "547",
								"checkOwnershipOfTokens(uint256[])": "infinite",
								"claimBonus(uint256)": "infinite",
								"claimDailyEnergy()": "infinite",
								"claimDuel()": "infinite",
								"claimMysticEffect(uint256)": "infinite",
								"createNewDuelRoom()": "infinite",
								"doAttackInDuel(uint256)": "infinite",
								"duelPrice()": "2406",
								"duels(uint256)": "8904",
								"enterInDuel()": "infinite",
								"enterInGame(uint256[])": "infinite",
								"fightWithBoss(uint256)": "infinite",
								"findAvailableDuel()": "infinite",
								"getFinalTreasures(uint256[])": "infinite",
								"getInfoPlayer(address)": "infinite",
								"isPlayerInDuelAtIndexRoom(uint256)": "11097",
								"isTokenIdClaimed(uint256)": "2528",
								"isTokensClaimedTreasures(uint256[])": "infinite",
								"leaveGame()": "infinite",
								"owner()": "2369",
								"players(address)": "11123",
								"random(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"setDefEnergyAccrual(uint256)": "22380",
								"setDefaultDamage(uint256)": "22425",
								"setEnergyPriceInTokens(uint256)": "22379",
								"testMintDirectFromGame()": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"createBoss()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 172,
									"end": 16025,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 172,
									"end": 16025,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 172,
									"end": 16025,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 286,
									"end": 288,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 259,
									"end": 288,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 259,
									"end": 288,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 324,
									"end": 327,
									"name": "PUSH",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 294,
									"end": 327,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 294,
									"end": 327,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 408,
									"end": 411,
									"name": "PUSH",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 384,
									"end": 411,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 384,
									"end": 411,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 5165,
									"end": 5169,
									"name": "PUSH",
									"source": 4,
									"value": "3E8"
								},
								{
									"begin": 5138,
									"end": 5169,
									"name": "PUSH",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 5138,
									"end": 5169,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6806,
									"end": 6807,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 6787,
									"end": 6807,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 6787,
									"end": 6807,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1778,
									"end": 1963,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1831,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1867,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1867,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1821,
									"end": 1867,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1821,
									"end": 1867,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1867,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1867,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1867,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1867,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1877,
									"end": 1889,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1877,
									"end": 1887,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1877,
									"end": 1889,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1877,
									"end": 1889,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1877,
									"end": 1889,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1899,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1899,
									"end": 1911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1899,
									"end": 1911,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1899,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1921,
									"end": 1933,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1921,
									"end": 1931,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1921,
									"end": 1933,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1921,
									"end": 1933,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1921,
									"end": 1933,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1943,
									"end": 1955,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1943,
									"end": 1953,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1943,
									"end": 1955,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1943,
									"end": 1955,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1943,
									"end": 1955,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1963,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 172,
									"end": 16025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 172,
									"end": 16025,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6814,
									"end": 7444,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 6814,
									"end": 7444,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6943,
									"end": 6954,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 6943,
									"end": 6954,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6908,
									"end": 6933,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6936,
									"end": 6955,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6936,
									"end": 6955,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6936,
									"end": 6955,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6936,
									"end": 6942,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 6936,
									"end": 6955,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6936,
									"end": 6955,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6936,
									"end": 6955,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6936,
									"end": 6955,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6936,
									"end": 6955,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6936,
									"end": 6955,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6985,
									"end": 6986,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 6970,
									"end": 6986,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6967,
									"end": 7064,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 6967,
									"end": 7064,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7015,
									"end": 7019,
									"name": "PUSH",
									"source": 4,
									"value": "3E8"
								},
								{
									"begin": 6998,
									"end": 7019,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6998,
									"end": 7019,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7051,
									"end": 7053,
									"name": "PUSH",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 7029,
									"end": 7048,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 7029,
									"end": 7048,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7029,
									"end": 7048,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7029,
									"end": 7053,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6967,
									"end": 7064,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 6967,
									"end": 7064,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7091,
									"end": 7102,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 7091,
									"end": 7102,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7106,
									"end": 7107,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 7091,
									"end": 7107,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7088,
									"end": 7185,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 7088,
									"end": 7185,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7136,
									"end": 7140,
									"name": "PUSH",
									"source": 4,
									"value": "7D0"
								},
								{
									"begin": 7119,
									"end": 7140,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7119,
									"end": 7140,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7172,
									"end": 7174,
									"name": "PUSH",
									"source": 4,
									"value": "1E"
								},
								{
									"begin": 7150,
									"end": 7169,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 7150,
									"end": 7169,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7150,
									"end": 7169,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7150,
									"end": 7174,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7088,
									"end": 7185,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 7088,
									"end": 7185,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7202,
									"end": 7213,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 7202,
									"end": 7213,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7217,
									"end": 7218,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 7202,
									"end": 7218,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7199,
									"end": 7296,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 7199,
									"end": 7296,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7247,
									"end": 7251,
									"name": "PUSH",
									"source": 4,
									"value": "BB8"
								},
								{
									"begin": 7230,
									"end": 7251,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7230,
									"end": 7251,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7283,
									"end": 7285,
									"name": "PUSH",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 7261,
									"end": 7280,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 7261,
									"end": 7280,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7261,
									"end": 7280,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7261,
									"end": 7285,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7199,
									"end": 7296,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 7199,
									"end": 7296,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7312,
									"end": 7323,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 7312,
									"end": 7323,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7327,
									"end": 7328,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 7312,
									"end": 7328,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7309,
									"end": 7406,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 7309,
									"end": 7406,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7357,
									"end": 7361,
									"name": "PUSH",
									"source": 4,
									"value": "FA0"
								},
								{
									"begin": 7340,
									"end": 7361,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7340,
									"end": 7361,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7393,
									"end": 7395,
									"name": "PUSH",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 7371,
									"end": 7390,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 7371,
									"end": 7390,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7371,
									"end": 7390,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7371,
									"end": 7395,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7309,
									"end": 7406,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 7309,
									"end": 7406,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7424,
									"end": 7435,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 7424,
									"end": 7437,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7424,
									"end": 7437,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7424,
									"end": 7437,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7424,
									"end": 7435,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7424,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 7424,
									"end": 7437,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7424,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 7424,
									"end": 7437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7424,
									"end": 7437,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 7424,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7424,
									"end": 7437,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7424,
									"end": 7437,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7424,
									"end": 7437,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7424,
									"end": 7437,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7424,
									"end": 7437,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6845,
									"end": 7444,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6814,
									"end": 7444,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 309,
									"end": 541,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 309,
									"end": 541,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 348,
									"end": 351,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 386,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 369,
									"end": 386,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 369,
									"end": 386,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 366,
									"end": 506,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 366,
									"end": 506,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 428,
									"end": 438,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 423,
									"end": 426,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 419,
									"end": 439,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 416,
									"end": 417,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 440,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 463,
									"end": 467,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 460,
									"end": 461,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 453,
									"end": 468,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 491,
									"end": 495,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 488,
									"end": 489,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 481,
									"end": 496,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 366,
									"end": 506,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 366,
									"end": 506,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 533,
									"end": 534,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 522,
									"end": 535,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 522,
									"end": 535,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 309,
									"end": 541,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 309,
									"end": 541,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 309,
									"end": 541,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 172,
									"end": 16025,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 172,
									"end": 16025,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 172,
									"end": 16025,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 172,
									"end": 16025,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 172,
									"end": 16025,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 172,
									"end": 16025,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 172,
									"end": 16025,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201750815f4039664330196e2d4a6486be571dbd3e2553f5050a783ce06cd2debc64736f6c63430008110033",
									".code": [
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "859A62D0"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "C724CFD3"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "DD6FFD37"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "DD6FFD37"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "E2EB41FF"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "E6F4CAB2"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "FCEFB2B6"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "C724CFD3"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "C9EC3950"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "D175810D"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "D9193025"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "B863BD37"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "B863BD37"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "BECE83E4"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "C178D83D"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "C54B9C78"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "859A62D0"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "B0CD0D56"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "B1501F9C"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "45D9D0BE"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "7A742B2D"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "7ADED47E"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "83948115"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "45D9D0BE"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "5D1B3D76"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "6893F296"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "6B7C7264"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "2AA04A66"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "2AA04A66"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "2B56C1DD"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "2F15911D"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "39850C6B"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "127226CC"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "204597E0"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "224D54B3"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "271C52BA"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 172,
											"end": 16025,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3093,
											"end": 3494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3093,
											"end": 3494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 364,
											"end": 378,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 364,
											"end": 378,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 357,
											"end": 379,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 339,
											"end": 380,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 339,
											"end": 380,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 312,
											"end": 330,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 472,
											"end": 515,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 472,
											"end": 515,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 515,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 472,
											"end": 515,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 472,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 472,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 472,
											"end": 515,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 472,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 472,
											"end": 515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 472,
											"end": 515,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 472,
											"end": 515,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 472,
											"end": 515,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 515,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 515,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 472,
											"end": 515,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 472,
											"end": 515,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 472,
											"end": 515,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 515,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 515,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 593,
											"end": 618,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 593,
											"end": 618,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 593,
											"end": 618,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 649,
											"end": 651,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 634,
											"end": 652,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 634,
											"end": 652,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 627,
											"end": 661,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 627,
											"end": 661,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 627,
											"end": 661,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 627,
											"end": 661,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 677,
											"end": 695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 677,
											"end": 695,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 677,
											"end": 695,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 670,
											"end": 704,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 581,
											"end": 583,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 566,
											"end": 584,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 472,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 391,
											"end": 710,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1969,
											"end": 2143,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1969,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2143,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2143,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1969,
											"end": 2143,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 2143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2143,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2143,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1969,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1969,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1969,
											"end": 2143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2143,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1969,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2143,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3086,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2998,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3086,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3086,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3086,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2998,
											"end": 3086,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3086,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2998,
											"end": 3086,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3086,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3086,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2998,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2998,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2998,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2998,
											"end": 3086,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3086,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2998,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2998,
											"end": 3086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3086,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2998,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3070,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3057,
											"end": 3079,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3086,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 10312,
											"end": 11679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 10312,
											"end": 11679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 7562,
											"end": 8547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 7562,
											"end": 8547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3500,
											"end": 3679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1506,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1506,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1506,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1471,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1335,
											"end": 1512,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 14197,
											"end": 15064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 14197,
											"end": 15064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1233,
											"end": 1348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1233,
											"end": 1348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1233,
											"end": 1348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2742,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2648,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2742,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2742,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2648,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2742,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2742,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2648,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2648,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2648,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2648,
											"end": 2742,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2648,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2648,
											"end": 2742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2742,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2648,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2726,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2742,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5446,
											"end": 5966,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 5446,
											"end": 5966,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5446,
											"end": 5966,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5446,
											"end": 5966,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5446,
											"end": 5966,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5446,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5446,
											"end": 5966,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5446,
											"end": 5966,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5446,
											"end": 5966,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5446,
											"end": 5966,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5446,
											"end": 5966,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5446,
											"end": 5966,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5446,
											"end": 5966,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5446,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 5446,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 5446,
											"end": 5966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 13971,
											"end": 14019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 13971,
											"end": 14019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2941,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2841,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2941,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2941,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2941,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2841,
											"end": 2941,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2941,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2941,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2941,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2941,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2841,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2841,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2841,
											"end": 2941,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2941,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2841,
											"end": 2941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2941,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2841,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2906,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2906,
											"end": 2934,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2941,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 7450,
											"end": 7556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7534,
											"end": 7538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7450,
											"end": 7556,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5169,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 5138,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5169,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5169,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5169,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 5138,
											"end": 5169,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5169,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5138,
											"end": 5169,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5169,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5169,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 5138,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5169,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 5138,
											"end": 5169,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 5138,
											"end": 5169,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5169,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5169,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1748,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1748,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3453,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3402,
											"end": 3453,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3390,
											"end": 3392,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3375,
											"end": 3393,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3256,
											"end": 3459,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3781,
											"end": 5131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3781,
											"end": 5131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8553,
											"end": 9102,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 8553,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8553,
											"end": 9102,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 8553,
											"end": 9102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8553,
											"end": 9102,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8553,
											"end": 9102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 8553,
											"end": 9102,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8553,
											"end": 9102,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8553,
											"end": 9102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8553,
											"end": 9102,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8553,
											"end": 9102,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 8553,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8553,
											"end": 9102,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8553,
											"end": 9102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 8553,
											"end": 9102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 8553,
											"end": 9102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2151,
											"end": 2556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2151,
											"end": 2556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 11691,
											"end": 12013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 11691,
											"end": 12013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 9850,
											"end": 10195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 9850,
											"end": 10195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5440,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 5176,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5440,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5440,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5440,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5176,
											"end": 5440,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5440,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5176,
											"end": 5440,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5440,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5440,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5176,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 5176,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5176,
											"end": 5440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12442,
											"end": 13606,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 12442,
											"end": 13606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12442,
											"end": 13606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 12442,
											"end": 13606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 12442,
											"end": 13606,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 12442,
											"end": 13606,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12442,
											"end": 13606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 12442,
											"end": 13606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12442,
											"end": 13606,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 12442,
											"end": 13606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12442,
											"end": 13606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 12442,
											"end": 13606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9299,
											"end": 9844,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 9299,
											"end": 9844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9299,
											"end": 9844,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 9299,
											"end": 9844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9299,
											"end": 9844,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9299,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 9299,
											"end": 9844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9299,
											"end": 9844,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9299,
											"end": 9844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9299,
											"end": 9844,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9299,
											"end": 9844,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 9299,
											"end": 9844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9299,
											"end": 9844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9299,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 9299,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 9299,
											"end": 9844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 12019,
											"end": 12067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12019,
											"end": 12067,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 15077,
											"end": 16019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 15077,
											"end": 16019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6781,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 5972,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6781,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6781,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6781,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 5972,
											"end": 6781,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6781,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5972,
											"end": 6781,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6781,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6781,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 5972,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 5972,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 5972,
											"end": 6781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 425,
											"end": 466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 425,
											"end": 466,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 466,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 425,
											"end": 466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 425,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 425,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 425,
											"end": 466,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 425,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 425,
											"end": 466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 425,
											"end": 466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 425,
											"end": 466,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 425,
											"end": 466,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 425,
											"end": 466,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 425,
											"end": 466,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 425,
											"end": 466,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 425,
											"end": 466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 425,
											"end": 466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 466,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 425,
											"end": 466,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4975,
											"end": 5000,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4975,
											"end": 5000,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4975,
											"end": 5000,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5033,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5043,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5043,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5043,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5043,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5059,
											"end": 5077,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5059,
											"end": 5077,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5059,
											"end": 5077,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5052,
											"end": 5086,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5052,
											"end": 5086,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5052,
											"end": 5086,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5052,
											"end": 5086,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5102,
											"end": 5120,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5120,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5095,
											"end": 5129,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5160,
											"end": 5163,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5145,
											"end": 5164,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5145,
											"end": 5164,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5173,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4962,
											"end": 4965,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 4947,
											"end": 4966,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 425,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4716,
											"end": 5179,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 12074,
											"end": 12364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 12074,
											"end": 12364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13612,
											"end": 13709,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 13612,
											"end": 13709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13612,
											"end": 13709,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 13612,
											"end": 13709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13612,
											"end": 13709,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13612,
											"end": 13709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 13612,
											"end": 13709,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13612,
											"end": 13709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13612,
											"end": 13709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13612,
											"end": 13709,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13612,
											"end": 13709,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 13612,
											"end": 13709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13612,
											"end": 13709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13612,
											"end": 13709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 13612,
											"end": 13709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 13612,
											"end": 13709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3203,
											"end": 3215,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3174,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3174,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3190,
											"end": 3215,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3190,
											"end": 3215,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 3182,
											"end": 3238,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3238,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3182,
											"end": 3238,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3182,
											"end": 3238,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3238,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5386,
											"end": 5388,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3182,
											"end": 3238,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3182,
											"end": 3238,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3238,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5368,
											"end": 5389,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5427,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 5405,
											"end": 5423,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5405,
											"end": 5423,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5405,
											"end": 5423,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5398,
											"end": 5428,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92DCECC2D8D2C840C8EACAD840D2DCC8CAF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5444,
											"end": 5462,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5444,
											"end": 5462,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5444,
											"end": 5462,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5437,
											"end": 5485,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5502,
											"end": 5520,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5502,
											"end": 5520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3238,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3182,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3238,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3182,
											"end": 3238,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3238,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3238,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3238,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3238,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3238,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3238,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 3182,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3280,
											"end": 3285,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3286,
											"end": 3296,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3280,
											"end": 3297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3297,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3333,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3307,
											"end": 3318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3329,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3333,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3469,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 3303,
											"end": 3469,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3368,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3349,
											"end": 3368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3371,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3349,
											"end": 3371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3385,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3385,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3385,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3349,
											"end": 3425,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3425,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3425,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3425,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3349,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3345,
											"end": 3463,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3345,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 3345,
											"end": 3463,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3448,
											"end": 3452,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3448,
											"end": 3452,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3093,
											"end": 3494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3345,
											"end": 3463,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 3345,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3486,
											"end": 3491,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3491,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3494,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3093,
											"end": 3494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2143,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1969,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2024,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2024,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2054,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2024,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "F3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2135,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "F3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE4"
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2065,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2136,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2005,
											"end": 2143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10398,
											"end": 10408,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 10390,
											"end": 10409,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10390,
											"end": 10409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10390,
											"end": 10409,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10390,
											"end": 10397,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 10390,
											"end": 10409,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10409,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10390,
											"end": 10409,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10390,
											"end": 10409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10390,
											"end": 10409,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10390,
											"end": 10425,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10390,
											"end": 10438,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 10382,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 10382,
											"end": 10474,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10382,
											"end": 10474,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10382,
											"end": 10474,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10382,
											"end": 10474,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10382,
											"end": 10474,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5865,
											"end": 5867,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10382,
											"end": 10474,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10382,
											"end": 10474,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10382,
											"end": 10474,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5847,
											"end": 5868,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5904,
											"end": 5906,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5884,
											"end": 5902,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5884,
											"end": 5902,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5884,
											"end": 5902,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5877,
											"end": 5907,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5943,
											"end": 5976,
											"name": "PUSH",
											"source": 5,
											"value": "796F7527726520616C72656164792062656174656E207468697320626F737300"
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5916,
											"end": 5977,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5994,
											"end": 6012,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5994,
											"end": 6012,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10382,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 5663,
											"end": 6018,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10382,
											"end": 10474,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 10382,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10718,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10718,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10706,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 10700,
											"end": 10718,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10700,
											"end": 10718,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10718,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10718,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10718,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10718,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10718,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10725,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10681,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10682,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10682,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10670,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 10663,
											"end": 10682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10682,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10682,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10682,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10682,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10696,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10663,
											"end": 10696,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10696,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10725,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10725,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 10772,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 10655,
											"end": 10772,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 10772,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10655,
											"end": 10772,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10655,
											"end": 10772,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 10772,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6227,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10655,
											"end": 10772,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10655,
											"end": 10772,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 10772,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6207,
											"end": 6228,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6264,
											"end": 6266,
											"name": "PUSH",
											"source": 5,
											"value": "2A"
										},
										{
											"begin": 6244,
											"end": 6262,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6244,
											"end": 6262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6244,
											"end": 6262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6237,
											"end": 6267,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6303,
											"end": 6337,
											"name": "PUSH",
											"source": 5,
											"value": "796F7520646F6E2774206861766520656E6F75676820656E6572677920666F72"
										},
										{
											"begin": 6283,
											"end": 6301,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6283,
											"end": 6301,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6301,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6276,
											"end": 6338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207468697320626F7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6354,
											"end": 6372,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6354,
											"end": 6372,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6354,
											"end": 6372,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6387,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6404,
											"end": 6423,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 6404,
											"end": 6423,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10655,
											"end": 10772,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 6023,
											"end": 6429,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10655,
											"end": 10772,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 10655,
											"end": 10772,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10858,
											"end": 10859,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10786,
											"end": 10802,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10786,
											"end": 10802,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10786,
											"end": 10802,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10786,
											"end": 10802,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10844,
											"end": 10860,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10817,
											"end": 10860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10817,
											"end": 10860,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10876,
											"end": 10882,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10871,
											"end": 11091,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 10871,
											"end": 11091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10893,
											"end": 10894,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10888,
											"end": 10889,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10888,
											"end": 10894,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10871,
											"end": 11091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 10871,
											"end": 11091,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10984,
											"end": 10994,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 10933,
											"end": 10944,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10976,
											"end": 10995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 10995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 10995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 10983,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 10976,
											"end": 10995,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10976,
											"end": 10995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 10995,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10976,
											"end": 10995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 10995,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11008,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10976,
											"end": 11008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11008,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10960,
											"end": 10973,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 10960,
											"end": 10973,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10947,
											"end": 10957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 10954,
											"end": 10956,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 10947,
											"end": 10953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 10947,
											"end": 10957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10947,
											"end": 10957,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 10947,
											"end": 10957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10947,
											"end": 10973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 10947,
											"end": 10973,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10947,
											"end": 10973,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10947,
											"end": 10973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 10947,
											"end": 10973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10947,
											"end": 10973,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 10947,
											"end": 10973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10947,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 10947,
											"end": 11008,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10947,
											"end": 11008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10947,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 10947,
											"end": 11008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10947,
											"end": 11008,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 10947,
											"end": 11008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10933,
											"end": 11008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10933,
											"end": 11008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11039,
											"end": 11045,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11026,
											"end": 11033,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11034,
											"end": 11035,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11026,
											"end": 11036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11026,
											"end": 11036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11026,
											"end": 11036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11026,
											"end": 11036,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11026,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 11026,
											"end": 11036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11026,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 11026,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 11026,
											"end": 11036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11026,
											"end": 11036,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 11026,
											"end": 11036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11026,
											"end": 11036,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11026,
											"end": 11036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11026,
											"end": 11036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11026,
											"end": 11036,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 11026,
											"end": 11036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11026,
											"end": 11036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11026,
											"end": 11036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11026,
											"end": 11036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11026,
											"end": 11036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11026,
											"end": 11045,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11059,
											"end": 11080,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 11074,
											"end": 11080,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11059,
											"end": 11080,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11059,
											"end": 11080,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 11059,
											"end": 11080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11059,
											"end": 11080,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 11059,
											"end": 11080,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11059,
											"end": 11080,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11059,
											"end": 11080,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10911,
											"end": 11091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10896,
											"end": 10900,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10896,
											"end": 10900,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10896,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 10896,
											"end": 10900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10896,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 10896,
											"end": 10900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10896,
											"end": 10900,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 10896,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10896,
											"end": 10900,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10896,
											"end": 10900,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10896,
											"end": 10900,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10871,
											"end": 11091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 10871,
											"end": 11091,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10871,
											"end": 11091,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 10871,
											"end": 11091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11101,
											"end": 11119,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11101,
											"end": 11119,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11101,
											"end": 11119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11101,
											"end": 11119,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11101,
											"end": 11107,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 11101,
											"end": 11119,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11101,
											"end": 11119,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11101,
											"end": 11119,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11101,
											"end": 11119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11101,
											"end": 11119,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11101,
											"end": 11141,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11101,
											"end": 11141,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11130,
											"end": 11141,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11130,
											"end": 11141,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11101,
											"end": 11119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11101,
											"end": 11141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 11101,
											"end": 11141,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11130,
											"end": 11141,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11130,
											"end": 11141,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11101,
											"end": 11141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 11101,
											"end": 11141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11101,
											"end": 11141,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 11101,
											"end": 11141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11101,
											"end": 11141,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11101,
											"end": 11141,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11101,
											"end": 11141,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11231,
											"end": 11249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11231,
											"end": 11249,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11231,
											"end": 11249,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11231,
											"end": 11249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11231,
											"end": 11237,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 11231,
											"end": 11249,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11231,
											"end": 11249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11231,
											"end": 11249,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11231,
											"end": 11249,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11231,
											"end": 11249,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11231,
											"end": 11256,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11231,
											"end": 11261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11231,
											"end": 11261,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11228,
											"end": 11672,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 11228,
											"end": 11672,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11359,
											"end": 11369,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 11351,
											"end": 11370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11351,
											"end": 11370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11351,
											"end": 11370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11351,
											"end": 11370,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11351,
											"end": 11358,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 11351,
											"end": 11370,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11351,
											"end": 11370,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11351,
											"end": 11370,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11351,
											"end": 11370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11351,
											"end": 11370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11351,
											"end": 11370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11351,
											"end": 11370,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11351,
											"end": 11399,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11351,
											"end": 11399,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11351,
											"end": 11399,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11418,
											"end": 11463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11389,
											"end": 11399,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11389,
											"end": 11399,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11359,
											"end": 11369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11418,
											"end": 11463,
											"name": "PUSH",
											"source": 4,
											"value": "46475D55C3BC13C229507A0915F795FD03B23601512CC1AEAE9E0BF41A4075D8"
										},
										{
											"begin": 11418,
											"end": 11463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11418,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 11418,
											"end": 11463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11455,
											"end": 11462,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11455,
											"end": 11462,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11418,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 11418,
											"end": 11463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11418,
											"end": 11463,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 11418,
											"end": 11463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11418,
											"end": 11463,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11418,
											"end": 11463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11418,
											"end": 11463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11418,
											"end": 11463,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11418,
											"end": 11463,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11418,
											"end": 11463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11418,
											"end": 11463,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10363,
											"end": 11679,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10363,
											"end": 11679,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10312,
											"end": 11679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11228,
											"end": 11672,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 11228,
											"end": 11672,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11626,
											"end": 11632,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11626,
											"end": 11657,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 11626,
											"end": 11657,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11626,
											"end": 11657,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11626,
											"end": 11660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 11626,
											"end": 11660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11659,
											"end": 11660,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 11626,
											"end": 11660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 11626,
											"end": 11660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11626,
											"end": 11660,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 11626,
											"end": 11660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11597,
											"end": 11607,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11608,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11589,
											"end": 11608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11608,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11596,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 11589,
											"end": 11608,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11589,
											"end": 11608,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11608,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11589,
											"end": 11608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11608,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11622,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 11589,
											"end": 11622,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11660,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11622,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 11589,
											"end": 11660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11660,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 11589,
											"end": 11660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11660,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 11589,
											"end": 11660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11589,
											"end": 11660,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10363,
											"end": 11679,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10363,
											"end": 11679,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10312,
											"end": 11679,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10312,
											"end": 11679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7717,
											"end": 7727,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7682,
											"end": 7706,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7709,
											"end": 7728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7728,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7728,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7716,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 7709,
											"end": 7728,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7709,
											"end": 7728,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7728,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7709,
											"end": 7728,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7728,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7917,
											"end": 7946,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7917,
											"end": 7946,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7917,
											"end": 7946,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7956,
											"end": 7982,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7992,
											"end": 8015,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7992,
											"end": 8015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7992,
											"end": 8015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7992,
											"end": 8019,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8071,
											"end": 8107,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8071,
											"end": 8107,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8071,
											"end": 8107,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8071,
											"end": 8111,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8071,
											"end": 8111,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8071,
											"end": 8111,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8029,
											"end": 8057,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8029,
											"end": 8057,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8029,
											"end": 8057,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8121,
											"end": 8168,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8121,
											"end": 8168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8121,
											"end": 8168,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8264,
											"end": 8541,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 8264,
											"end": 8541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8284,
											"end": 8304,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8284,
											"end": 8304,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8284,
											"end": 8304,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8264,
											"end": 8541,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8264,
											"end": 8541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 8264,
											"end": 8541,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8334,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8350,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 8325,
											"end": 8350,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8356,
											"end": 8365,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8356,
											"end": 8365,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8366,
											"end": 8367,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8356,
											"end": 8368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8356,
											"end": 8368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8356,
											"end": 8368,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8356,
											"end": 8368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 8356,
											"end": 8368,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8356,
											"end": 8368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 8356,
											"end": 8368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 8356,
											"end": 8368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8356,
											"end": 8368,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 8356,
											"end": 8368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8369,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8369,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8369,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8325,
											"end": 8369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8369,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8369,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8369,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8325,
											"end": 8369,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8369,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8356,
											"end": 8368,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8325,
											"end": 8369,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8369,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8369,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8356,
											"end": 8368,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8356,
											"end": 8368,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8356,
											"end": 8368,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 8356,
											"end": 8368,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 8356,
											"end": 8368,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8356,
											"end": 8368,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8356,
											"end": 8368,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8356,
											"end": 8368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8356,
											"end": 8368,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8369,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8369,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8392,
											"end": 8402,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8392,
											"end": 8402,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8422,
											"name": "PUSH",
											"source": 4,
											"value": "2862BB25"
										},
										{
											"begin": 8423,
											"end": 8432,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8423,
											"end": 8432,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8433,
											"end": 8434,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8423,
											"end": 8435,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8423,
											"end": 8435,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8423,
											"end": 8435,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8423,
											"end": 8435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 8423,
											"end": 8435,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8423,
											"end": 8435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 8423,
											"end": 8435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 8423,
											"end": 8435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8423,
											"end": 8435,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 8423,
											"end": 8435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8423,
											"end": 8435,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8423,
											"end": 8435,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8423,
											"end": 8435,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8423,
											"end": 8435,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 8423,
											"end": 8435,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8423,
											"end": 8435,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1506,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1506,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1471,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1512,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 8392,
											"end": 8436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 8392,
											"end": 8436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8391,
											"end": 8436,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8383,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 8383,
											"end": 8467,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8383,
											"end": 8467,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8383,
											"end": 8467,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8383,
											"end": 8467,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8383,
											"end": 8467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8332,
											"end": 8334,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8383,
											"end": 8467,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8383,
											"end": 8467,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8383,
											"end": 8467,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8314,
											"end": 8335,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8371,
											"end": 8373,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 8351,
											"end": 8369,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8351,
											"end": 8369,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8351,
											"end": 8369,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8344,
											"end": 8374,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8410,
											"end": 8438,
											"name": "PUSH",
											"source": 5,
											"value": "5468697320746F6B656E20616C726561647920696E2067616D65000000000000"
										},
										{
											"begin": 8390,
											"end": 8408,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 8390,
											"end": 8408,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8390,
											"end": 8408,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8439,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8456,
											"end": 8474,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 8456,
											"end": 8474,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 8130,
											"end": 8480,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8467,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 8383,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8491,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8481,
											"end": 8491,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8481,
											"end": 8491,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8510,
											"name": "PUSH",
											"source": 4,
											"value": "FB4F8197"
										},
										{
											"begin": 8511,
											"end": 8520,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8511,
											"end": 8520,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8521,
											"end": 8522,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8511,
											"end": 8523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8511,
											"end": 8523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8511,
											"end": 8523,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8511,
											"end": 8523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 8511,
											"end": 8523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8511,
											"end": 8523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 8511,
											"end": 8523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 8511,
											"end": 8523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8511,
											"end": 8523,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 8511,
											"end": 8523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8511,
											"end": 8523,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8511,
											"end": 8523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8511,
											"end": 8523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8511,
											"end": 8523,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 8511,
											"end": 8523,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8511,
											"end": 8523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8511,
											"end": 8523,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8511,
											"end": 8523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8511,
											"end": 8523,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8653,
											"end": 8678,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8525,
											"end": 8529,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8694,
											"end": 8712,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8694,
											"end": 8712,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8694,
											"end": 8712,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8687,
											"end": 8737,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8626,
											"end": 8644,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 8626,
											"end": 8644,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8306,
											"end": 8309,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8306,
											"end": 8309,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8306,
											"end": 8309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 8306,
											"end": 8309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8306,
											"end": 8309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 8306,
											"end": 8309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8306,
											"end": 8309,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 8306,
											"end": 8309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8306,
											"end": 8309,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8306,
											"end": 8309,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8306,
											"end": 8309,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8264,
											"end": 8541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 8264,
											"end": 8541,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8264,
											"end": 8541,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 8264,
											"end": 8541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8264,
											"end": 8541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7620,
											"end": 8547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7562,
											"end": 8547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7562,
											"end": 8547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3555,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3648,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3630,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 3637,
											"end": 3639,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3630,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3630,
											"end": 3640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3640,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 3630,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3643,
											"end": 3646,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 3630,
											"end": 3646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 3630,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3629,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 3629,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3629,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3629,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 3629,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3629,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 3629,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3600,
											"end": 3610,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3611,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3611,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3611,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3599,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3592,
											"end": 3611,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3592,
											"end": 3611,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3611,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 3611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3611,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3624,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3592,
											"end": 3624,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3624,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3576,
											"end": 3589,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3576,
											"end": 3589,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3576,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 3576,
											"end": 3624,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3576,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 3576,
											"end": 3624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3576,
											"end": 3624,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 3576,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3575,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 3575,
											"end": 3653,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3575,
											"end": 3653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3575,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 3575,
											"end": 3653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3575,
											"end": 3653,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 3575,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3653,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3500,
											"end": 3679,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3500,
											"end": 3679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14283,
											"end": 14293,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 14275,
											"end": 14294,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14275,
											"end": 14294,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14275,
											"end": 14294,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14275,
											"end": 14294,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14275,
											"end": 14282,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 14275,
											"end": 14294,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14275,
											"end": 14294,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14275,
											"end": 14294,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14275,
											"end": 14294,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14275,
											"end": 14294,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 14275,
											"end": 14310,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 14275,
											"end": 14328,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 14275,
											"end": 14328,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14267,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 14267,
											"end": 14368,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14267,
											"end": 14368,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14267,
											"end": 14368,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14267,
											"end": 14368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14267,
											"end": 14368,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14267,
											"end": 14368,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14267,
											"end": 14368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14267,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 14267,
											"end": 14368,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14267,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 14267,
											"end": 14368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14267,
											"end": 14368,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 14267,
											"end": 14368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14724,
											"end": 14734,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14711,
											"end": 14735,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14735,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14735,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14723,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 14711,
											"end": 14735,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14711,
											"end": 14735,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14735,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14711,
											"end": 14735,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14735,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 14736,
											"end": 14752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 14751,
											"end": 14752,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 14736,
											"end": 14750,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14736,
											"end": 14752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 14736,
											"end": 14752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14736,
											"end": 14752,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 14736,
											"end": 14752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 14711,
											"end": 14753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 14711,
											"end": 14753,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14710,
											"end": 14753,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14702,
											"end": 14792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 14702,
											"end": 14792,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14702,
											"end": 14792,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14702,
											"end": 14792,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14702,
											"end": 14792,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14702,
											"end": 14792,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9611,
											"end": 9613,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14702,
											"end": 14792,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14702,
											"end": 14792,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14702,
											"end": 14792,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9593,
											"end": 9614,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9650,
											"end": 9652,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 9630,
											"end": 9648,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9630,
											"end": 9648,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9630,
											"end": 9648,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9623,
											"end": 9653,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9689,
											"end": 9723,
											"name": "PUSH",
											"source": 5,
											"value": "796F7527726520616C726561647920636C61696D656420746869732065666665"
										},
										{
											"begin": 9669,
											"end": 9687,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 9669,
											"end": 9687,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9669,
											"end": 9687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9662,
											"end": 9724,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9740,
											"end": 9758,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 9740,
											"end": 9758,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9740,
											"end": 9758,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9733,
											"end": 9765,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9782,
											"end": 9801,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 9782,
											"end": 9801,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14702,
											"end": 14792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 9409,
											"end": 9807,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14702,
											"end": 14792,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 14702,
											"end": 14792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14802,
											"end": 14813,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14816,
											"end": 14826,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 14823,
											"end": 14825,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 14816,
											"end": 14822,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 14816,
											"end": 14826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14816,
											"end": 14826,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 14816,
											"end": 14826,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14802,
											"end": 14826,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14802,
											"end": 14826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14850,
											"end": 14851,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 14841,
											"end": 14847,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14841,
											"end": 14851,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 14838,
											"end": 15063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 14838,
											"end": 15063,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14875,
											"end": 14885,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 14867,
											"end": 14886,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14867,
											"end": 14886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14867,
											"end": 14886,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14867,
											"end": 14886,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14867,
											"end": 14874,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 14867,
											"end": 14886,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14867,
											"end": 14886,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14867,
											"end": 14886,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14867,
											"end": 14886,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14867,
											"end": 14886,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 14867,
											"end": 14899,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 14867,
											"end": 14899,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14867,
											"end": 14905,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14867,
											"end": 14905,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 14903,
											"end": 14905,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 14903,
											"end": 14905,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14867,
											"end": 14886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14867,
											"end": 14905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 14867,
											"end": 14905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14903,
											"end": 14905,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14903,
											"end": 14905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14867,
											"end": 14905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 14867,
											"end": 14905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14867,
											"end": 14905,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 14867,
											"end": 14905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14867,
											"end": 14905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14867,
											"end": 14905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14867,
											"end": 14905,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14838,
											"end": 15063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 14838,
											"end": 15063,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14838,
											"end": 15063,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14838,
											"end": 15063,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 14838,
											"end": 15063,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14962,
											"end": 14972,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 14954,
											"end": 14973,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14954,
											"end": 14973,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14954,
											"end": 14973,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14954,
											"end": 14973,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14954,
											"end": 14961,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 14954,
											"end": 14973,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14954,
											"end": 14973,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14954,
											"end": 14973,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14954,
											"end": 14973,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14954,
											"end": 14973,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 14954,
											"end": 14986,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 14954,
											"end": 14986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14954,
											"end": 14992,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14954,
											"end": 14992,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 14990,
											"end": 14992,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 14990,
											"end": 14992,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14954,
											"end": 14973,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14954,
											"end": 14992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 14954,
											"end": 14992,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14990,
											"end": 14992,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14990,
											"end": 14992,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14954,
											"end": 14992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 14954,
											"end": 14992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14954,
											"end": 14992,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 14954,
											"end": 14992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14954,
											"end": 14992,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14954,
											"end": 14992,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14954,
											"end": 14992,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15020,
											"end": 15030,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15031,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15007,
											"end": 15031,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15031,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15031,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15019,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 15007,
											"end": 15031,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15007,
											"end": 15031,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15031,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15007,
											"end": 15031,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15031,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15052,
											"end": 15056,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 15052,
											"end": 15056,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15032,
											"end": 15048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 15052,
											"end": 15056,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15032,
											"end": 15046,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15032,
											"end": 15048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 15032,
											"end": 15048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15032,
											"end": 15048,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 15032,
											"end": 15048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15049,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 15007,
											"end": 15049,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15049,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 15007,
											"end": 15049,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 15007,
											"end": 15049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 15007,
											"end": 15049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15049,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 15007,
											"end": 15049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15049,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15007,
											"end": 15049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15049,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15049,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15049,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15049,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15049,
											"name": "MOD",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15056,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 15007,
											"end": 15056,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15056,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15056,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15056,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15056,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 15007,
											"end": 15056,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15056,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15056,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15056,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15056,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15056,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15056,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15056,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15056,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15056,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15056,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15007,
											"end": 15056,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14838,
											"end": 15063,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 14838,
											"end": 15063,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14252,
											"end": 15064,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14197,
											"end": 15064,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14197,
											"end": 15064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1293,
											"end": 1306,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 1293,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1325,
											"end": 1341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1341,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1332,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1325,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1325,
											"end": 1341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 1341,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1341,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1341,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1341,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1348,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5446,
											"end": 5966,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 5446,
											"end": 5966,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5515,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5523,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5524,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 5524,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5524,
											"end": 5543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5524,
											"end": 5543,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 5524,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 5518,
											"end": 5544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5544,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5544,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5723,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5731,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5712,
											"end": 5731,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5732,
											"end": 5733,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5712,
											"end": 5734,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5712,
											"end": 5734,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5734,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 5712,
											"end": 5734,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 5712,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 5712,
											"end": 5734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5734,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 5712,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5734,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5747,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5747,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5712,
											"end": 5747,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5712,
											"end": 5747,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5747,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5747,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5747,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5747,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5768,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5761,
											"end": 5768,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5809,
											"end": 5818,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 5809,
											"end": 5818,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5782,
											"end": 5792,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5802,
											"end": 5806,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 10102,
											"end": 10120,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 10102,
											"end": 10120,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10102,
											"end": 10120,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10095,
											"end": 10138,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10154,
											"end": 10172,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 10154,
											"end": 10172,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10154,
											"end": 10172,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10147,
											"end": 10181,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10147,
											"end": 10181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10147,
											"end": 10181,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10147,
											"end": 10181,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5761,
											"end": 5768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5768,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5781,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 5761,
											"end": 5781,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 5761,
											"end": 5820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 5761,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5835,
											"end": 5859,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5859,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5846,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5857,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5835,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 5835,
											"end": 5859,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 5835,
											"end": 5859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5859,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 5835,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5859,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5859,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5859,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5859,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5859,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5966,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5446,
											"end": 5966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "tag",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 14019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13971,
											"end": 14019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3889,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3897,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3898,
											"end": 3908,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3892,
											"end": 3909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3909,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 3954,
											"end": 3964,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3928,
											"end": 3965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "tag",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 3928,
											"end": 3965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 3920,
											"end": 3988,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3988,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3920,
											"end": 3988,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3920,
											"end": 3988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3988,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10394,
											"end": 10396,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3920,
											"end": 3988,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3920,
											"end": 3988,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3988,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10376,
											"end": 10397,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10433,
											"end": 10435,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 10413,
											"end": 10431,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 10413,
											"end": 10431,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10413,
											"end": 10431,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10406,
											"end": 10436,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "796F75277265206E6F7420696E20726F6F6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10452,
											"end": 10470,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 10452,
											"end": 10470,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10452,
											"end": 10470,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10445,
											"end": 10493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10510,
											"end": 10528,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 10510,
											"end": 10528,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3920,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 10192,
											"end": 10534,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3920,
											"end": 3988,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 3920,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4272,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4231,
											"end": 4255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4231,
											"end": 4255,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4231,
											"end": 4274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4285,
											"end": 4301,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4285,
											"end": 4301,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4312,
											"end": 4532,
											"name": "tag",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 4312,
											"end": 4532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4334,
											"end": 4335,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4329,
											"end": 4330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4335,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4312,
											"end": 4532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 4312,
											"end": 4532,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4425,
											"end": 4435,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4374,
											"end": 4385,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4417,
											"end": 4436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4417,
											"end": 4436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4417,
											"end": 4436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4417,
											"end": 4424,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4417,
											"end": 4436,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4417,
											"end": 4436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4417,
											"end": 4436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4417,
											"end": 4436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4417,
											"end": 4436,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4417,
											"end": 4449,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4417,
											"end": 4449,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4417,
											"end": 4449,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4414,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4401,
											"end": 4414,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 4395,
											"end": 4397,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 4388,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 4388,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4398,
											"name": "tag",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 4388,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 4388,
											"end": 4414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "tag",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 4388,
											"end": 4449,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 4388,
											"end": 4449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4449,
											"name": "tag",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 4388,
											"end": 4449,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4374,
											"end": 4449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4374,
											"end": 4449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4480,
											"end": 4486,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4474,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4475,
											"end": 4476,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4477,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4477,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4477,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4477,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 4467,
											"end": 4477,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 4467,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 4467,
											"end": 4477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4477,
											"name": "tag",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 4467,
											"end": 4477,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4477,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4467,
											"end": 4477,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4477,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4477,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4477,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4477,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4477,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4477,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4477,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4486,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 4515,
											"end": 4521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4521,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 4500,
											"end": 4521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4521,
											"name": "tag",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 4500,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4521,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4352,
											"end": 4532,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4341,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4341,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 4337,
											"end": 4341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 4337,
											"end": 4341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4341,
											"name": "tag",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 4337,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4341,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4312,
											"end": 4532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 4312,
											"end": 4532,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4312,
											"end": 4532,
											"name": "tag",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 4312,
											"end": 4532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4578,
											"end": 4588,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4552,
											"end": 4571,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4552,
											"end": 4571,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4552,
											"end": 4571,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4574,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4552,
											"end": 4574,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4552,
											"end": 4574,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4552,
											"end": 4588,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 4548,
											"end": 5049,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4651,
											"end": 4662,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4628,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4647,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4617,
											"end": 4647,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4647,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4617,
											"end": 4662,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4662,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4662,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 4617,
											"end": 4662,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 4617,
											"end": 4662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4662,
											"name": "tag",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 4617,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4662,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4662,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4721,
											"end": 4751,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4721,
											"end": 4751,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4721,
											"end": 4751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4721,
											"end": 4751,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4721,
											"end": 4756,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4713,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 4713,
											"end": 4792,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4713,
											"end": 4792,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4713,
											"end": 4792,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4713,
											"end": 4792,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4713,
											"end": 4792,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10743,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4713,
											"end": 4792,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4713,
											"end": 4792,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4713,
											"end": 4792,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10744,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10780,
											"end": 10782,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10760,
											"end": 10778,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 10760,
											"end": 10778,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10760,
											"end": 10778,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10753,
											"end": 10783,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10819,
											"end": 10852,
											"name": "PUSH",
											"source": 5,
											"value": "796F7527726520616C72656164792061747461636B656420696E206475656C00"
										},
										{
											"begin": 10799,
											"end": 10817,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 10799,
											"end": 10817,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10799,
											"end": 10817,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10792,
											"end": 10853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10870,
											"end": 10888,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 10870,
											"end": 10888,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4713,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 10539,
											"end": 10894,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4713,
											"end": 4792,
											"name": "tag",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 4713,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 4548,
											"end": 5049,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4548,
											"end": 5049,
											"name": "tag",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 4548,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4866,
											"end": 4877,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4843,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4862,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4832,
											"end": 4862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4862,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4832,
											"end": 4877,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4877,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4877,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 4832,
											"end": 4877,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4877,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 4832,
											"end": 4877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4877,
											"name": "tag",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 4832,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4877,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4877,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4877,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4966,
											"end": 4996,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4966,
											"end": 4996,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4996,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4996,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 5001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4958,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 4958,
											"end": 5037,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4958,
											"end": 5037,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4958,
											"end": 5037,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4958,
											"end": 5037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4958,
											"end": 5037,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10743,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4958,
											"end": 5037,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4958,
											"end": 5037,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4958,
											"end": 5037,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10744,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10780,
											"end": 10782,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10760,
											"end": 10778,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 10760,
											"end": 10778,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10760,
											"end": 10778,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10753,
											"end": 10783,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10819,
											"end": 10852,
											"name": "PUSH",
											"source": 5,
											"value": "796F7527726520616C72656164792061747461636B656420696E206475656C00"
										},
										{
											"begin": 10799,
											"end": 10817,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 10799,
											"end": 10817,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10799,
											"end": 10817,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10792,
											"end": 10853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10870,
											"end": 10888,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 10870,
											"end": 10888,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4958,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 10539,
											"end": 10894,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4958,
											"end": 5037,
											"name": "tag",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 4958,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5090,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5065,
											"end": 5112,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 5112,
											"name": "PUSH",
											"source": 4,
											"value": "F2BA4445FBD3AF142B7A1251DF18B6D462B23687B1BC8799A1C3EDDB4FF0826"
										},
										{
											"begin": 5092,
											"end": 5102,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5104,
											"end": 5111,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 5112,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5065,
											"end": 5112,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "363"
										},
										{
											"begin": 5065,
											"end": 5112,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 5112,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 5112,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "364"
										},
										{
											"begin": 5065,
											"end": 5112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 5112,
											"name": "tag",
											"source": 4,
											"value": "363"
										},
										{
											"begin": 5065,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 5112,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5065,
											"end": 5112,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 5112,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 5112,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 5112,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 5112,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 5112,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 5131,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 5131,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 5131,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3781,
											"end": 5131,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3781,
											"end": 5131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8553,
											"end": 9102,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 8553,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8709,
											"end": 8718,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8691,
											"end": 9059,
											"name": "tag",
											"source": 4,
											"value": "366"
										},
										{
											"begin": 8691,
											"end": 9059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8748,
											"end": 8758,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 8740,
											"end": 8759,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8740,
											"end": 8759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8740,
											"end": 8759,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8740,
											"end": 8759,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8740,
											"end": 8747,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 8740,
											"end": 8759,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8740,
											"end": 8759,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8740,
											"end": 8759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8740,
											"end": 8759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8740,
											"end": 8759,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8740,
											"end": 8775,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 8740,
											"end": 8775,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8740,
											"end": 8782,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8736,
											"end": 8782,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8736,
											"end": 8782,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8691,
											"end": 9059,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8691,
											"end": 9059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "367"
										},
										{
											"begin": 8691,
											"end": 9059,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8834,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8824,
											"end": 8834,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8879,
											"end": 8889,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8834,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8871,
											"end": 8890,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8890,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8890,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8878,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 8871,
											"end": 8890,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8871,
											"end": 8890,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8890,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8871,
											"end": 8890,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8890,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8906,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 8871,
											"end": 8906,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8824,
											"end": 8834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8834,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8834,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8834,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8853,
											"name": "PUSH",
											"source": 4,
											"value": "FB4F8197"
										},
										{
											"begin": 8824,
											"end": 8853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8906,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8907,
											"end": 8908,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8907,
											"end": 8908,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 8871,
											"end": 8909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "tag",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8909,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8927,
											"end": 8932,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8653,
											"end": 8678,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8653,
											"end": 8678,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8653,
											"end": 8678,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8721,
											"end": 8735,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8714,
											"end": 8736,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8709,
											"end": 8711,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8694,
											"end": 8712,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8694,
											"end": 8712,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8687,
											"end": 8737,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8641,
											"end": 8643,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8626,
											"end": 8644,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8626,
											"end": 8644,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8485,
											"end": 8743,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "tag",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "tag",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "tag",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8799,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8799,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 8796,
											"end": 8799,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 8796,
											"end": 8799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8799,
											"name": "tag",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 8796,
											"end": 8799,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8799,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8799,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8799,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8691,
											"end": 9059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "366"
										},
										{
											"begin": 8691,
											"end": 9059,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8691,
											"end": 9059,
											"name": "tag",
											"source": 4,
											"value": "367"
										},
										{
											"begin": 8691,
											"end": 9059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9084,
											"end": 9094,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9076,
											"end": 9095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9083,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 9076,
											"end": 9095,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9076,
											"end": 9095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9076,
											"end": 9095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9095,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9095,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 9069,
											"end": 9095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2549,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2355,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2397,
											"name": "DIFFICULTY",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "380"
										},
										{
											"begin": 2448,
											"end": 2449,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2433,
											"end": 2445,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 2433,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2449,
											"name": "tag",
											"source": 4,
											"value": "380"
										},
										{
											"begin": 2433,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2508,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2298,
											"end": 2508,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2508,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2508,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2298,
											"end": 2508,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2508,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11449,
											"end": 11468,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 11449,
											"end": 11468,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11449,
											"end": 11468,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 11449,
											"end": 11468,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11484,
											"end": 11496,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11484,
											"end": 11496,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11477,
											"end": 11505,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11477,
											"end": 11505,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11477,
											"end": 11505,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11477,
											"end": 11505,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2450,
											"name": "BLOCKHASH",
											"source": 4
										},
										{
											"begin": 11521,
											"end": 11533,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 11521,
											"end": 11533,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11521,
											"end": 11533,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11521,
											"end": 11533,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11514,
											"end": 11542,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11514,
											"end": 11542,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11514,
											"end": 11542,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11514,
											"end": 11542,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2486,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 11576,
											"end": 11591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11576,
											"end": 11591,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11572,
											"end": 11625,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11558,
											"end": 11570,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 11558,
											"end": 11570,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11558,
											"end": 11570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11551,
											"end": 11626,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11642,
											"end": 11655,
											"name": "PUSH",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 11642,
											"end": 11655,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2508,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2298,
											"end": 2508,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2508,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2298,
											"end": 2508,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2508,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2508,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2508,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2508,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2508,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2508,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2508,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2298,
											"end": 2508,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2526,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2526,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2526,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2526,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2526,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2526,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2540,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2540,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 2242,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "tag",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 2242,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2223,
											"end": 2549,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2151,
											"end": 2556,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2151,
											"end": 2556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11771,
											"end": 11775,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11771,
											"end": 11775,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11788,
											"end": 11986,
											"name": "tag",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 11788,
											"end": 11986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11809,
											"end": 11818,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11809,
											"end": 11825,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 11806,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 11825,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11788,
											"end": 11986,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11788,
											"end": 11986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 11788,
											"end": 11986,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11896,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11886,
											"end": 11896,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11905,
											"end": 11917,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11905,
											"end": 11917,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11922,
											"end": 11931,
											"name": "ORIGIN",
											"source": 4
										},
										{
											"begin": 11922,
											"end": 11931,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11886,
											"end": 11896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11904,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 11886,
											"end": 11904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11915,
											"end": 11916,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11915,
											"end": 11916,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11905,
											"end": 11917,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11905,
											"end": 11917,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11905,
											"end": 11917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 11905,
											"end": 11917,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11905,
											"end": 11917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 11905,
											"end": 11917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 11905,
											"end": 11917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11905,
											"end": 11917,
											"name": "tag",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 11905,
											"end": 11917,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11905,
											"end": 11917,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11905,
											"end": 11917,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 11905,
											"end": 11917,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11905,
											"end": 11917,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11905,
											"end": 11917,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11905,
											"end": 11917,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1506,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1506,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1471,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1512,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "tag",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "tag",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 11886,
											"end": 11918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "tag",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 11886,
											"end": 11918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11886,
											"end": 11931,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11886,
											"end": 11931,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11883,
											"end": 11976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 11883,
											"end": 11976,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11957,
											"end": 11962,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11957,
											"end": 11962,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11691,
											"end": 12013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11883,
											"end": 11976,
											"name": "tag",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 11883,
											"end": 11976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11827,
											"end": 11830,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11827,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 11827,
											"end": 11830,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11827,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 11827,
											"end": 11830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11827,
											"end": 11830,
											"name": "tag",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 11827,
											"end": 11830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11827,
											"end": 11830,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11827,
											"end": 11830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11827,
											"end": 11830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11788,
											"end": 11986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 11788,
											"end": 11986,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11788,
											"end": 11986,
											"name": "tag",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 11788,
											"end": 11986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12002,
											"end": 12006,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 12002,
											"end": 12006,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11691,
											"end": 12013,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11691,
											"end": 12013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 9850,
											"end": 10195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9918,
											"end": 9943,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9962,
											"end": 9981,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9962,
											"end": 9981,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9946,
											"end": 9959,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9946,
											"end": 9981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 9946,
											"end": 9981,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9946,
											"end": 9981,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9946,
											"end": 9981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 9946,
											"end": 9981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9946,
											"end": 9981,
											"name": "tag",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 9946,
											"end": 9981,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 9999,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9992,
											"end": 9999,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10013,
											"end": 10023,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10033,
											"end": 10037,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 10102,
											"end": 10120,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 10102,
											"end": 10120,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10102,
											"end": 10120,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10095,
											"end": 10138,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10154,
											"end": 10172,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 10154,
											"end": 10172,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10154,
											"end": 10172,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10147,
											"end": 10181,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10147,
											"end": 10181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10147,
											"end": 10181,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9918,
											"end": 9981,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9918,
											"end": 9981,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9992,
											"end": 9999,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 9999,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10012,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 9992,
											"end": 10012,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "tag",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 9992,
											"end": 10058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "tag",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 9992,
											"end": 10058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10077,
											"end": 10087,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 10069,
											"end": 10088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10069,
											"end": 10088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10069,
											"end": 10088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10069,
											"end": 10088,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10069,
											"end": 10076,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 10069,
											"end": 10088,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10069,
											"end": 10088,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10069,
											"end": 10088,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10069,
											"end": 10088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10069,
											"end": 10088,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10069,
											"end": 10102,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10069,
											"end": 10102,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10069,
											"end": 10119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10069,
											"end": 10119,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10106,
											"end": 10119,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10106,
											"end": 10119,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10069,
											"end": 10088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10069,
											"end": 10119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "404"
										},
										{
											"begin": 10069,
											"end": 10119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10106,
											"end": 10119,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10106,
											"end": 10119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10069,
											"end": 10119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 10069,
											"end": 10119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10069,
											"end": 10119,
											"name": "tag",
											"source": 4,
											"value": "404"
										},
										{
											"begin": 10069,
											"end": 10119,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10069,
											"end": 10119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10069,
											"end": 10119,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10069,
											"end": 10119,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9850,
											"end": 10195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5440,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5176,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5225,
											"end": 5232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5225,
											"end": 5232,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5377,
											"name": "tag",
											"source": 4,
											"value": "406"
										},
										{
											"begin": 5245,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5266,
											"end": 5271,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5266,
											"end": 5278,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5278,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5278,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5377,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "407"
										},
										{
											"begin": 5245,
											"end": 5377,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5313,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5314,
											"end": 5315,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5316,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5316,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5316,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5316,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "410"
										},
										{
											"begin": 5308,
											"end": 5316,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "410"
										},
										{
											"begin": 5308,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 5308,
											"end": 5316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5316,
											"name": "tag",
											"source": 4,
											"value": "410"
										},
										{
											"begin": 5308,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5316,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5316,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5316,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5316,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5308,
											"end": 5316,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5316,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5316,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5316,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 5308,
											"end": 5316,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5316,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5327,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5331,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5308,
											"end": 5331,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5305,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 5305,
											"end": 5366,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5355,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5176,
											"end": 5440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5305,
											"end": 5366,
											"name": "tag",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 5305,
											"end": 5366,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5280,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5280,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 5280,
											"end": 5283,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5280,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 5280,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5280,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 5280,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5280,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5280,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5280,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "406"
										},
										{
											"begin": 5245,
											"end": 5377,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5377,
											"name": "tag",
											"source": 4,
											"value": "407"
										},
										{
											"begin": 5245,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5387,
											"end": 5431,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5387,
											"end": 5431,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5387,
											"end": 5431,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5387,
											"end": 5431,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12241,
											"end": 12243,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5387,
											"end": 5431,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5387,
											"end": 5431,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5387,
											"end": 5431,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12223,
											"end": 12244,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12280,
											"end": 12282,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 12260,
											"end": 12278,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 12260,
											"end": 12278,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12260,
											"end": 12278,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12253,
											"end": 12283,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12319,
											"end": 12353,
											"name": "PUSH",
											"source": 5,
											"value": "636F756C64206E6F742066696E6420617661696C61626C65206475656C20726F"
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12292,
											"end": 12354,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12370,
											"end": 12388,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 12370,
											"end": 12388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12370,
											"end": 12388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12363,
											"end": 12395,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12412,
											"end": 12431,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 12412,
											"end": 12431,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5387,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 12039,
											"end": 12437,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12442,
											"end": 13606,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 12442,
											"end": 13606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12861,
											"end": 12871,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12872,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12853,
											"end": 12872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12872,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12860,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 12853,
											"end": 12872,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12853,
											"end": 12872,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12872,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12853,
											"end": 12872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12872,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12888,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 12892,
											"end": 12893,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 12853,
											"end": 12893,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 12845,
											"end": 12927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 12845,
											"end": 12927,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12845,
											"end": 12927,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12845,
											"end": 12927,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12845,
											"end": 12927,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12845,
											"end": 12927,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12644,
											"end": 12646,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12845,
											"end": 12927,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12845,
											"end": 12927,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12845,
											"end": 12927,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12626,
											"end": 12647,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12683,
											"end": 12685,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 12663,
											"end": 12681,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 12663,
											"end": 12681,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12663,
											"end": 12681,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12656,
											"end": 12686,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12722,
											"end": 12753,
											"name": "PUSH",
											"source": 5,
											"value": "796F75206861766520746F2064656665617420616C6C20626F73736573000000"
										},
										{
											"begin": 12702,
											"end": 12720,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 12702,
											"end": 12720,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12702,
											"end": 12720,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12695,
											"end": 12754,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12771,
											"end": 12789,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 12771,
											"end": 12789,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12845,
											"end": 12927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 12442,
											"end": 12795,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12845,
											"end": 12927,
											"name": "tag",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 12845,
											"end": 12927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12944,
											"end": 12978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "420"
										},
										{
											"begin": 12968,
											"end": 12977,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12944,
											"end": 12966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 12944,
											"end": 12978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12944,
											"end": 12978,
											"name": "tag",
											"source": 4,
											"value": "420"
										},
										{
											"begin": 12944,
											"end": 12978,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12936,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "421"
										},
										{
											"begin": 12936,
											"end": 13017,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12936,
											"end": 13017,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12936,
											"end": 13017,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12936,
											"end": 13017,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12936,
											"end": 13017,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13002,
											"end": 13004,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12936,
											"end": 13017,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12936,
											"end": 13017,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12936,
											"end": 13017,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12984,
											"end": 13005,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13041,
											"end": 13043,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 13021,
											"end": 13039,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 13021,
											"end": 13039,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13021,
											"end": 13039,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13014,
											"end": 13044,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13080,
											"end": 13114,
											"name": "PUSH",
											"source": 5,
											"value": "796F75277265206E6F74206F776E6572206F6620746865736520746F6B656E49"
										},
										{
											"begin": 13060,
											"end": 13078,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 13060,
											"end": 13078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13060,
											"end": 13078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13053,
											"end": 13115,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13131,
											"end": 13149,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 13131,
											"end": 13149,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13131,
											"end": 13149,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13124,
											"end": 13156,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13173,
											"end": 13192,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 13173,
											"end": 13192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12936,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 12800,
											"end": 13198,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12936,
											"end": 13017,
											"name": "tag",
											"source": 4,
											"value": "421"
										},
										{
											"begin": 12936,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13035,
											"end": 13071,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 13061,
											"end": 13070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13035,
											"end": 13059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 13035,
											"end": 13071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13035,
											"end": 13071,
											"name": "tag",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 13035,
											"end": 13071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13034,
											"end": 13071,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13026,
											"end": 13095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 13026,
											"end": 13095,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13026,
											"end": 13095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13026,
											"end": 13095,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13026,
											"end": 13095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13026,
											"end": 13095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13405,
											"end": 13407,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13026,
											"end": 13095,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13026,
											"end": 13095,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13026,
											"end": 13095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13387,
											"end": 13408,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13444,
											"end": 13446,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 13424,
											"end": 13442,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 13424,
											"end": 13442,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13424,
											"end": 13442,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13417,
											"end": 13447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D1BDAD95B9CC81DD95C994818DB185A5B5959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13463,
											"end": 13481,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 13463,
											"end": 13481,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13463,
											"end": 13481,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13456,
											"end": 13505,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13522,
											"end": 13540,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 13522,
											"end": 13540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13026,
											"end": 13095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 13203,
											"end": 13546,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13026,
											"end": 13095,
											"name": "tag",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 13026,
											"end": 13095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13107,
											"end": 13125,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13107,
											"end": 13125,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13136,
											"end": 13516,
											"name": "tag",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 13136,
											"end": 13516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13157,
											"end": 13166,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13157,
											"end": 13173,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13153,
											"end": 13154,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13153,
											"end": 13173,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 13136,
											"end": 13516,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13136,
											"end": 13516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 13136,
											"end": 13516,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13228,
											"end": 13232,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 13195,
											"end": 13211,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 13195,
											"end": 13225,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13212,
											"end": 13221,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 13222,
											"end": 13223,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13212,
											"end": 13224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13212,
											"end": 13224,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13212,
											"end": 13224,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13212,
											"end": 13224,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 13212,
											"end": 13224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 13212,
											"end": 13224,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13212,
											"end": 13224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 13212,
											"end": 13224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 13212,
											"end": 13224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13212,
											"end": 13224,
											"name": "tag",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 13212,
											"end": 13224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13212,
											"end": 13224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13212,
											"end": 13224,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 13212,
											"end": 13224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13212,
											"end": 13224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13212,
											"end": 13224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13212,
											"end": 13224,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13225,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13225,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13225,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13195,
											"end": 13225,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13225,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13225,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13225,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13225,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13195,
											"end": 13225,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13225,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13195,
											"end": 13225,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13225,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13195,
											"end": 13232,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 13195,
											"end": 13232,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13232,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13232,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13232,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13232,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 13195,
											"end": 13232,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13232,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13232,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13232,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13232,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13232,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13232,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13232,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13232,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13232,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13232,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13246,
											"end": 13257,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13260,
											"end": 13270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 13267,
											"end": 13269,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 13260,
											"end": 13266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 13260,
											"end": 13270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13260,
											"end": 13270,
											"name": "tag",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 13260,
											"end": 13270,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13246,
											"end": 13270,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13246,
											"end": 13270,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13293,
											"end": 13294,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 13284,
											"end": 13290,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13284,
											"end": 13294,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 13281,
											"end": 13515,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 13281,
											"end": 13515,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13338,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 13328,
											"end": 13338,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9113247"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13360,
											"end": 13363,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 13360,
											"end": 13363,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13328,
											"end": 13338,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13338,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13350,
											"name": "PUSH",
											"source": 4,
											"value": "A9113247"
										},
										{
											"begin": 13328,
											"end": 13350,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13338,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "tag",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 13328,
											"end": 13352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "tag",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 13328,
											"end": 13352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 13328,
											"end": 13357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13355,
											"end": 13357,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 13328,
											"end": 13357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 13328,
											"end": 13357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13357,
											"name": "tag",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 13328,
											"end": 13357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13327,
											"end": 13363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 13327,
											"end": 13363,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13327,
											"end": 13363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13327,
											"end": 13363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 13327,
											"end": 13363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13327,
											"end": 13363,
											"name": "tag",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 13327,
											"end": 13363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13310,
											"end": 13363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 13310,
											"end": 13363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13310,
											"end": 13363,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13310,
											"end": 13363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 13310,
											"end": 13363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13310,
											"end": 13363,
											"name": "tag",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 13310,
											"end": 13363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13392,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 13382,
											"end": 13392,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13392,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4261CADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13310,
											"end": 13363,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13310,
											"end": 13363,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13382,
											"end": 13392,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13392,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13405,
											"name": "PUSH",
											"source": 4,
											"value": "84C395BA"
										},
										{
											"begin": 13382,
											"end": 13405,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1506,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1506,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1506,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1471,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1512,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "tag",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "tag",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "tag",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13281,
											"end": 13515,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "447"
										},
										{
											"begin": 13281,
											"end": 13515,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13281,
											"end": 13515,
											"name": "tag",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 13281,
											"end": 13515,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13455,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 13448,
											"end": 13455,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13477,
											"end": 13481,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10052,
											"end": 10086,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13484,
											"end": 13494,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 10102,
											"end": 10120,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 10102,
											"end": 10120,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10102,
											"end": 10120,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10095,
											"end": 10138,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13496,
											"end": 13501,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 10154,
											"end": 10172,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 10154,
											"end": 10172,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10154,
											"end": 10172,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10147,
											"end": 10181,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13448,
											"end": 13455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13455,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13468,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 13448,
											"end": 13468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "451"
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "tag",
											"source": 4,
											"value": "451"
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "452"
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 13448,
											"end": 13502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "tag",
											"source": 4,
											"value": "452"
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13448,
											"end": 13502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13281,
											"end": 13515,
											"name": "tag",
											"source": 4,
											"value": "447"
										},
										{
											"begin": 13281,
											"end": 13515,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13175,
											"end": 13178,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13175,
											"end": 13178,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "453"
										},
										{
											"begin": 13175,
											"end": 13178,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13175,
											"end": 13178,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 13175,
											"end": 13178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13175,
											"end": 13178,
											"name": "tag",
											"source": 4,
											"value": "453"
										},
										{
											"begin": 13175,
											"end": 13178,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13175,
											"end": 13178,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13175,
											"end": 13178,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13175,
											"end": 13178,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13136,
											"end": 13516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 13136,
											"end": 13516,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13136,
											"end": 13516,
											"name": "tag",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 13136,
											"end": 13516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13136,
											"end": 13516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13548,
											"end": 13561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13544,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13561,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13561,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13527,
											"end": 13584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 13527,
											"end": 13584,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13527,
											"end": 13584,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13527,
											"end": 13584,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13527,
											"end": 13584,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13527,
											"end": 13584,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14524,
											"end": 14526,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13527,
											"end": 13584,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13527,
											"end": 13584,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13527,
											"end": 13584,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14506,
											"end": 14527,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14563,
											"end": 14565,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 14543,
											"end": 14561,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 14543,
											"end": 14561,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14543,
											"end": 14561,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14536,
											"end": 14566,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E73756666696369656E742066756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14582,
											"end": 14600,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 14582,
											"end": 14600,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14582,
											"end": 14600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14575,
											"end": 14623,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14640,
											"end": 14658,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 14640,
											"end": 14658,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13527,
											"end": 13584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 14322,
											"end": 14664,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9299,
											"end": 9844,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 9299,
											"end": 9844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9558,
											"end": 9568,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 9550,
											"end": 9569,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9550,
											"end": 9569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9550,
											"end": 9569,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9550,
											"end": 9569,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9550,
											"end": 9557,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 9550,
											"end": 9569,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9550,
											"end": 9569,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9550,
											"end": 9569,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9550,
											"end": 9569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9550,
											"end": 9569,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9550,
											"end": 9596,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9550,
											"end": 9596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9550,
											"end": 9596,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9550,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 9550,
											"end": 9605,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9599,
											"end": 9605,
											"name": "PUSH",
											"source": 4,
											"value": "15180"
										},
										{
											"begin": 9550,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 9550,
											"end": 9605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9550,
											"end": 9605,
											"name": "tag",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 9550,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9515,
											"end": 9530,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 9515,
											"end": 9605,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9515,
											"end": 9605,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9494,
											"end": 9640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 9494,
											"end": 9640,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9494,
											"end": 9640,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9494,
											"end": 9640,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9494,
											"end": 9640,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9494,
											"end": 9640,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14871,
											"end": 14873,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9494,
											"end": 9640,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9494,
											"end": 9640,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9494,
											"end": 9640,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14853,
											"end": 14874,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14910,
											"end": 14911,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 14890,
											"end": 14908,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 14890,
											"end": 14908,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14890,
											"end": 14908,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14883,
											"end": 14912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A393C903630BA32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14928,
											"end": 14946,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 14928,
											"end": 14946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14928,
											"end": 14946,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14921,
											"end": 14960,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9494,
											"end": 9640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 14669,
											"end": 15001,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9494,
											"end": 9640,
											"name": "tag",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 9494,
											"end": 9640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9659,
											"end": 9669,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9670,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9651,
											"end": 9670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9670,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9670,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9658,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 9651,
											"end": 9670,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9651,
											"end": 9670,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9670,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9651,
											"end": 9670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9670,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9700,
											"end": 9715,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9697,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9651,
											"end": 9697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9697,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9651,
											"end": 9715,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9805,
											"end": 9837,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9805,
											"end": 9837,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9805,
											"end": 9837,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9774,
											"end": 9790,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9774,
											"end": 9790,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9774,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 9774,
											"end": 9837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9805,
											"end": 9837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9774,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 9774,
											"end": 9837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9774,
											"end": 9837,
											"name": "tag",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 9774,
											"end": 9837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9743,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 9725,
											"end": 9744,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9725,
											"end": 9744,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9725,
											"end": 9744,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9725,
											"end": 9744,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9725,
											"end": 9732,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 9725,
											"end": 9744,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9725,
											"end": 9744,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9725,
											"end": 9744,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9725,
											"end": 9744,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9725,
											"end": 9744,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9725,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9725,
											"end": 9758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9725,
											"end": 9837,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9725,
											"end": 9837,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9725,
											"end": 9758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9725,
											"end": 9758,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9725,
											"end": 9744,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9725,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 9725,
											"end": 9837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9725,
											"end": 9837,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9725,
											"end": 9837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9725,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 9725,
											"end": 9837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9725,
											"end": 9837,
											"name": "tag",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 9725,
											"end": 9837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9725,
											"end": 9837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9725,
											"end": 9837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9725,
											"end": 9837,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9299,
											"end": 9844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 15077,
											"end": 16019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15216,
											"end": 15226,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 15208,
											"end": 15227,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15208,
											"end": 15227,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15208,
											"end": 15227,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15208,
											"end": 15227,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15208,
											"end": 15215,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 15208,
											"end": 15227,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15208,
											"end": 15227,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15208,
											"end": 15227,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15208,
											"end": 15227,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15208,
											"end": 15227,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15208,
											"end": 15243,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15208,
											"end": 15261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 15208,
											"end": 15261,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15200,
											"end": 15301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 15200,
											"end": 15301,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15200,
											"end": 15301,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15200,
											"end": 15301,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15200,
											"end": 15301,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15200,
											"end": 15301,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15200,
											"end": 15301,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15200,
											"end": 15301,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15200,
											"end": 15301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 15200,
											"end": 15301,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15200,
											"end": 15301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 15200,
											"end": 15301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15200,
											"end": 15301,
											"name": "tag",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 15200,
											"end": 15301,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15657,
											"end": 15667,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15668,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15644,
											"end": 15668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15668,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15668,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15656,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 15644,
											"end": 15668,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15644,
											"end": 15668,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15668,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15644,
											"end": 15668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15668,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15669,
											"end": 15685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "467"
										},
										{
											"begin": 15684,
											"end": 15685,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 15669,
											"end": 15683,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15669,
											"end": 15685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 15669,
											"end": 15685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15669,
											"end": 15685,
											"name": "tag",
											"source": 4,
											"value": "467"
										},
										{
											"begin": 15669,
											"end": 15685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "469"
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "469"
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 15644,
											"end": 15686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "tag",
											"source": 4,
											"value": "469"
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15686,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15643,
											"end": 15686,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15635,
											"end": 15724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 15635,
											"end": 15724,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15635,
											"end": 15724,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15635,
											"end": 15724,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15635,
											"end": 15724,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15635,
											"end": 15724,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15208,
											"end": 15210,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15635,
											"end": 15724,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15635,
											"end": 15724,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15635,
											"end": 15724,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15190,
											"end": 15211,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15247,
											"end": 15249,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 15227,
											"end": 15245,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 15227,
											"end": 15245,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15227,
											"end": 15245,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15220,
											"end": 15250,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15286,
											"end": 15320,
											"name": "PUSH",
											"source": 5,
											"value": "796F7527726520616C726561647920636C61696D6564207468697320626F6E75"
										},
										{
											"begin": 15266,
											"end": 15284,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 15266,
											"end": 15284,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15266,
											"end": 15284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15259,
											"end": 15321,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15337,
											"end": 15355,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 15337,
											"end": 15355,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15337,
											"end": 15355,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15330,
											"end": 15361,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15378,
											"end": 15397,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 15378,
											"end": 15397,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15635,
											"end": 15724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 15006,
											"end": 15403,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15635,
											"end": 15724,
											"name": "tag",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 15635,
											"end": 15724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15735,
											"end": 15746,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15749,
											"end": 15759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "474"
										},
										{
											"begin": 15756,
											"end": 15758,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 15749,
											"end": 15755,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 15749,
											"end": 15759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15749,
											"end": 15759,
											"name": "tag",
											"source": 4,
											"value": "474"
										},
										{
											"begin": 15749,
											"end": 15759,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15735,
											"end": 15759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15735,
											"end": 15759,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15783,
											"end": 15784,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 15774,
											"end": 15780,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15774,
											"end": 15784,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 15771,
											"end": 15944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "475"
										},
										{
											"begin": 15771,
											"end": 15944,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15808,
											"end": 15818,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15800,
											"end": 15819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15807,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 15800,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15800,
											"end": 15819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15800,
											"end": 15819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15819,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15832,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 15800,
											"end": 15832,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15838,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15838,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15836,
											"end": 15838,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 15836,
											"end": 15838,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "476"
										},
										{
											"begin": 15800,
											"end": 15838,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15836,
											"end": 15838,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15836,
											"end": 15838,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 15800,
											"end": 15838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15838,
											"name": "tag",
											"source": 4,
											"value": "476"
										},
										{
											"begin": 15800,
											"end": 15838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15838,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15838,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15800,
											"end": 15838,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15771,
											"end": 15944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "477"
										},
										{
											"begin": 15771,
											"end": 15944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15771,
											"end": 15944,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15771,
											"end": 15944,
											"name": "tag",
											"source": 4,
											"value": "475"
										},
										{
											"begin": 15771,
											"end": 15944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15895,
											"end": 15905,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 15887,
											"end": 15906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15887,
											"end": 15906,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15887,
											"end": 15906,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15887,
											"end": 15906,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15887,
											"end": 15894,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 15887,
											"end": 15906,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15887,
											"end": 15906,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15887,
											"end": 15906,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15887,
											"end": 15906,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15887,
											"end": 15906,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15887,
											"end": 15920,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 15887,
											"end": 15920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15887,
											"end": 15928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15887,
											"end": 15928,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15924,
											"end": 15928,
											"name": "PUSH",
											"source": 4,
											"value": "3E8"
										},
										{
											"begin": 15924,
											"end": 15928,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15887,
											"end": 15906,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15887,
											"end": 15928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 15887,
											"end": 15928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15924,
											"end": 15928,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15924,
											"end": 15928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15887,
											"end": 15928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 15887,
											"end": 15928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15771,
											"end": 15944,
											"name": "tag",
											"source": 4,
											"value": "477"
										},
										{
											"begin": 15771,
											"end": 15944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15975,
											"end": 15985,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 15962,
											"end": 15986,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15962,
											"end": 15986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15962,
											"end": 15986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15962,
											"end": 15986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15962,
											"end": 15974,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 15962,
											"end": 15986,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15962,
											"end": 15986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15962,
											"end": 15986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15962,
											"end": 15986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15962,
											"end": 15986,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 16007,
											"end": 16011,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 16007,
											"end": 16011,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15987,
											"end": 16003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 16007,
											"end": 16011,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15987,
											"end": 16001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15987,
											"end": 16003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 15987,
											"end": 16003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6781,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 5972,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6014,
											"end": 6021,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6134,
											"end": 6162,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6170,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 6171,
											"end": 6190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "484"
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 6171,
											"end": 6190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6171,
											"end": 6190,
											"name": "tag",
											"source": 4,
											"value": "484"
										},
										{
											"begin": 6171,
											"end": 6190,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6191,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6191,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6191,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6191,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "486"
										},
										{
											"begin": 6165,
											"end": 6191,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "486"
										},
										{
											"begin": 6165,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 6165,
											"end": 6191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6191,
											"name": "tag",
											"source": 4,
											"value": "486"
										},
										{
											"begin": 6165,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6191,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6191,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6165,
											"end": 6191,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6191,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6165,
											"end": 6191,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6165,
											"end": 6191,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6191,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6191,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 6165,
											"end": 6191,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6191,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6134,
											"end": 6191,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6134,
											"end": 6191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6203,
											"end": 6222,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6269,
											"end": 6280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6269,
											"end": 6299,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6269,
											"end": 6299,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6269,
											"end": 6299,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6236,
											"end": 6247,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6236,
											"end": 6266,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 6236,
											"end": 6266,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6236,
											"end": 6266,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6236,
											"end": 6299,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6232,
											"end": 6387,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6232,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "488"
										},
										{
											"begin": 6232,
											"end": 6387,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6329,
											"end": 6330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6232,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "489"
										},
										{
											"begin": 6232,
											"end": 6387,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6232,
											"end": 6387,
											"name": "tag",
											"source": 4,
											"value": "488"
										},
										{
											"begin": 6232,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6375,
											"end": 6376,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6232,
											"end": 6387,
											"name": "tag",
											"source": 4,
											"value": "489"
										},
										{
											"begin": 6232,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6773,
											"end": 6774,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6766,
											"end": 6774,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6766,
											"end": 6774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6766,
											"end": 6774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6766,
											"end": 6774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6781,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12156,
											"end": 12160,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12156,
											"end": 12160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12179,
											"end": 12333,
											"name": "tag",
											"source": 4,
											"value": "491"
										},
										{
											"begin": 12179,
											"end": 12333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12200,
											"end": 12209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12200,
											"end": 12216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12196,
											"end": 12197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12196,
											"end": 12216,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12179,
											"end": 12333,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12179,
											"end": 12333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 12179,
											"end": 12333,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12248,
											"end": 12264,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 12248,
											"end": 12278,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12265,
											"end": 12274,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12275,
											"end": 12276,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12277,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12277,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "495"
										},
										{
											"begin": 12265,
											"end": 12277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "495"
										},
										{
											"begin": 12265,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 12265,
											"end": 12277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12277,
											"name": "tag",
											"source": 4,
											"value": "495"
										},
										{
											"begin": 12265,
											"end": 12277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12277,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12265,
											"end": 12277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12277,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12277,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12277,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12265,
											"end": 12277,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12248,
											"end": 12278,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12248,
											"end": 12278,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12248,
											"end": 12278,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12248,
											"end": 12278,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12248,
											"end": 12278,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12248,
											"end": 12278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12248,
											"end": 12278,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12248,
											"end": 12278,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12248,
											"end": 12278,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12248,
											"end": 12278,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12248,
											"end": 12278,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12248,
											"end": 12278,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 12248,
											"end": 12278,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 12248,
											"end": 12278,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12245,
											"end": 12323,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12245,
											"end": 12323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "496"
										},
										{
											"begin": 12245,
											"end": 12323,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12305,
											"end": 12309,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 12305,
											"end": 12309,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12074,
											"end": 12364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12074,
											"end": 12364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12245,
											"end": 12323,
											"name": "tag",
											"source": 4,
											"value": "496"
										},
										{
											"begin": 12245,
											"end": 12323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12221,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12221,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "497"
										},
										{
											"begin": 12218,
											"end": 12221,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12221,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 12218,
											"end": 12221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12221,
											"name": "tag",
											"source": 4,
											"value": "497"
										},
										{
											"begin": 12218,
											"end": 12221,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12221,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12221,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12221,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12179,
											"end": 12333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "491"
										},
										{
											"begin": 12179,
											"end": 12333,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15610,
											"end": 15612,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15592,
											"end": 15613,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15649,
											"end": 15651,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 15629,
											"end": 15647,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 15629,
											"end": 15647,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15629,
											"end": 15647,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15622,
											"end": 15652,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15688,
											"end": 15722,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 15668,
											"end": 15686,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 15668,
											"end": 15686,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15668,
											"end": 15686,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15661,
											"end": 15723,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15739,
											"end": 15757,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 15739,
											"end": 15757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15739,
											"end": 15757,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15732,
											"end": 15768,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15785,
											"end": 15804,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 15785,
											"end": 15804,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 15408,
											"end": 15810,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13612,
											"end": 13709,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 13612,
											"end": 13709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13685,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 13675,
											"end": 13685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13685,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4261CADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1506,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1506,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1506,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1506,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13675,
											"end": 13685,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13698,
											"name": "PUSH",
											"source": 4,
											"value": "84C395BA"
										},
										{
											"begin": 13675,
											"end": 13698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "507"
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "tag",
											"source": 4,
											"value": "507"
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13675,
											"end": 13701,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16017,
											"end": 16019,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15999,
											"end": 16020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15999,
											"end": 16020,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16036,
											"end": 16054,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 16036,
											"end": 16054,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16036,
											"end": 16054,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16029,
											"end": 16059,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16095,
											"end": 16129,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 16075,
											"end": 16093,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 16075,
											"end": 16093,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16075,
											"end": 16093,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16068,
											"end": 16130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16147,
											"end": 16165,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 16147,
											"end": 16165,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 15815,
											"end": 16171,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "208"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "211"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "520"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "520"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "522"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "523"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "522"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "378"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "504"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "523"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "526"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "522"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "526"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "534"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "534"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 715,
											"end": 1330,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 715,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 801,
											"end": 807,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 862,
											"end": 864,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 850,
											"end": 859,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 841,
											"end": 848,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 837,
											"end": 860,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 833,
											"end": 865,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 830,
											"end": 882,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 830,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "538"
										},
										{
											"begin": 830,
											"end": 882,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 878,
											"end": 879,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 875,
											"end": 876,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 868,
											"end": 880,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 830,
											"end": 882,
											"name": "tag",
											"source": 5,
											"value": "538"
										},
										{
											"begin": 830,
											"end": 882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 918,
											"end": 927,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 905,
											"end": 928,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 947,
											"end": 965,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 988,
											"end": 990,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 977,
											"end": 991,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1008,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "539"
										},
										{
											"begin": 974,
											"end": 1008,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1002,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1006,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1008,
											"name": "tag",
											"source": 5,
											"value": "539"
										},
										{
											"begin": 974,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1040,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1049,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1049,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1094,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1084,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1076,
											"end": 1078,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1085,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1068,
											"end": 1095,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "540"
										},
										{
											"begin": 1058,
											"end": 1113,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1111,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1058,
											"end": 1113,
											"name": "tag",
											"source": 5,
											"value": "540"
										},
										{
											"begin": 1058,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1151,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1152,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1173,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1195,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "541"
										},
										{
											"begin": 1161,
											"end": 1195,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1191,
											"end": 1192,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1189,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1193,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1195,
											"name": "tag",
											"source": 5,
											"value": "541"
										},
										{
											"begin": 1161,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1241,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1229,
											"end": 1235,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1226,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1222,
											"end": 1236,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1220,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1237,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1242,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1252,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1269,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "542"
										},
										{
											"begin": 1204,
											"end": 1269,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1266,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1263,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1269,
											"name": "tag",
											"source": 5,
											"value": "542"
										},
										{
											"begin": 1204,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1298,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 715,
											"end": 1330,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 715,
											"end": 1330,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 715,
											"end": 1330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1517,
											"end": 1648,
											"name": "tag",
											"source": 5,
											"value": "528"
										},
										{
											"begin": 1517,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1623,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1582,
											"end": 1624,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1582,
											"end": 1624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1572,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "504"
										},
										{
											"begin": 1572,
											"end": 1642,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1635,
											"end": 1636,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1640,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1653,
											"end": 1900,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1653,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1767,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1753,
											"end": 1762,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1744,
											"end": 1751,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1763,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1768,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1785,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "547"
										},
										{
											"begin": 1733,
											"end": 1785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1771,
											"end": 1783,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1785,
											"name": "tag",
											"source": 5,
											"value": "547"
										},
										{
											"begin": 1733,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1820,
											"end": 1829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "548"
										},
										{
											"begin": 1864,
											"end": 1869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "528"
										},
										{
											"begin": 1839,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1870,
											"name": "tag",
											"source": 5,
											"value": "548"
										},
										{
											"begin": 1839,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1889,
											"end": 1894,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1653,
											"end": 1900,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1653,
											"end": 1900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1905,
											"end": 2931,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1905,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2043,
											"end": 2047,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2074,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2101,
											"end": 2103,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2099,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2104,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2142,
											"end": 2145,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2131,
											"end": 2140,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2146,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2188,
											"end": 2194,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2195,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2179,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2180,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2155,
											"end": 2196,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2252,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2242,
											"end": 2248,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2253,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2254,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2229,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2216,
											"end": 2225,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2212,
											"end": 2230,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2205,
											"end": 2255,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2301,
											"end": 2307,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2312,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2313,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2286,
											"end": 2288,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2275,
											"end": 2284,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2314,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2369,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2361,
											"end": 2367,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2357,
											"end": 2372,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 2373,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2345,
											"end": 2348,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2334,
											"end": 2343,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2330,
											"end": 2349,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2323,
											"end": 2374,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2429,
											"end": 2432,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2421,
											"end": 2427,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2417,
											"end": 2433,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2411,
											"end": 2434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2408,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 2394,
											"end": 2403,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2409,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2383,
											"end": 2435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2485,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 2474,
											"end": 2480,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2486,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2464,
											"end": 2487,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2525,
											"end": 2529,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 2518,
											"end": 2522,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2516,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2530,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2579,
											"end": 2598,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2628,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2614,
											"end": 2620,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2607,
											"end": 2629,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2660,
											"end": 2663,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2649,
											"end": 2658,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2707,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2691,
											"end": 2703,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2708,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2673,
											"end": 2708,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2673,
											"end": 2708,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2726,
											"end": 2727,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2727,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2736,
											"end": 2905,
											"name": "tag",
											"source": 5,
											"value": "550"
										},
										{
											"begin": 2736,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2750,
											"end": 2756,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2747,
											"end": 2748,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2757,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2736,
											"end": 2905,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2736,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "552"
										},
										{
											"begin": 2736,
											"end": 2905,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2825,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2825,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2895,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2895,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2895,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2895,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2772,
											"end": 2773,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2765,
											"end": 2774,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2774,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2845,
											"end": 2857,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2845,
											"end": 2857,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2845,
											"end": 2857,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2845,
											"end": 2857,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2736,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "550"
										},
										{
											"begin": 2736,
											"end": 2905,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2736,
											"end": 2905,
											"name": "tag",
											"source": 5,
											"value": "552"
										},
										{
											"begin": 2736,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2922,
											"end": 2925,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 1905,
											"end": 2931,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1905,
											"end": 2931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 3251,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2936,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3012,
											"end": 3018,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3065,
											"end": 3067,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3053,
											"end": 3062,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3044,
											"end": 3051,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3036,
											"end": 3068,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3033,
											"end": 3085,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3033,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "554"
										},
										{
											"begin": 3033,
											"end": 3085,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3081,
											"end": 3082,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3078,
											"end": 3079,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3083,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3033,
											"end": 3085,
											"name": "tag",
											"source": 5,
											"value": "554"
										},
										{
											"begin": 3033,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 3129,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "555"
										},
										{
											"begin": 3164,
											"end": 3169,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "528"
										},
										{
											"begin": 3139,
											"end": 3170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3170,
											"name": "tag",
											"source": 5,
											"value": "555"
										},
										{
											"begin": 3139,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3189,
											"end": 3194,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3243,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3226,
											"end": 3244,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3226,
											"end": 3244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3226,
											"end": 3244,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3226,
											"end": 3244,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3245,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3245,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2936,
											"end": 3251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3464,
											"end": 3591,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 3464,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3535,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 3520,
											"end": 3523,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3516,
											"end": 3536,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3513,
											"end": 3514,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3537,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3546,
											"end": 3561,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3584,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3577,
											"end": 3578,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3585,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 4711,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3596,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3686,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3711,
											"end": 3713,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3754,
											"end": 3756,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3733,
											"end": 3740,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3725,
											"end": 3757,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "559"
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3770,
											"end": 3771,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3767,
											"end": 3768,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3760,
											"end": 3772,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "tag",
											"source": 5,
											"value": "559"
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3819,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3839,
											"end": 3857,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3880,
											"end": 3882,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3872,
											"end": 3878,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3869,
											"end": 3883,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 3900,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "560"
										},
										{
											"begin": 3866,
											"end": 3900,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3896,
											"end": 3897,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3893,
											"end": 3894,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3886,
											"end": 3898,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 3900,
											"name": "tag",
											"source": 5,
											"value": "560"
										},
										{
											"begin": 3866,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3940,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3932,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 3941,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3909,
											"end": 3941,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3909,
											"end": 3941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 3986,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 3976,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3968,
											"end": 3970,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3964,
											"end": 3977,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3960,
											"end": 3987,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3950,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "561"
										},
										{
											"begin": 3950,
											"end": 4005,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4001,
											"end": 4002,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 3999,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4003,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3950,
											"end": 4005,
											"name": "tag",
											"source": 5,
											"value": "561"
										},
										{
											"begin": 3950,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4037,
											"end": 4039,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4024,
											"end": 4040,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4061,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4055,
											"end": 4057,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4052,
											"end": 4062,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4085,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "563"
										},
										{
											"begin": 4049,
											"end": 4085,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4065,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "563"
										},
										{
											"begin": 4065,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 4065,
											"end": 4083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4065,
											"end": 4083,
											"name": "tag",
											"source": 5,
											"value": "563"
										},
										{
											"begin": 4065,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4113,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4109,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4104,
											"end": 4114,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4145,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4206,
											"end": 4208,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4202,
											"end": 4209,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4197,
											"end": 4199,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4200,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4185,
											"end": 4210,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4177,
											"end": 4183,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4173,
											"end": 4211,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4261,
											"end": 4267,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4249,
											"end": 4259,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4246,
											"end": 4268,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4241,
											"end": 4243,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4229,
											"end": 4239,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4244,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4269,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4220,
											"end": 4292,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4220,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "565"
										},
										{
											"begin": 4220,
											"end": 4292,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "565"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 4272,
											"end": 4290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "tag",
											"source": 5,
											"value": "565"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4310,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4301,
											"end": 4323,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4358,
											"end": 4376,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4358,
											"end": 4376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4358,
											"end": 4376,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4407,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4407,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4407,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4407,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4434,
											"end": 4445,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4434,
											"end": 4445,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4434,
											"end": 4445,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4430,
											"end": 4450,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4430,
											"end": 4450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4430,
											"end": 4450,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4481,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4481,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4481,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4498,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "566"
										},
										{
											"begin": 4459,
											"end": 4498,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4494,
											"end": 4495,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4484,
											"end": 4496,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4498,
											"name": "tag",
											"source": 5,
											"value": "566"
										},
										{
											"begin": 4459,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4680,
											"name": "tag",
											"source": 5,
											"value": "567"
										},
										{
											"begin": 4538,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4560,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4549,
											"end": 4552,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4546,
											"end": 4561,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4680,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "569"
										},
										{
											"begin": 4538,
											"end": 4680,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4620,
											"end": 4637,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4620,
											"end": 4637,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4608,
											"end": 4638,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4608,
											"end": 4638,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4571,
											"end": 4583,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4571,
											"end": 4583,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4571,
											"end": 4583,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4571,
											"end": 4583,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4658,
											"end": 4670,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4658,
											"end": 4670,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4658,
											"end": 4670,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4658,
											"end": 4670,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "567"
										},
										{
											"begin": 4538,
											"end": 4680,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4680,
											"name": "tag",
											"source": 5,
											"value": "569"
										},
										{
											"begin": 4538,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4699,
											"end": 4705,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 4711,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3596,
											"end": 4711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5658,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 5531,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5592,
											"end": 5602,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 5587,
											"end": 5590,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5583,
											"end": 5603,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5580,
											"end": 5581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5573,
											"end": 5604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5623,
											"end": 5627,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5613,
											"end": 5628,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5647,
											"end": 5651,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5644,
											"end": 5645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5637,
											"end": 5652,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6434,
											"end": 6561,
											"name": "tag",
											"source": 5,
											"value": "529"
										},
										{
											"begin": 6434,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6505,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 6490,
											"end": 6493,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6486,
											"end": 6506,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6476,
											"end": 6507,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6526,
											"end": 6530,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 6523,
											"end": 6524,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6516,
											"end": 6531,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6550,
											"end": 6554,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6540,
											"end": 6555,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6566,
											"end": 6734,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 6566,
											"end": 6734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6648,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6648,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6648,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6670,
											"end": 6679,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6670,
											"end": 6679,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6687,
											"end": 6702,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6687,
											"end": 6702,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6687,
											"end": 6702,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6681,
											"end": 6703,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6681,
											"end": 6703,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6667,
											"end": 6704,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6657,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 6657,
											"end": 6728,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6708,
											"end": 6726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 6708,
											"end": 6726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "529"
										},
										{
											"begin": 6708,
											"end": 6726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6739,
											"end": 6864,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 6739,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6804,
											"end": 6813,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6804,
											"end": 6813,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6804,
											"end": 6813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6825,
											"end": 6835,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6825,
											"end": 6835,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6825,
											"end": 6835,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6822,
											"end": 6858,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6822,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 6822,
											"end": 6858,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6838,
											"end": 6856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 6838,
											"end": 6856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "529"
										},
										{
											"begin": 6838,
											"end": 6856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6869,
											"end": 7004,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 6869,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6911,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6929,
											"end": 6946,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6929,
											"end": 6946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6929,
											"end": 6946,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6926,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "584"
										},
										{
											"begin": 6926,
											"end": 6969,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6949,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "584"
										},
										{
											"begin": 6949,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "529"
										},
										{
											"begin": 6949,
											"end": 6967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6949,
											"end": 6967,
											"name": "tag",
											"source": 5,
											"value": "584"
										},
										{
											"begin": 6949,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6996,
											"end": 6997,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6985,
											"end": 6998,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6985,
											"end": 6998,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6869,
											"end": 7004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7009,
											"end": 7137,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 7009,
											"end": 7137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7076,
											"end": 7085,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7076,
											"end": 7085,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7076,
											"end": 7085,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7097,
											"end": 7108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7097,
											"end": 7108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7097,
											"end": 7108,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7131,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 7094,
											"end": 7131,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7111,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 7111,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "529"
										},
										{
											"begin": 7111,
											"end": 7129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7142,
											"end": 7577,
											"name": "tag",
											"source": 5,
											"value": "530"
										},
										{
											"begin": 7142,
											"end": 7577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7195,
											"end": 7198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7233,
											"end": 7238,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7227,
											"end": 7239,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7260,
											"end": 7266,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7258,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7267,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7290,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7315,
											"end": 7317,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7310,
											"end": 7313,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7306,
											"end": 7318,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7299,
											"end": 7318,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7299,
											"end": 7318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7352,
											"end": 7354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7345,
											"end": 7350,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7341,
											"end": 7355,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7383,
											"end": 7552,
											"name": "tag",
											"source": 5,
											"value": "589"
										},
										{
											"begin": 7383,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7397,
											"end": 7403,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7395,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7391,
											"end": 7404,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7383,
											"end": 7552,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7383,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "591"
										},
										{
											"begin": 7383,
											"end": 7552,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7458,
											"end": 7471,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7458,
											"end": 7471,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7446,
											"end": 7472,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7446,
											"end": 7472,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7504,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7504,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7504,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7504,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 7527,
											"end": 7542,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7527,
											"end": 7542,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7527,
											"end": 7542,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7527,
											"end": 7542,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7419,
											"end": 7420,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7412,
											"end": 7421,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7383,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "589"
										},
										{
											"begin": 7383,
											"end": 7552,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7383,
											"end": 7552,
											"name": "tag",
											"source": 5,
											"value": "591"
										},
										{
											"begin": 7383,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7568,
											"end": 7571,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7568,
											"end": 7571,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 7142,
											"end": 7577,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7142,
											"end": 7577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7582,
											"end": 7843,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 7582,
											"end": 7843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7761,
											"end": 7763,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7750,
											"end": 7759,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7743,
											"end": 7764,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7724,
											"end": 7728,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7781,
											"end": 7837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "548"
										},
										{
											"begin": 7833,
											"end": 7835,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7822,
											"end": 7831,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7810,
											"end": 7816,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7781,
											"end": 7837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "530"
										},
										{
											"begin": 7781,
											"end": 7837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7848,
											"end": 8125,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 7848,
											"end": 8125,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7915,
											"end": 7921,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7968,
											"end": 7970,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7956,
											"end": 7965,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7947,
											"end": 7954,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7943,
											"end": 7966,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7939,
											"end": 7971,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 7936,
											"end": 7988,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7936,
											"end": 7988,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "595"
										},
										{
											"begin": 7936,
											"end": 7988,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 7985,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7974,
											"end": 7986,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7936,
											"end": 7988,
											"name": "tag",
											"source": 5,
											"value": "595"
										},
										{
											"begin": 7936,
											"end": 7988,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8016,
											"end": 8025,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8010,
											"end": 8026,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8069,
											"end": 8074,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8062,
											"end": 8075,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8055,
											"end": 8076,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8048,
											"end": 8053,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8045,
											"end": 8077,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "548"
										},
										{
											"begin": 8035,
											"end": 8095,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8091,
											"end": 8092,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8088,
											"end": 8089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8081,
											"end": 8093,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8748,
											"end": 8875,
											"name": "tag",
											"source": 5,
											"value": "531"
										},
										{
											"begin": 8748,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8809,
											"end": 8819,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 8804,
											"end": 8807,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 8800,
											"end": 8820,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 8797,
											"end": 8798,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8790,
											"end": 8821,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8840,
											"end": 8844,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 8837,
											"end": 8838,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8830,
											"end": 8845,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8864,
											"end": 8868,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8861,
											"end": 8862,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8854,
											"end": 8869,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8880,
											"end": 9000,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 8880,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8920,
											"end": 8921,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8946,
											"end": 8947,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8936,
											"end": 8971,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "602"
										},
										{
											"begin": 8936,
											"end": 8971,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "602"
										},
										{
											"begin": 8951,
											"end": 8969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "531"
										},
										{
											"begin": 8951,
											"end": 8969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8969,
											"name": "tag",
											"source": 5,
											"value": "602"
										},
										{
											"begin": 8951,
											"end": 8969,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8985,
											"end": 8994,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 8985,
											"end": 8994,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8880,
											"end": 9000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9005,
											"end": 9404,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 9005,
											"end": 9404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9207,
											"end": 9209,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9189,
											"end": 9210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9189,
											"end": 9210,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9189,
											"end": 9210,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9246,
											"end": 9248,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 9226,
											"end": 9244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9226,
											"end": 9244,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9226,
											"end": 9244,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9219,
											"end": 9249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9285,
											"end": 9319,
											"name": "PUSH",
											"source": 5,
											"value": "6265666F726520796F75206E6565642062656174206E65636573736172792062"
										},
										{
											"begin": 9280,
											"end": 9282,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9265,
											"end": 9283,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9265,
											"end": 9283,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9320,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9351,
											"end": 9353,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 9336,
											"end": 9354,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9336,
											"end": 9354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9329,
											"end": 9362,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9394,
											"end": 9397,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 9379,
											"end": 9398,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9379,
											"end": 9398,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9005,
											"end": 9404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10899,
											"end": 11231,
											"name": "tag",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 10899,
											"end": 11231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11106,
											"end": 11112,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11095,
											"end": 11104,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11088,
											"end": 11113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11149,
											"end": 11151,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11144,
											"end": 11146,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11133,
											"end": 11142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11129,
											"end": 11147,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11122,
											"end": 11152,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11069,
											"end": 11073,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11169,
											"end": 11225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "609"
										},
										{
											"begin": 11221,
											"end": 11223,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11210,
											"end": 11219,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11206,
											"end": 11224,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11198,
											"end": 11204,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11169,
											"end": 11225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "530"
										},
										{
											"begin": 11169,
											"end": 11225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11169,
											"end": 11225,
											"name": "tag",
											"source": 5,
											"value": "609"
										},
										{
											"begin": 11169,
											"end": 11225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11161,
											"end": 11225,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 10899,
											"end": 11231,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10899,
											"end": 11231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11666,
											"end": 11778,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 11666,
											"end": 11778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11698,
											"end": 11699,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11724,
											"end": 11725,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11714,
											"end": 11749,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "613"
										},
										{
											"begin": 11714,
											"end": 11749,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "613"
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "531"
										},
										{
											"begin": 11729,
											"end": 11747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "tag",
											"source": 5,
											"value": "613"
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11763,
											"end": 11772,
											"name": "MOD",
											"source": 5
										},
										{
											"begin": 11763,
											"end": 11772,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11666,
											"end": 11778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11783,
											"end": 12034,
											"name": "tag",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 11783,
											"end": 12034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11853,
											"end": 11859,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11906,
											"end": 11908,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11894,
											"end": 11903,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11885,
											"end": 11892,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11881,
											"end": 11904,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11877,
											"end": 11909,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 11874,
											"end": 11926,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11874,
											"end": 11926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "615"
										},
										{
											"begin": 11874,
											"end": 11926,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11922,
											"end": 11923,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11919,
											"end": 11920,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11874,
											"end": 11926,
											"name": "tag",
											"source": 5,
											"value": "615"
										},
										{
											"begin": 11874,
											"end": 11926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11954,
											"end": 11963,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11948,
											"end": 11964,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11973,
											"end": 12004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "548"
										},
										{
											"begin": 11998,
											"end": 12003,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11973,
											"end": 12004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "528"
										},
										{
											"begin": 11973,
											"end": 12004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13551,
											"end": 13735,
											"name": "tag",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 13551,
											"end": 13735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13621,
											"end": 13627,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13674,
											"end": 13676,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13662,
											"end": 13671,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13653,
											"end": 13660,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13649,
											"end": 13672,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13645,
											"end": 13677,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 13642,
											"end": 13694,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13642,
											"end": 13694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "622"
										},
										{
											"begin": 13642,
											"end": 13694,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13690,
											"end": 13691,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13687,
											"end": 13688,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13680,
											"end": 13692,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13642,
											"end": 13694,
											"name": "tag",
											"source": 5,
											"value": "622"
										},
										{
											"begin": 13642,
											"end": 13694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13713,
											"end": 13729,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 13713,
											"end": 13729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13551,
											"end": 13735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13551,
											"end": 13735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/IERC20.sol",
								"contracts/IWomanSeekersNewDawn.sol",
								"contracts/LP.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"RiseClaimMap(address,uint256)": "6b7c7264",
							"bosses(uint256)": "204597e0",
							"buyEnergyForTokens(uint256)": "c178d83d",
							"calculateTestDamage()": "2f15911d",
							"checkOwnershipOfTokenIds(uint256[])": "7aded47e",
							"checkOwnershipOfTokens(uint256[])": "bece83e4",
							"claimBonus(uint256)": "d9193025",
							"claimDailyEnergy()": "c9ec3950",
							"claimDuel()": "dd6ffd37",
							"claimMysticEffect(uint256)": "39850c6b",
							"createNewDuelRoom()": "224d54b3",
							"doAttackInDuel(uint256)": "b0cd0d56",
							"duelPrice()": "83948115",
							"duels(uint256)": "859a62d0",
							"enterInDuel()": "6893f296",
							"enterInGame(uint256[])": "2b56c1dd",
							"fightWithBoss(uint256)": "2aa04a66",
							"findAvailableDuel()": "c54b9c78",
							"getFinalTreasures(uint256[])": "c724cfd3",
							"getInfoPlayer(address)": "45d9d0be",
							"isPlayerInDuelAtIndexRoom(uint256)": "127226cc",
							"isTokenIdClaimed(uint256)": "d175810d",
							"isTokensClaimedTreasures(uint256[])": "e6f4cab2",
							"leaveGame()": "b1501f9c",
							"owner()": "8da5cb5b",
							"players(address)": "e2eb41ff",
							"random(uint256)": "b863bd37",
							"renounceOwnership()": "715018a6",
							"setDefEnergyAccrual(uint256)": "5d1b3d76",
							"setDefaultDamage(uint256)": "271c52ba",
							"setEnergyPriceInTokens(uint256)": "7a742b2d",
							"testMintDirectFromGame()": "fcefb2b6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collection\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bossLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"damages\",\"type\":\"uint256[]\"}],\"name\":\"BossDefeated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_indexRoom\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"damages\",\"type\":\"uint256[]\"}],\"name\":\"duelAttackLogs\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"RiseClaimMap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bosses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"health\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dodgeChance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"attackDamage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountEnergy\",\"type\":\"uint256\"}],\"name\":\"buyEnergyForTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateTestDamage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"checkOwnershipOfTokenIds\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"checkOwnershipOfTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_orderPosition\",\"type\":\"uint256\"}],\"name\":\"claimBonus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimDailyEnergy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimDuel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_orderPosition\",\"type\":\"uint256\"}],\"name\":\"claimMysticEffect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createNewDuelRoom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_indexRoom\",\"type\":\"uint256\"}],\"name\":\"doAttackInDuel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duelPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"duels\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"playersNow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDamagePlayer0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDamagePlayer1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enterInDuel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"enterInGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bossLevel\",\"type\":\"uint256\"}],\"name\":\"fightWithBoss\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"findAvailableDuel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"getFinalTreasures\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_player\",\"type\":\"address\"}],\"name\":\"getInfoPlayer\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"qtyBossDefeated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"energyFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"energyBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokensInGame\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastTimestampClaimedEnergy\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"playingTokenIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct LP.Player\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_indexRoom\",\"type\":\"uint256\"}],\"name\":\"isPlayerInDuelAtIndexRoom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isTokenIdClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"isTokensClaimedTreasures\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"leaveGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"qtyBossDefeated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"energyFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"energyBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokensInGame\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastTimestampClaimedEnergy\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"random\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setDefEnergyAccrual\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setDefaultDamage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setEnergyPriceInTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMintDirectFromGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LP.sol\":\"LP\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0xd49070e01df31c9f39ed67f7cb2844d842b5fc4c07048156f77f1ac06956a223\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7a56689e6a846ee765a66e30a816b0fe65eba41d2f16beb5bd57a7f7daf1027\",\"dweb:/ipfs/QmduVybj3AaRyHwRRnmjxsG5jPERmFBEUH9EcXwVM5kPyC\"]},\"contracts/IWomanSeekersNewDawn.sol\":{\"keccak256\":\"0x6737fcb30d30bdf65b5a3d3d5a1a959c52fa9a5993c23b5a5a8194908c867036\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cfea922d4975068063cdfc6a996de07b439f02862c479d53df4d372d393d90d\",\"dweb:/ipfs/QmcLZxCKgkPzGnasDU3JuUtrwPikC99L8WrG2fNNT73oAb\"]},\"contracts/LP.sol\":{\"keccak256\":\"0xa19f1097b4d3781e045128cb97cbffe71322830340259c717d9a4b16d037e307\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5eb3f04c4d6469028f81856de274ca8588e63ad40265118218211ffad379adb6\",\"dweb:/ipfs/QmddCa5fzYRZC2DorZPmKWmTt9DxeopB6kpy6tqyWvNvfj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/LP.sol:LP",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 281,
								"contract": "contracts/LP.sol:LP",
								"label": "Collection",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWomanSeekersNewDawn)271"
							},
							{
								"astId": 284,
								"contract": "contracts/LP.sol:LP",
								"label": "LPToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)212"
							},
							{
								"astId": 287,
								"contract": "contracts/LP.sol:LP",
								"label": "defEnergyAccrual",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 290,
								"contract": "contracts/LP.sol:LP",
								"label": "energyPriceInTokens",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 293,
								"contract": "contracts/LP.sol:LP",
								"label": "defaultDamage",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 298,
								"contract": "contracts/LP.sol:LP",
								"label": "players",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(Player)317_storage)"
							},
							{
								"astId": 303,
								"contract": "contracts/LP.sol:LP",
								"label": "bosses",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(bossSpecs)337_storage)"
							},
							{
								"astId": 352,
								"contract": "contracts/LP.sol:LP",
								"label": "duels",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_struct(duelInfo)348_storage)dyn_storage"
							},
							{
								"astId": 661,
								"contract": "contracts/LP.sol:LP",
								"label": "duelPrice",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 770,
								"contract": "contracts/LP.sol:LP",
								"label": "bosscounter",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1244,
								"contract": "contracts/LP.sol:LP",
								"label": "isTokenIdClaimed",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_bool)"
							},
							{
								"astId": 1399,
								"contract": "contracts/LP.sol:LP",
								"label": "RiseClaimMap",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_array(t_bool)5_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)2_storage": {
								"base": "t_address",
								"encoding": "inplace",
								"label": "address[2]",
								"numberOfBytes": "64"
							},
							"t_array(t_bool)5_storage": {
								"base": "t_bool",
								"encoding": "inplace",
								"label": "bool[5]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(duelInfo)348_storage)dyn_storage": {
								"base": "t_struct(duelInfo)348_storage",
								"encoding": "dynamic_array",
								"label": "struct LP.duelInfo[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)212": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IWomanSeekersNewDawn)271": {
								"encoding": "inplace",
								"label": "contract IWomanSeekersNewDawn",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_bool)5_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool[5])",
								"numberOfBytes": "32",
								"value": "t_array(t_bool)5_storage"
							},
							"t_mapping(t_address,t_struct(Player)317_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct LP.Player)",
								"numberOfBytes": "32",
								"value": "t_struct(Player)317_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_struct(bossSpecs)337_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct LP.bossSpecs)",
								"numberOfBytes": "32",
								"value": "t_struct(bossSpecs)337_storage"
							},
							"t_struct(Player)317_storage": {
								"encoding": "inplace",
								"label": "struct LP.Player",
								"members": [
									{
										"astId": 305,
										"contract": "contracts/LP.sol:LP",
										"label": "qtyBossDefeated",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 307,
										"contract": "contracts/LP.sol:LP",
										"label": "energyFactor",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 309,
										"contract": "contracts/LP.sol:LP",
										"label": "energyBalance",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 311,
										"contract": "contracts/LP.sol:LP",
										"label": "amountTokensInGame",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 313,
										"contract": "contracts/LP.sol:LP",
										"label": "lastTimestampClaimedEnergy",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 316,
										"contract": "contracts/LP.sol:LP",
										"label": "playingTokenIds",
										"offset": 0,
										"slot": "5",
										"type": "t_array(t_uint256)dyn_storage"
									}
								],
								"numberOfBytes": "192"
							},
							"t_struct(bossSpecs)337_storage": {
								"encoding": "inplace",
								"label": "struct LP.bossSpecs",
								"members": [
									{
										"astId": 332,
										"contract": "contracts/LP.sol:LP",
										"label": "health",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 334,
										"contract": "contracts/LP.sol:LP",
										"label": "dodgeChance",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 336,
										"contract": "contracts/LP.sol:LP",
										"label": "attackDamage",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(duelInfo)348_storage": {
								"encoding": "inplace",
								"label": "struct LP.duelInfo",
								"members": [
									{
										"astId": 339,
										"contract": "contracts/LP.sol:LP",
										"label": "playersNow",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 343,
										"contract": "contracts/LP.sol:LP",
										"label": "players",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_address)2_storage"
									},
									{
										"astId": 345,
										"contract": "contracts/LP.sol:LP",
										"label": "totalDamagePlayer0",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 347,
										"contract": "contracts/LP.sol:LP",
										"label": "totalDamagePlayer1",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": []
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "IERC20",
							"nameLocation": "220:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 146,
									"name": "Transfer",
									"nameLocation": "409:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "434:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "418:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "456:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "440:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "460:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:2"
									},
									"src": "403:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 155,
									"name": "Approval",
									"nameLocation": "646:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "655:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "694:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "678:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "711:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "703:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:2"
									},
									"src": "640:78:2"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:2"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "846:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:2"
									},
									"scope": 212,
									"src": "800:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "952:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "962:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:2"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1002:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:2"
									},
									"scope": 212,
									"src": "943:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1019:208:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1242:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1259:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1251:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1271:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1263:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:28:2"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1297:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:6:2"
									},
									"scope": 212,
									"src": "1233:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "1311:270:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1596:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1614:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1606:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1621:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:32:2"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1661:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:2"
									},
									"scope": 212,
									"src": "1587:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1678:655:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2348:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2364:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "2356:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2381:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "2373:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:33:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "2407:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2407:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:6:2"
									},
									"scope": 212,
									"src": "2339:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "2421:295:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2731:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2752:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "2744:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2766:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "2758:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2758:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2778:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "2770:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:42:2"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "2804:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2804:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2803:6:2"
									},
									"scope": 212,
									"src": "2722:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 213,
							"src": "210:2603:2",
							"usedErrors": []
						}
					],
					"src": "109:2704:2"
				},
				"id": 2
			},
			"contracts/IWomanSeekersNewDawn.sol": {
				"ast": {
					"absolutePath": "contracts/IWomanSeekersNewDawn.sol",
					"exportedSymbols": {
						"IWomanSeekersNewDawn": [
							271
						]
					},
					"id": 272,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWomanSeekersNewDawn",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 271,
							"linearizedBaseContracts": [
								271
							],
							"name": "IWomanSeekersNewDawn",
							"nameLocation": "72:20:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c84f4568",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastTokenIdTransfer",
									"nameLocation": "109:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "128:2:3"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "154:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "154:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "153:6:3"
									},
									"scope": 271,
									"src": "100:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6352211e",
									"id": 226,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "177:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "193:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "185:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "184:17:3"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "225:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "225:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "224:9:3"
									},
									"scope": 271,
									"src": "168:66:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "251:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "262:2:3"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "288:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "287:9:3"
									},
									"scope": 271,
									"src": "242:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8462151c",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensOfOwner",
									"nameLocation": "314:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "346:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "338:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "327:31:3"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "382:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 235,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "382:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 236,
													"nodeType": "ArrayTypeName",
													"src": "382:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "381:18:3"
									},
									"scope": 271,
									"src": "305:95:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "417:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "435:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "427:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "426:15:3"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "473:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "465:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:17:3"
									},
									"scope": 271,
									"src": "408:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "84c395ba",
									"id": 251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintFromGame",
									"nameLocation": "499:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "_mintAmount",
												"nameLocation": "520:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "512:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "511:21:3"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "541:0:3"
									},
									"scope": 271,
									"src": "490:52:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9113247",
									"id": 256,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewNFTCost",
									"nameLocation": "559:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "570:2:3"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "596:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:9:3"
									},
									"scope": 271,
									"src": "550:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2862bb25",
									"id": 263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewNotTransferable",
									"nameLocation": "622:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "650:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "642:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:18:3"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "683:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 260,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "683:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "682:6:3"
									},
									"scope": 271,
									"src": "613:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb4f8197",
									"id": 270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setNotTransferable",
									"nameLocation": "706:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "_tokendId",
												"nameLocation": "733:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "725:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "749:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "744:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "744:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:32:3"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "765:0:3"
									},
									"scope": 271,
									"src": "697:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 272,
							"src": "62:707:3",
							"usedErrors": []
						}
					],
					"src": "35:736:3"
				},
				"id": 3
			},
			"contracts/LP.sol": {
				"ast": {
					"absolutePath": "contracts/LP.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"IERC20": [
							212
						],
						"IWomanSeekersNewDawn": [
							271
						],
						"LP": [
							1538
						],
						"Ownable": [
							112
						]
					},
					"id": 1539,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 273,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 274,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1539,
							"sourceUnit": 113,
							"src": "58:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IWomanSeekersNewDawn.sol",
							"file": "./IWomanSeekersNewDawn.sol",
							"id": 275,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1539,
							"sourceUnit": 272,
							"src": "111:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 276,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1539,
							"sourceUnit": 213,
							"src": "148:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 277,
										"name": "Ownable",
										"nameLocations": [
											"187:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "187:7:4"
									},
									"id": 278,
									"nodeType": "InheritanceSpecifier",
									"src": "187:7:4"
								}
							],
							"canonicalName": "LP",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1538,
							"linearizedBaseContracts": [
								1538,
								112,
								134
							],
							"name": "LP",
							"nameLocation": "181:2:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 281,
									"mutability": "mutable",
									"name": "Collection",
									"nameLocation": "222:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 1538,
									"src": "201:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWomanSeekersNewDawn_$271",
										"typeString": "contract IWomanSeekersNewDawn"
									},
									"typeName": {
										"id": 280,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 279,
											"name": "IWomanSeekersNewDawn",
											"nameLocations": [
												"201:20:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 271,
											"src": "201:20:4"
										},
										"referencedDeclaration": 271,
										"src": "201:20:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWomanSeekersNewDawn_$271",
											"typeString": "contract IWomanSeekersNewDawn"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 284,
									"mutability": "mutable",
									"name": "LPToken",
									"nameLocation": "245:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1538,
									"src": "238:14:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$212",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 283,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 282,
											"name": "IERC20",
											"nameLocations": [
												"238:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 212,
											"src": "238:6:4"
										},
										"referencedDeclaration": 212,
										"src": "238:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$212",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "defEnergyAccrual",
									"nameLocation": "267:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 1538,
									"src": "259:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 285,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "259:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 286,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "286:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 290,
									"mutability": "mutable",
									"name": "energyPriceInTokens",
									"nameLocation": "302:19:4",
									"nodeType": "VariableDeclaration",
									"scope": 1538,
									"src": "294:33:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "294:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "324:3:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 293,
									"mutability": "mutable",
									"name": "defaultDamage",
									"nameLocation": "392:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 1538,
									"src": "384:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "384:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "408:3:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "e2eb41ff",
									"id": 298,
									"mutability": "mutable",
									"name": "players",
									"nameLocation": "459:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1538,
									"src": "425:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
										"typeString": "mapping(address => struct LP.Player)"
									},
									"typeName": {
										"id": 297,
										"keyType": {
											"id": 294,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "433:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "425:26:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
											"typeString": "mapping(address => struct LP.Player)"
										},
										"valueType": {
											"id": 296,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 295,
												"name": "Player",
												"nameLocations": [
													"444:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 317,
												"src": "444:6:4"
											},
											"referencedDeclaration": 317,
											"src": "444:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Player_$317_storage_ptr",
												"typeString": "struct LP.Player"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "204597e0",
									"id": 303,
									"mutability": "mutable",
									"name": "bosses",
									"nameLocation": "509:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 1538,
									"src": "472:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_bossSpecs_$337_storage_$",
										"typeString": "mapping(uint256 => struct LP.bossSpecs)"
									},
									"typeName": {
										"id": 302,
										"keyType": {
											"id": 299,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "480:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "472:29:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_bossSpecs_$337_storage_$",
											"typeString": "mapping(uint256 => struct LP.bossSpecs)"
										},
										"valueType": {
											"id": 301,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 300,
												"name": "bossSpecs",
												"nameLocations": [
													"491:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 337,
												"src": "491:9:4"
											},
											"referencedDeclaration": 337,
											"src": "491:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_bossSpecs_$337_storage_ptr",
												"typeString": "struct LP.bossSpecs"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "LP.Player",
									"id": 317,
									"members": [
										{
											"constant": false,
											"id": 305,
											"mutability": "mutable",
											"name": "qtyBossDefeated",
											"nameLocation": "554:15:4",
											"nodeType": "VariableDeclaration",
											"scope": 317,
											"src": "546:23:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 304,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "546:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 307,
											"mutability": "mutable",
											"name": "energyFactor",
											"nameLocation": "587:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 317,
											"src": "579:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 306,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "579:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 309,
											"mutability": "mutable",
											"name": "energyBalance",
											"nameLocation": "716:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 317,
											"src": "708:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 308,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "708:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 311,
											"mutability": "mutable",
											"name": "amountTokensInGame",
											"nameLocation": "832:18:4",
											"nodeType": "VariableDeclaration",
											"scope": 317,
											"src": "824:26:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "824:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 313,
											"mutability": "mutable",
											"name": "lastTimestampClaimedEnergy",
											"nameLocation": "997:26:4",
											"nodeType": "VariableDeclaration",
											"scope": 317,
											"src": "989:34:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 312,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "989:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 316,
											"mutability": "mutable",
											"name": "playingTokenIds",
											"nameLocation": "1043:15:4",
											"nodeType": "VariableDeclaration",
											"scope": 317,
											"src": "1033:25:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1033:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 315,
												"nodeType": "ArrayTypeName",
												"src": "1033:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Player",
									"nameLocation": "529:6:4",
									"nodeType": "StructDefinition",
									"scope": 1538,
									"src": "522:605:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "1308:40:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 325,
														"name": "players",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "1325:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
															"typeString": "mapping(address => struct LP.Player storage ref)"
														}
													},
													"id": 327,
													"indexExpression": {
														"id": 326,
														"name": "_player",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1333:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1325:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Player_$317_storage",
														"typeString": "struct LP.Player storage ref"
													}
												},
												"functionReturnParameters": 324,
												"id": 328,
												"nodeType": "Return",
												"src": "1318:23:4"
											}
										]
									},
									"functionSelector": "45d9d0be",
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInfoPlayer",
									"nameLocation": "1242:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "_player",
												"nameLocation": "1264:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1256:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1256:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:17:4"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1293:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Player_$317_memory_ptr",
													"typeString": "struct LP.Player"
												},
												"typeName": {
													"id": 322,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 321,
														"name": "Player",
														"nameLocations": [
															"1293:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 317,
														"src": "1293:6:4"
													},
													"referencedDeclaration": 317,
													"src": "1293:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Player_$317_storage_ptr",
														"typeString": "struct LP.Player"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:15:4"
									},
									"scope": 1538,
									"src": "1233:115:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "LP.bossSpecs",
									"id": 337,
									"members": [
										{
											"constant": false,
											"id": 332,
											"mutability": "mutable",
											"name": "health",
											"nameLocation": "1389:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 337,
											"src": "1381:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 331,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1381:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 334,
											"mutability": "mutable",
											"name": "dodgeChance",
											"nameLocation": "1413:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 337,
											"src": "1405:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 333,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1405:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 336,
											"mutability": "mutable",
											"name": "attackDamage",
											"nameLocation": "1442:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 337,
											"src": "1434:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 335,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1434:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "bossSpecs",
									"nameLocation": "1361:9:4",
									"nodeType": "StructDefinition",
									"scope": 1538,
									"src": "1354:107:4",
									"visibility": "public"
								},
								{
									"canonicalName": "LP.duelInfo",
									"id": 348,
									"members": [
										{
											"constant": false,
											"id": 339,
											"mutability": "mutable",
											"name": "playersNow",
											"nameLocation": "1501:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 348,
											"src": "1493:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 338,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1493:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 343,
											"mutability": "mutable",
											"name": "players",
											"nameLocation": "1532:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 348,
											"src": "1521:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$2_storage_ptr",
												"typeString": "address[2]"
											},
											"typeName": {
												"baseType": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 342,
												"length": {
													"hexValue": "32",
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1529:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2_by_1",
														"typeString": "int_const 2"
													},
													"value": "2"
												},
												"nodeType": "ArrayTypeName",
												"src": "1521:10:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$2_storage_ptr",
													"typeString": "address[2]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 345,
											"mutability": "mutable",
											"name": "totalDamagePlayer0",
											"nameLocation": "1575:18:4",
											"nodeType": "VariableDeclaration",
											"scope": 348,
											"src": "1567:26:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 344,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1567:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 347,
											"mutability": "mutable",
											"name": "totalDamagePlayer1",
											"nameLocation": "1664:18:4",
											"nodeType": "VariableDeclaration",
											"scope": 348,
											"src": "1656:26:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 346,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1656:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "duelInfo",
									"nameLocation": "1474:8:4",
									"nodeType": "StructDefinition",
									"scope": 1538,
									"src": "1467:275:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "859a62d0",
									"id": 352,
									"mutability": "mutable",
									"name": "duels",
									"nameLocation": "1766:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1538,
									"src": "1748:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_duelInfo_$348_storage_$dyn_storage",
										"typeString": "struct LP.duelInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 350,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 349,
												"name": "duelInfo",
												"nameLocations": [
													"1748:8:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 348,
												"src": "1748:8:4"
											},
											"referencedDeclaration": 348,
											"src": "1748:8:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_duelInfo_$348_storage_ptr",
												"typeString": "struct LP.duelInfo"
											}
										},
										"id": 351,
										"nodeType": "ArrayTypeName",
										"src": "1748:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_duelInfo_$348_storage_$dyn_storage_ptr",
											"typeString": "struct LP.duelInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "1811:152:4",
										"statements": [
											{
												"expression": {
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 357,
														"name": "Collection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "1821:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWomanSeekersNewDawn_$271",
															"typeString": "contract IWomanSeekersNewDawn"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 359,
																"name": "_collection",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "1855:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 358,
															"name": "IWomanSeekersNewDawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "1834:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IWomanSeekersNewDawn_$271_$",
																"typeString": "type(contract IWomanSeekersNewDawn)"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1834:33:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWomanSeekersNewDawn_$271",
															"typeString": "contract IWomanSeekersNewDawn"
														}
													},
													"src": "1821:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWomanSeekersNewDawn_$271",
														"typeString": "contract IWomanSeekersNewDawn"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "1821:46:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 363,
														"name": "createBoss",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "1877:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1877:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "1877:12:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 366,
														"name": "createBoss",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "1899:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1899:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "1899:12:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "createBoss",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "1921:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1921:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "1921:12:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 372,
														"name": "createBoss",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "1943:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1943:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "1943:12:4"
											}
										]
									},
									"id": 376,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "_collection",
												"nameLocation": "1798:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1790:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1789:21:4"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 1538,
									"src": "1778:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "2005:138:4",
										"statements": [
											{
												"assignments": [
													384
												],
												"declarations": [
													{
														"constant": false,
														"id": 384,
														"mutability": "mutable",
														"name": "emptyPlayers",
														"nameLocation": "2042:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 397,
														"src": "2024:30:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
															"typeString": "address[2]"
														},
														"typeName": {
															"baseType": {
																"id": 382,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2024:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 383,
															"length": {
																"hexValue": "32",
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2032:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "2024:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$2_storage_ptr",
																"typeString": "address[2]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"nodeType": "VariableDeclarationStatement",
												"src": "2024:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2102:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"id": 391,
																	"name": "emptyPlayers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "2105:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
																		"typeString": "address[2] memory"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2119:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"hexValue": "30",
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2121:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
																		"typeString": "address[2] memory"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 389,
																"name": "duelInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "2076:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_duelInfo_$348_storage_ptr_$",
																	"typeString": "type(struct LP.duelInfo storage pointer)"
																}
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2076:59:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_duelInfo_$348_memory_ptr",
																"typeString": "struct LP.duelInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_duelInfo_$348_memory_ptr",
																"typeString": "struct LP.duelInfo memory"
															}
														],
														"expression": {
															"id": 386,
															"name": "duels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "2065:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_duelInfo_$348_storage_$dyn_storage",
																"typeString": "struct LP.duelInfo storage ref[] storage ref"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2071:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2065:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_duelInfo_$348_storage_$dyn_storage_ptr_$_t_struct$_duelInfo_$348_storage_$returns$__$bound_to$_t_array$_t_struct$_duelInfo_$348_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct LP.duelInfo storage ref[] storage pointer,struct LP.duelInfo storage ref)"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2065:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "2065:71:4"
											}
										]
									},
									"functionSelector": "224d54b3",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createNewDuelRoom",
									"nameLocation": "1978:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1995:2:4"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2005:0:4"
									},
									"scope": 1538,
									"src": "1969:174:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "2213:343:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 410,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "2340:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 411,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2346:9:4",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "2340:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 412,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "2381:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 413,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2387:10:4",
																				"memberName": "difficulty",
																				"nodeType": "MemberAccess",
																				"src": "2381:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 418,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 415,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "2433:5:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 416,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2439:6:4",
																							"memberName": "number",
																							"nodeType": "MemberAccess",
																							"src": "2433:12:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 417,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2448:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "2433:16:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 414,
																					"name": "blockhash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967291,
																					"src": "2423:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																						"typeString": "function (uint256) view returns (bytes32)"
																					}
																				},
																				"id": 419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2423:27:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"expression": {
																					"id": 420,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2476:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 421,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2480:6:4",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2476:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 408,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "2298:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2302:12:4",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "2298:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2298:210:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 407,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "2267:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2267:259:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2242:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 405,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2242:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2242:298:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 425,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "2543:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2242:307:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 404,
												"id": 427,
												"nodeType": "Return",
												"src": "2223:326:4"
											}
										]
									},
									"functionSelector": "b863bd37",
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "random",
									"nameLocation": "2160:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "2175:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "2167:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2167:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:16:4"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "2204:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:9:4"
									},
									"scope": 1538,
									"src": "2151:405:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "2700:42:4",
										"statements": [
											{
												"expression": {
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 434,
														"name": "defEnergyAccrual",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "2710:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 435,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "2729:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2710:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "2710:25:4"
											}
										]
									},
									"functionSelector": "5d1b3d76",
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setDefEnergyAccrual",
									"nameLocation": "2657:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "2685:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "2677:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:16:4"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2700:0:4"
									},
									"scope": 1538,
									"src": "2648:94:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "2896:45:4",
										"statements": [
											{
												"expression": {
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 444,
														"name": "energyPriceInTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2906:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 445,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "2928:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2906:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "2906:28:4"
											}
										]
									},
									"functionSelector": "7a742b2d",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setEnergyPriceInTokens",
									"nameLocation": "2850:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "2881:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "2873:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2873:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2872:16:4"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2896:0:4"
									},
									"scope": 1538,
									"src": "2841:100:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "3047:39:4",
										"statements": [
											{
												"expression": {
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 454,
														"name": "defaultDamage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3057:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 455,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "3073:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3057:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "3057:22:4"
											}
										]
									},
									"functionSelector": "271c52ba",
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setDefaultDamage",
									"nameLocation": "3007:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3032:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3024:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3024:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3023:16:4"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3047:0:4"
									},
									"scope": 1538,
									"src": "2998:88:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "3176:318:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "_indexRoom",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "3190:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 468,
																	"name": "duels",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "3203:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_duelInfo_$348_storage_$dyn_storage",
																		"typeString": "struct LP.duelInfo storage ref[] storage ref"
																	}
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3209:6:4",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3203:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3190:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206475656c20696e646578",
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3217:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_042ec7ec98b3f211cb413ab2958a6f7f13583991e5c078900d538191a820bcb3",
																"typeString": "literal_string \"Invalid duel index\""
															},
															"value": "Invalid duel index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_042ec7ec98b3f211cb413ab2958a6f7f13583991e5c078900d538191a820bcb3",
																"typeString": "literal_string \"Invalid duel index\""
															}
														],
														"id": 466,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3182:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3182:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "3182:56:4"
											},
											{
												"assignments": [
													476
												],
												"declarations": [
													{
														"constant": false,
														"id": 476,
														"mutability": "mutable",
														"name": "currentDuel",
														"nameLocation": "3266:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 508,
														"src": "3249:28:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_duelInfo_$348_storage_ptr",
															"typeString": "struct LP.duelInfo"
														},
														"typeName": {
															"id": 475,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 474,
																"name": "duelInfo",
																"nameLocations": [
																	"3249:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 348,
																"src": "3249:8:4"
															},
															"referencedDeclaration": 348,
															"src": "3249:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_duelInfo_$348_storage_ptr",
																"typeString": "struct LP.duelInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 480,
												"initialValue": {
													"baseExpression": {
														"id": 477,
														"name": "duels",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "3280:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_duelInfo_$348_storage_$dyn_storage",
															"typeString": "struct LP.duelInfo storage ref[] storage ref"
														}
													},
													"id": 479,
													"indexExpression": {
														"id": 478,
														"name": "_indexRoom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "3286:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3280:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_duelInfo_$348_storage",
														"typeString": "struct LP.duelInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3249:48:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 481,
															"name": "currentDuel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "3307:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_duelInfo_$348_storage_ptr",
																"typeString": "struct LP.duelInfo storage pointer"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3319:10:4",
														"memberName": "playersNow",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 339,
														"src": "3307:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3332:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3307:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 505,
												"nodeType": "IfStatement",
												"src": "3303:166:4",
												"trueBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "3335:134:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"expression": {
																				"id": 485,
																				"name": "currentDuel",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 476,
																				"src": "3349:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_duelInfo_$348_storage_ptr",
																					"typeString": "struct LP.duelInfo storage pointer"
																				}
																			},
																			"id": 486,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3361:7:4",
																			"memberName": "players",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 343,
																			"src": "3349:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$2_storage",
																				"typeString": "address[2] storage ref"
																			}
																		},
																		"id": 488,
																		"indexExpression": {
																			"hexValue": "30",
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3369:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3349:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 489,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3375:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3379:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3375:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "3349:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"expression": {
																				"id": 492,
																				"name": "currentDuel",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 476,
																				"src": "3389:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_duelInfo_$348_storage_ptr",
																					"typeString": "struct LP.duelInfo storage pointer"
																				}
																			},
																			"id": 493,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3401:7:4",
																			"memberName": "players",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 343,
																			"src": "3389:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$2_storage",
																				"typeString": "address[2] storage ref"
																			}
																		},
																		"id": 495,
																		"indexExpression": {
																			"hexValue": "31",
																			"id": 494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3409:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3389:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 496,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3415:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3419:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3415:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "3389:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3349:76:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 503,
															"nodeType": "IfStatement",
															"src": "3345:118:4",
															"trueBody": {
																"id": 502,
																"nodeType": "Block",
																"src": "3427:36:4",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3448:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 465,
																		"id": 501,
																		"nodeType": "Return",
																		"src": "3441:11:4"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3486:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 465,
												"id": 507,
												"nodeType": "Return",
												"src": "3479:12:4"
											}
										]
									},
									"functionSelector": "127226cc",
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isPlayerInDuelAtIndexRoom",
									"nameLocation": "3102:25:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "_indexRoom",
												"nameLocation": "3137:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "3129:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3129:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3127:21:4"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "3170:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 463,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3170:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3169:6:4"
									},
									"scope": 1538,
									"src": "3093:401:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "3557:122:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 514,
																	"name": "defaultDamage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "3576:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 515,
																			"name": "players",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 298,
																			"src": "3592:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																				"typeString": "mapping(address => struct LP.Player storage ref)"
																			}
																		},
																		"id": 518,
																		"indexExpression": {
																			"expression": {
																				"id": 516,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3600:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3604:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3600:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3592:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Player_$317_storage",
																			"typeString": "struct LP.Player storage ref"
																		}
																	},
																	"id": 519,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3612:12:4",
																	"memberName": "energyFactor",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 307,
																	"src": "3592:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3576:48:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 521,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3575:50:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"hexValue": "3230",
																						"id": 523,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3637:2:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_20_by_1",
																							"typeString": "int_const 20"
																						},
																						"value": "20"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_20_by_1",
																							"typeString": "int_const 20"
																						}
																					],
																					"id": 522,
																					"name": "random",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 429,
																					"src": "3630:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256) view returns (uint256)"
																					}
																				},
																				"id": 524,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3630:10:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 525,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3643:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "3630:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 527,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3629:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3648:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "3629:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 530,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3628:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3575:78:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 513,
												"id": 532,
												"nodeType": "Return",
												"src": "3567:86:4"
											}
										]
									},
									"functionSelector": "2f15911d",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTestDamage",
									"nameLocation": "3509:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3528:2:4"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3551:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3551:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:6:4"
									},
									"scope": 1538,
									"src": "3500:179:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "0f2ba4445fbd3af142b7a1251df18b6d462b23687b1bc8799a1c3eddb4ff0826",
									"id": 543,
									"name": "duelAttackLogs",
									"nameLocation": "3696:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "3728:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3711:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"indexed": false,
												"mutability": "mutable",
												"name": "_indexRoom",
												"nameLocation": "3744:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3736:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3736:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"indexed": false,
												"mutability": "mutable",
												"name": "damages",
												"nameLocation": "3766:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3756:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 539,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3756:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 540,
													"nodeType": "ArrayTypeName",
													"src": "3756:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3710:64:4"
									},
									"src": "3690:85:4"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "3832:1299:4",
										"statements": [
											{
												"assignments": [
													550
												],
												"declarations": [
													{
														"constant": false,
														"id": 550,
														"mutability": "mutable",
														"name": "currentDuel",
														"nameLocation": "3878:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 657,
														"src": "3861:28:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_duelInfo_$348_storage_ptr",
															"typeString": "struct LP.duelInfo"
														},
														"typeName": {
															"id": 549,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 548,
																"name": "duelInfo",
																"nameLocations": [
																	"3861:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 348,
																"src": "3861:8:4"
															},
															"referencedDeclaration": 348,
															"src": "3861:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_duelInfo_$348_storage_ptr",
																"typeString": "struct LP.duelInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 554,
												"initialValue": {
													"baseExpression": {
														"id": 551,
														"name": "duels",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "3892:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_duelInfo_$348_storage_$dyn_storage",
															"typeString": "struct LP.duelInfo storage ref[] storage ref"
														}
													},
													"id": 553,
													"indexExpression": {
														"id": 552,
														"name": "_indexRoom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "3898:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3892:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_duelInfo_$348_storage",
														"typeString": "struct LP.duelInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3861:48:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 557,
																	"name": "_indexRoom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "3954:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 556,
																"name": "isPlayerInDuelAtIndexRoom",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 509,
																"src": "3928:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3928:37:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f75277265206e6f7420696e20726f6f6d",
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3967:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_494e7d9414203e4790f373c2f3ed6cf36707b385d143fbcd9f2e28a8fdb561be",
																"typeString": "literal_string \"you're not in room\""
															},
															"value": "you're not in room"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_494e7d9414203e4790f373c2f3ed6cf36707b385d143fbcd9f2e28a8fdb561be",
																"typeString": "literal_string \"you're not in room\""
															}
														],
														"id": 555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3920:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3920:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "3920:68:4"
											},
											{
												"assignments": [
													566
												],
												"declarations": [
													{
														"constant": false,
														"id": 566,
														"mutability": "mutable",
														"name": "damages",
														"nameLocation": "4248:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 657,
														"src": "4231:24:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 564,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4231:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 565,
															"nodeType": "ArrayTypeName",
															"src": "4231:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 572,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "33",
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4272:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															}
														],
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4258:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 567,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4262:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 568,
															"nodeType": "ArrayTypeName",
															"src": "4262:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4258:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4231:43:4"
											},
											{
												"assignments": [
													574
												],
												"declarations": [
													{
														"constant": false,
														"id": 574,
														"mutability": "mutable",
														"name": "totalDamage",
														"nameLocation": "4290:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 657,
														"src": "4285:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 573,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4285:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 575,
												"nodeType": "VariableDeclarationStatement",
												"src": "4285:16:4"
											},
											{
												"body": {
													"id": 610,
													"nodeType": "Block",
													"src": "4352:180:4",
													"statements": [
														{
															"assignments": [
																587
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 587,
																	"mutability": "mutable",
																	"name": "damage",
																	"nameLocation": "4379:6:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 610,
																	"src": "4374:11:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 586,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4374:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 599,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"hexValue": "3130",
																				"id": 589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4395:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				}
																			],
																			"id": 588,
																			"name": "random",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 429,
																			"src": "4388:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) view returns (uint256)"
																			}
																		},
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4388:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 591,
																		"name": "defaultDamage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 293,
																		"src": "4401:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4388:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 593,
																			"name": "players",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 298,
																			"src": "4417:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																				"typeString": "mapping(address => struct LP.Player storage ref)"
																			}
																		},
																		"id": 596,
																		"indexExpression": {
																			"expression": {
																				"id": 594,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4425:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4429:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4425:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4417:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Player_$317_storage",
																			"typeString": "struct LP.Player storage ref"
																		}
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4437:12:4",
																	"memberName": "energyFactor",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 307,
																	"src": "4417:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4388:61:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4374:75:4"
														},
														{
															"expression": {
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 600,
																		"name": "damages",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 566,
																		"src": "4467:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 602,
																	"indexExpression": {
																		"id": 601,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 577,
																		"src": "4475:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4467:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 603,
																	"name": "damage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "4480:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4467:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 605,
															"nodeType": "ExpressionStatement",
															"src": "4467:19:4"
														},
														{
															"expression": {
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 606,
																	"name": "totalDamage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "4500:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 607,
																	"name": "damage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "4515:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4500:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 609,
															"nodeType": "ExpressionStatement",
															"src": "4500:21:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 580,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "4329:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "32",
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4334:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "4329:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"initializationExpression": {
													"assignments": [
														577
													],
													"declarations": [
														{
															"constant": false,
															"id": 577,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4322:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 611,
															"src": "4317:6:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 576,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4317:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 579,
													"initialValue": {
														"hexValue": "30",
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4326:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4317:10:4"
												},
												"loopExpression": {
													"expression": {
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4337:4:4",
														"subExpression": {
															"id": 583,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "4337:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 585,
													"nodeType": "ExpressionStatement",
													"src": "4337:4:4"
												},
												"nodeType": "ForStatement",
												"src": "4312:220:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 612,
																"name": "currentDuel",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "4552:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_duelInfo_$348_storage_ptr",
																	"typeString": "struct LP.duelInfo storage pointer"
																}
															},
															"id": 613,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4564:7:4",
															"memberName": "players",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 343,
															"src": "4552:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$2_storage",
																"typeString": "address[2] storage ref"
															}
														},
														"id": 615,
														"indexExpression": {
															"hexValue": "30",
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4552:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 616,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4578:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4582:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4578:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4552:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "4818:231:4",
													"statements": [
														{
															"expression": {
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 634,
																		"name": "currentDuel",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "4832:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_duelInfo_$348_storage_ptr",
																			"typeString": "struct LP.duelInfo storage pointer"
																		}
																	},
																	"id": 636,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4844:18:4",
																	"memberName": "totalDamagePlayer1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "4832:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 637,
																	"name": "totalDamage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "4866:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4832:45:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 639,
															"nodeType": "ExpressionStatement",
															"src": "4832:45:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 641,
																				"name": "currentDuel",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "4966:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_duelInfo_$348_storage_ptr",
																					"typeString": "struct LP.duelInfo storage pointer"
																				}
																			},
																			"id": 642,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4978:18:4",
																			"memberName": "totalDamagePlayer0",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 345,
																			"src": "4966:30:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5000:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4966:35:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "796f7527726520616c72656164792061747461636b656420696e206475656c",
																		"id": 645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5003:33:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_4088d262d54f98b516ed3d13f15518bdec24917db2cb4cd4a4cbd72e67c9760b",
																			"typeString": "literal_string \"you're already attacked in duel\""
																		},
																		"value": "you're already attacked in duel"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_4088d262d54f98b516ed3d13f15518bdec24917db2cb4cd4a4cbd72e67c9760b",
																			"typeString": "literal_string \"you're already attacked in duel\""
																		}
																	],
																	"id": 640,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4958:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4958:79:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 647,
															"nodeType": "ExpressionStatement",
															"src": "4958:79:4"
														}
													]
												},
												"id": 649,
												"nodeType": "IfStatement",
												"src": "4548:501:4",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "4590:222:4",
													"statements": [
														{
															"expression": {
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 619,
																		"name": "currentDuel",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "4617:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_duelInfo_$348_storage_ptr",
																			"typeString": "struct LP.duelInfo storage pointer"
																		}
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4629:18:4",
																	"memberName": "totalDamagePlayer0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 345,
																	"src": "4617:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 622,
																	"name": "totalDamage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "4651:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4617:45:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 624,
															"nodeType": "ExpressionStatement",
															"src": "4617:45:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 626,
																				"name": "currentDuel",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "4721:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_duelInfo_$348_storage_ptr",
																					"typeString": "struct LP.duelInfo storage pointer"
																				}
																			},
																			"id": 627,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4733:18:4",
																			"memberName": "totalDamagePlayer0",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 345,
																			"src": "4721:30:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4721:35:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "796f7527726520616c72656164792061747461636b656420696e206475656c",
																		"id": 630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4758:33:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_4088d262d54f98b516ed3d13f15518bdec24917db2cb4cd4a4cbd72e67c9760b",
																			"typeString": "literal_string \"you're already attacked in duel\""
																		},
																		"value": "you're already attacked in duel"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_4088d262d54f98b516ed3d13f15518bdec24917db2cb4cd4a4cbd72e67c9760b",
																			"typeString": "literal_string \"you're already attacked in duel\""
																		}
																	],
																	"id": 625,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4713:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4713:79:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 632,
															"nodeType": "ExpressionStatement",
															"src": "4713:79:4"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 651,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5080:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5084:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5080:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 653,
															"name": "_indexRoom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "5092:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 654,
															"name": "damages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "5104:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 650,
														"name": "duelAttackLogs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "5065:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256[] memory)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5065:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "EmitStatement",
												"src": "5060:52:4"
											}
										]
									},
									"functionSelector": "b0cd0d56",
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "doAttackInDuel",
									"nameLocation": "3790:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "_indexRoom",
												"nameLocation": "3813:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "3805:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:20:4"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3832:0:4"
									},
									"scope": 1538,
									"src": "3781:1350:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "83948115",
									"id": 661,
									"mutability": "mutable",
									"name": "duelPrice",
									"nameLocation": "5153:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1538,
									"src": "5138:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 659,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5138:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 660,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5165:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "5234:206:4",
										"statements": [
											{
												"body": {
													"id": 687,
													"nodeType": "Block",
													"src": "5285:92:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 677,
																			"name": "duels",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 352,
																			"src": "5308:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_duelInfo_$348_storage_$dyn_storage",
																				"typeString": "struct LP.duelInfo storage ref[] storage ref"
																			}
																		},
																		"id": 679,
																		"indexExpression": {
																			"id": 678,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 667,
																			"src": "5314:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5308:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_duelInfo_$348_storage",
																			"typeString": "struct LP.duelInfo storage ref"
																		}
																	},
																	"id": 680,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5317:10:4",
																	"memberName": "playersNow",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 339,
																	"src": "5308:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5330:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "5308:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 686,
															"nodeType": "IfStatement",
															"src": "5305:61:4",
															"trueBody": {
																"id": 685,
																"nodeType": "Block",
																"src": "5333:33:4",
																"statements": [
																	{
																		"expression": {
																			"id": 683,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 667,
																			"src": "5354:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 665,
																		"id": 684,
																		"nodeType": "Return",
																		"src": "5347:8:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 670,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "5262:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 671,
															"name": "duels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "5266:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_duelInfo_$348_storage_$dyn_storage",
																"typeString": "struct LP.duelInfo storage ref[] storage ref"
															}
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5272:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5266:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5262:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"initializationExpression": {
													"assignments": [
														667
													],
													"declarations": [
														{
															"constant": false,
															"id": 667,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5255:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 688,
															"src": "5250:6:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 666,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "5250:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 669,
													"initialValue": {
														"hexValue": "30",
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5250:10:4"
												},
												"loopExpression": {
													"expression": {
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5280:3:4",
														"subExpression": {
															"id": 674,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "5280:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 676,
													"nodeType": "ExpressionStatement",
													"src": "5280:3:4"
												},
												"nodeType": "ForStatement",
												"src": "5245:132:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "636f756c64206e6f742066696e6420617661696c61626c65206475656c20726f6f6d",
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1c843c22ab705ff871884ba5c31e286000b8cc46dbeb0a4858793b65e0e28044",
																"typeString": "literal_string \"could not find available duel room\""
															},
															"value": "could not find available duel room"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_1c843c22ab705ff871884ba5c31e286000b8cc46dbeb0a4858793b65e0e28044",
																"typeString": "literal_string \"could not find available duel room\""
															}
														],
														"id": 689,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "5387:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5387:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "5387:44:4"
											}
										]
									},
									"functionSelector": "c54b9c78",
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findAvailableDuel",
									"nameLocation": "5185:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5202:2:4"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "5225:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:9:4"
									},
									"scope": 1538,
									"src": "5176:264:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "5476:490:4",
										"statements": [
											{
												"assignments": [
													699
												],
												"declarations": [
													{
														"constant": false,
														"id": 699,
														"mutability": "mutable",
														"name": "currentDuel",
														"nameLocation": "5504:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 731,
														"src": "5487:28:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_duelInfo_$348_storage_ptr",
															"typeString": "struct LP.duelInfo"
														},
														"typeName": {
															"id": 698,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 697,
																"name": "duelInfo",
																"nameLocations": [
																	"5487:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 348,
																"src": "5487:8:4"
															},
															"referencedDeclaration": 348,
															"src": "5487:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_duelInfo_$348_storage_ptr",
																"typeString": "struct LP.duelInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 704,
												"initialValue": {
													"baseExpression": {
														"id": 700,
														"name": "duels",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "5518:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_duelInfo_$348_storage_$dyn_storage",
															"typeString": "struct LP.duelInfo storage ref[] storage ref"
														}
													},
													"id": 703,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 701,
															"name": "findAvailableDuel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "5524:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5524:19:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5518:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_duelInfo_$348_storage",
														"typeString": "struct LP.duelInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5487:57:4"
											},
											{
												"expression": {
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 705,
																"name": "currentDuel",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "5712:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_duelInfo_$348_storage_ptr",
																	"typeString": "struct LP.duelInfo storage pointer"
																}
															},
															"id": 708,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5724:7:4",
															"memberName": "players",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 343,
															"src": "5712:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$2_storage",
																"typeString": "address[2] storage ref"
															}
														},
														"id": 709,
														"indexExpression": {
															"hexValue": "30",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5732:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5712:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 710,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5737:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5741:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5737:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5712:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "5712:35:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 717,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5782:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5786:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5782:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 721,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5802:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LP_$1538",
																		"typeString": "contract LP"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LP_$1538",
																		"typeString": "contract LP"
																	}
																],
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5794:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 719,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5794:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5794:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "duelPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "5809:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 714,
															"name": "LPToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "5761:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$212",
																"typeString": "contract IERC20"
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5769:12:4",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 211,
														"src": "5761:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5761:59:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "5761:59:4"
											},
											{
												"expression": {
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "5835:24:4",
													"subExpression": {
														"expression": {
															"id": 726,
															"name": "currentDuel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "5835:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_duelInfo_$348_storage_ptr",
																"typeString": "struct LP.duelInfo storage pointer"
															}
														},
														"id": 728,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5847:10:4",
														"memberName": "playersNow",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 339,
														"src": "5835:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "5835:24:4"
											}
										]
									},
									"functionSelector": "6893f296",
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enterInDuel",
									"nameLocation": "5455:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5466:2:4"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5476:0:4"
									},
									"scope": 1538,
									"src": "5446:520:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "6023:758:4",
										"statements": [
											{
												"assignments": [
													739
												],
												"declarations": [
													{
														"constant": false,
														"id": 739,
														"mutability": "mutable",
														"name": "currentDuel",
														"nameLocation": "6151:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 766,
														"src": "6134:28:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_duelInfo_$348_storage_ptr",
															"typeString": "struct LP.duelInfo"
														},
														"typeName": {
															"id": 738,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 737,
																"name": "duelInfo",
																"nameLocations": [
																	"6134:8:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 348,
																"src": "6134:8:4"
															},
															"referencedDeclaration": 348,
															"src": "6134:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_duelInfo_$348_storage_ptr",
																"typeString": "struct LP.duelInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 744,
												"initialValue": {
													"baseExpression": {
														"id": 740,
														"name": "duels",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "6165:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_duelInfo_$348_storage_$dyn_storage",
															"typeString": "struct LP.duelInfo storage ref[] storage ref"
														}
													},
													"id": 743,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 741,
															"name": "findAvailableDuel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "6171:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6171:19:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6165:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_duelInfo_$348_storage",
														"typeString": "struct LP.duelInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6134:57:4"
											},
											{
												"assignments": [
													746
												],
												"declarations": [
													{
														"constant": false,
														"id": 746,
														"mutability": "mutable",
														"name": "winnerIndex",
														"nameLocation": "6211:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 766,
														"src": "6203:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 745,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6203:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 747,
												"nodeType": "VariableDeclarationStatement",
												"src": "6203:19:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 748,
															"name": "currentDuel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "6236:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_duelInfo_$348_storage_ptr",
																"typeString": "struct LP.duelInfo storage pointer"
															}
														},
														"id": 749,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6248:18:4",
														"memberName": "totalDamagePlayer0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 345,
														"src": "6236:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 750,
															"name": "currentDuel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "6269:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_duelInfo_$348_storage_ptr",
																"typeString": "struct LP.duelInfo storage pointer"
															}
														},
														"id": 751,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6281:18:4",
														"memberName": "totalDamagePlayer1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 347,
														"src": "6269:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6236:63:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "6347:40:4",
													"statements": [
														{
															"expression": {
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 758,
																	"name": "winnerIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "6361:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6375:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6361:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 761,
															"nodeType": "ExpressionStatement",
															"src": "6361:15:4"
														}
													]
												},
												"id": 763,
												"nodeType": "IfStatement",
												"src": "6232:155:4",
												"trueBody": {
													"id": 757,
													"nodeType": "Block",
													"src": "6301:40:4",
													"statements": [
														{
															"expression": {
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 753,
																	"name": "winnerIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "6315:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6329:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6315:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 756,
															"nodeType": "ExpressionStatement",
															"src": "6315:15:4"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "31",
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6773:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"functionReturnParameters": 736,
												"id": 765,
												"nodeType": "Return",
												"src": "6766:8:4"
											}
										]
									},
									"functionSelector": "dd6ffd37",
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimDuel",
									"nameLocation": "5981:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5990:2:4"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "6014:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6014:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6013:9:4"
									},
									"scope": 1538,
									"src": "5972:809:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 770,
									"mutability": "mutable",
									"name": "bosscounter",
									"nameLocation": "6792:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1538,
									"src": "6787:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 768,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "6787:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 769,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6806:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "6845:599:4",
										"statements": [
											{
												"assignments": [
													775
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "newBoss",
														"nameLocation": "6926:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 851,
														"src": "6908:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_bossSpecs_$337_storage_ptr",
															"typeString": "struct LP.bossSpecs"
														},
														"typeName": {
															"id": 774,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 773,
																"name": "bossSpecs",
																"nameLocations": [
																	"6908:9:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 337,
																"src": "6908:9:4"
															},
															"referencedDeclaration": 337,
															"src": "6908:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_bossSpecs_$337_storage_ptr",
																"typeString": "struct LP.bossSpecs"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 779,
												"initialValue": {
													"baseExpression": {
														"id": 776,
														"name": "bosses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "6936:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_bossSpecs_$337_storage_$",
															"typeString": "mapping(uint256 => struct LP.bossSpecs storage ref)"
														}
													},
													"id": 778,
													"indexExpression": {
														"id": 777,
														"name": "bosscounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "6943:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6936:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_bossSpecs_$337_storage",
														"typeString": "struct LP.bossSpecs storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6908:47:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 780,
														"name": "bosscounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "6970:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6985:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6970:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "6967:97:4",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "6988:76:4",
													"statements": [
														{
															"expression": {
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 783,
																		"name": "newBoss",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 775,
																		"src": "6998:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_bossSpecs_$337_storage_ptr",
																			"typeString": "struct LP.bossSpecs storage pointer"
																		}
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7006:6:4",
																	"memberName": "health",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 332,
																	"src": "6998:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31303030",
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7015:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "6998:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 788,
															"nodeType": "ExpressionStatement",
															"src": "6998:21:4"
														},
														{
															"expression": {
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 789,
																		"name": "newBoss",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 775,
																		"src": "7029:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_bossSpecs_$337_storage_ptr",
																			"typeString": "struct LP.bossSpecs storage pointer"
																		}
																	},
																	"id": 791,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7037:11:4",
																	"memberName": "dodgeChance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 334,
																	"src": "7029:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "3235",
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7051:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_25_by_1",
																		"typeString": "int_const 25"
																	},
																	"value": "25"
																},
																"src": "7029:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 794,
															"nodeType": "ExpressionStatement",
															"src": "7029:24:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 797,
														"name": "bosscounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "7091:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "32",
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7106:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "7091:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "7088:97:4",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "7109:76:4",
													"statements": [
														{
															"expression": {
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 800,
																		"name": "newBoss",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 775,
																		"src": "7119:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_bossSpecs_$337_storage_ptr",
																			"typeString": "struct LP.bossSpecs storage pointer"
																		}
																	},
																	"id": 802,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7127:6:4",
																	"memberName": "health",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 332,
																	"src": "7119:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "32303030",
																	"id": 803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7136:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2000_by_1",
																		"typeString": "int_const 2000"
																	},
																	"value": "2000"
																},
																"src": "7119:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 805,
															"nodeType": "ExpressionStatement",
															"src": "7119:21:4"
														},
														{
															"expression": {
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 806,
																		"name": "newBoss",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 775,
																		"src": "7150:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_bossSpecs_$337_storage_ptr",
																			"typeString": "struct LP.bossSpecs storage pointer"
																		}
																	},
																	"id": 808,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7158:11:4",
																	"memberName": "dodgeChance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 334,
																	"src": "7150:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "3330",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7172:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "7150:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 811,
															"nodeType": "ExpressionStatement",
															"src": "7150:24:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 814,
														"name": "bosscounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "7202:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "33",
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7217:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "7202:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 830,
												"nodeType": "IfStatement",
												"src": "7199:97:4",
												"trueBody": {
													"id": 829,
													"nodeType": "Block",
													"src": "7220:76:4",
													"statements": [
														{
															"expression": {
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 817,
																		"name": "newBoss",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 775,
																		"src": "7230:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_bossSpecs_$337_storage_ptr",
																			"typeString": "struct LP.bossSpecs storage pointer"
																		}
																	},
																	"id": 819,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7238:6:4",
																	"memberName": "health",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 332,
																	"src": "7230:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "33303030",
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7247:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3000_by_1",
																		"typeString": "int_const 3000"
																	},
																	"value": "3000"
																},
																"src": "7230:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 822,
															"nodeType": "ExpressionStatement",
															"src": "7230:21:4"
														},
														{
															"expression": {
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 823,
																		"name": "newBoss",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 775,
																		"src": "7261:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_bossSpecs_$337_storage_ptr",
																			"typeString": "struct LP.bossSpecs storage pointer"
																		}
																	},
																	"id": 825,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7269:11:4",
																	"memberName": "dodgeChance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 334,
																	"src": "7261:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "3430",
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7283:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_40_by_1",
																		"typeString": "int_const 40"
																	},
																	"value": "40"
																},
																"src": "7261:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 828,
															"nodeType": "ExpressionStatement",
															"src": "7261:24:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 831,
														"name": "bosscounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "7312:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "34",
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7327:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "7312:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 847,
												"nodeType": "IfStatement",
												"src": "7309:97:4",
												"trueBody": {
													"id": 846,
													"nodeType": "Block",
													"src": "7330:76:4",
													"statements": [
														{
															"expression": {
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 834,
																		"name": "newBoss",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 775,
																		"src": "7340:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_bossSpecs_$337_storage_ptr",
																			"typeString": "struct LP.bossSpecs storage pointer"
																		}
																	},
																	"id": 836,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7348:6:4",
																	"memberName": "health",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 332,
																	"src": "7340:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "34303030",
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7357:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4000_by_1",
																		"typeString": "int_const 4000"
																	},
																	"value": "4000"
																},
																"src": "7340:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 839,
															"nodeType": "ExpressionStatement",
															"src": "7340:21:4"
														},
														{
															"expression": {
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 840,
																		"name": "newBoss",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 775,
																		"src": "7371:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_bossSpecs_$337_storage_ptr",
																			"typeString": "struct LP.bossSpecs storage pointer"
																		}
																	},
																	"id": 842,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7379:11:4",
																	"memberName": "dodgeChance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 334,
																	"src": "7371:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "3530",
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7393:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_50_by_1",
																		"typeString": "int_const 50"
																	},
																	"value": "50"
																},
																"src": "7371:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 845,
															"nodeType": "ExpressionStatement",
															"src": "7371:24:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "7424:13:4",
													"subExpression": {
														"id": 848,
														"name": "bosscounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "7424:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "7424:13:4"
											}
										]
									},
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createBoss",
									"nameLocation": "6823:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6833:2:4"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6845:0:4"
									},
									"scope": 1538,
									"src": "6814:630:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "7540:16:4",
										"statements": []
									},
									"functionSelector": "7aded47e",
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkOwnershipOfTokenIds",
									"nameLocation": "7459:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "_tokenIds",
												"nameLocation": "7503:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "7484:28:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 853,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7484:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 854,
													"nodeType": "ArrayTypeName",
													"src": "7484:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7483:30:4"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "7534:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 857,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7534:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7533:6:4"
									},
									"scope": 1538,
									"src": "7450:106:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "7620:927:4",
										"statements": [
											{
												"assignments": [
													869
												],
												"declarations": [
													{
														"constant": false,
														"id": 869,
														"mutability": "mutable",
														"name": "Newplayer",
														"nameLocation": "7697:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 955,
														"src": "7682:24:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Player_$317_storage_ptr",
															"typeString": "struct LP.Player"
														},
														"typeName": {
															"id": 868,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 867,
																"name": "Player",
																"nameLocations": [
																	"7682:6:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 317,
																"src": "7682:6:4"
															},
															"referencedDeclaration": 317,
															"src": "7682:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Player_$317_storage_ptr",
																"typeString": "struct LP.Player"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 874,
												"initialValue": {
													"baseExpression": {
														"id": 870,
														"name": "players",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "7709:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
															"typeString": "mapping(address => struct LP.Player storage ref)"
														}
													},
													"id": 873,
													"indexExpression": {
														"expression": {
															"id": 871,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7717:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7721:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7717:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7709:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Player_$317_storage",
														"typeString": "struct LP.Player storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7682:46:4"
											},
											{
												"expression": {
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 875,
															"name": "Newplayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "7917:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Player_$317_storage_ptr",
																"typeString": "struct LP.Player storage pointer"
															}
														},
														"id": 877,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7927:15:4",
														"memberName": "qtyBossDefeated",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 305,
														"src": "7917:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7945:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7917:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "7917:29:4"
											},
											{
												"expression": {
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 881,
															"name": "Newplayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "7956:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Player_$317_storage_ptr",
																"typeString": "struct LP.Player storage pointer"
															}
														},
														"id": 883,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7966:12:4",
														"memberName": "energyFactor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 307,
														"src": "7956:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7981:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7956:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "7956:26:4"
											},
											{
												"expression": {
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 887,
															"name": "Newplayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "7992:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Player_$317_storage_ptr",
																"typeString": "struct LP.Player storage pointer"
															}
														},
														"id": 889,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8002:13:4",
														"memberName": "energyBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 309,
														"src": "7992:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8018:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7992:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "7992:27:4"
											},
											{
												"expression": {
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 893,
															"name": "Newplayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "8029:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Player_$317_storage_ptr",
																"typeString": "struct LP.Player storage pointer"
															}
														},
														"id": 895,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8039:18:4",
														"memberName": "amountTokensInGame",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 311,
														"src": "8029:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8060:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8029:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "8029:32:4"
											},
											{
												"expression": {
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 899,
															"name": "Newplayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "8071:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Player_$317_storage_ptr",
																"typeString": "struct LP.Player storage pointer"
															}
														},
														"id": 901,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8081:26:4",
														"memberName": "lastTimestampClaimedEnergy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 313,
														"src": "8071:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8110:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8071:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "8071:40:4"
											},
											{
												"expression": {
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 905,
															"name": "Newplayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "8121:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Player_$317_storage_ptr",
																"typeString": "struct LP.Player storage pointer"
															}
														},
														"id": 907,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8131:18:4",
														"memberName": "amountTokensInGame",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 311,
														"src": "8121:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 908,
															"name": "_tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "8152:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8162:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8152:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8121:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "8121:47:4"
											},
											{
												"body": {
													"id": 953,
													"nodeType": "Block",
													"src": "8311:230:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 928,
																			"name": "_tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 864,
																			"src": "8356:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 930,
																		"indexExpression": {
																			"id": 929,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 913,
																			"src": "8366:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8356:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 923,
																			"name": "Newplayer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 869,
																			"src": "8325:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Player_$317_storage_ptr",
																				"typeString": "struct LP.Player storage pointer"
																			}
																		},
																		"id": 926,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8335:15:4",
																		"memberName": "playingTokenIds",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 316,
																		"src": "8325:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8351:4:4",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "8325:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8325:44:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 932,
															"nodeType": "ExpressionStatement",
															"src": "8325:44:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "8391:45:4",
																		"subExpression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 936,
																						"name": "_tokenIds",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 864,
																						"src": "8423:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																							"typeString": "uint256[] calldata"
																						}
																					},
																					"id": 938,
																					"indexExpression": {
																						"id": 937,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 913,
																						"src": "8433:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8423:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 934,
																					"name": "Collection",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 281,
																					"src": "8392:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IWomanSeekersNewDawn_$271",
																						"typeString": "contract IWomanSeekersNewDawn"
																					}
																				},
																				"id": 935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8403:19:4",
																				"memberName": "viewNotTransferable",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 263,
																				"src": "8392:30:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (uint256) view external returns (bool)"
																				}
																			},
																			"id": 939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8392:44:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5468697320746f6b656e20616c726561647920696e2067616d65",
																		"id": 941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8438:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_505f8ede6cd48fc2f47a81d280e79d7d2ce95903c145a2f5811078f0a2df5000",
																			"typeString": "literal_string \"This token already in game\""
																		},
																		"value": "This token already in game"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_505f8ede6cd48fc2f47a81d280e79d7d2ce95903c145a2f5811078f0a2df5000",
																			"typeString": "literal_string \"This token already in game\""
																		}
																	],
																	"id": 933,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8383:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8383:84:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 943,
															"nodeType": "ExpressionStatement",
															"src": "8383:84:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 947,
																			"name": "_tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 864,
																			"src": "8511:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 949,
																		"indexExpression": {
																			"id": 948,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 913,
																			"src": "8521:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8511:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "74727565",
																		"id": 950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8525:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 944,
																		"name": "Collection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "8481:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWomanSeekersNewDawn_$271",
																			"typeString": "contract IWomanSeekersNewDawn"
																		}
																	},
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8492:18:4",
																	"memberName": "setNotTransferable",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 270,
																	"src": "8481:29:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bool_$returns$__$",
																		"typeString": "function (uint256,bool) external"
																	}
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8481:49:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 952,
															"nodeType": "ExpressionStatement",
															"src": "8481:49:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 916,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "8284:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 917,
															"name": "_tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "8288:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8298:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8288:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8284:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 954,
												"initializationExpression": {
													"assignments": [
														913
													],
													"declarations": [
														{
															"constant": false,
															"id": 913,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8277:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 954,
															"src": "8269:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 912,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8269:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 915,
													"initialValue": {
														"hexValue": "30",
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8281:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8269:13:4"
												},
												"loopExpression": {
													"expression": {
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8306:3:4",
														"subExpression": {
															"id": 920,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "8306:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 922,
													"nodeType": "ExpressionStatement",
													"src": "8306:3:4"
												},
												"nodeType": "ForStatement",
												"src": "8264:277:4"
											}
										]
									},
									"functionSelector": "2b56c1dd",
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enterInGame",
									"nameLocation": "7571:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "_tokenIds",
												"nameLocation": "7602:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "7583:28:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 862,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7583:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 863,
													"nodeType": "ArrayTypeName",
													"src": "7583:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7582:30:4"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7620:0:4"
									},
									"scope": 1538,
									"src": "7562:985:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "8581:521:4",
										"statements": [
											{
												"body": {
													"id": 987,
													"nodeType": "Block",
													"src": "8810:249:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 977,
																					"name": "players",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 298,
																					"src": "8871:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																						"typeString": "mapping(address => struct LP.Player storage ref)"
																					}
																				},
																				"id": 980,
																				"indexExpression": {
																					"expression": {
																						"id": 978,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "8879:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 979,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "8883:6:4",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "8879:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8871:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Player_$317_storage",
																					"typeString": "struct LP.Player storage ref"
																				}
																			},
																			"id": 981,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8891:15:4",
																			"memberName": "playingTokenIds",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 316,
																			"src": "8871:35:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																				"typeString": "uint256[] storage ref"
																			}
																		},
																		"id": 983,
																		"indexExpression": {
																			"id": 982,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 960,
																			"src": "8907:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8871:38:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8927:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 974,
																		"name": "Collection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "8824:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWomanSeekersNewDawn_$271",
																			"typeString": "contract IWomanSeekersNewDawn"
																		}
																	},
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8835:18:4",
																	"memberName": "setNotTransferable",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 270,
																	"src": "8824:29:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bool_$returns$__$",
																		"typeString": "function (uint256,bool) external"
																	}
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8824:122:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 986,
															"nodeType": "ExpressionStatement",
															"src": "8824:122:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 963,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "8736:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 964,
																	"name": "players",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 298,
																	"src": "8740:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																		"typeString": "mapping(address => struct LP.Player storage ref)"
																	}
																},
																"id": 967,
																"indexExpression": {
																	"expression": {
																		"id": 965,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8748:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8752:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8748:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8740:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Player_$317_storage",
																	"typeString": "struct LP.Player storage ref"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8760:15:4",
															"memberName": "playingTokenIds",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 316,
															"src": "8740:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8776:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8740:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8736:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 988,
												"initializationExpression": {
													"assignments": [
														960
													],
													"declarations": [
														{
															"constant": false,
															"id": 960,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8717:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 988,
															"src": "8709:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 959,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8709:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 962,
													"initialValue": {
														"hexValue": "30",
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8721:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8709:13:4"
												},
												"loopExpression": {
													"expression": {
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8796:3:4",
														"subExpression": {
															"id": 971,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "8796:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 973,
													"nodeType": "ExpressionStatement",
													"src": "8796:3:4"
												},
												"nodeType": "ForStatement",
												"src": "8691:368:4"
											},
											{
												"expression": {
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "9069:26:4",
													"subExpression": {
														"baseExpression": {
															"id": 989,
															"name": "players",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "9076:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																"typeString": "mapping(address => struct LP.Player storage ref)"
															}
														},
														"id": 992,
														"indexExpression": {
															"expression": {
																"id": 990,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9084:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9088:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9084:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9076:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Player_$317_storage",
															"typeString": "struct LP.Player storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "9069:26:4"
											}
										]
									},
									"functionSelector": "b1501f9c",
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leaveGame",
									"nameLocation": "8562:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8571:2:4"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8581:0:4"
									},
									"scope": 1538,
									"src": "8553:549:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "9334:510:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1000,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "9515:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9521:9:4",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "9515:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1002,
																			"name": "players",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 298,
																			"src": "9550:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																				"typeString": "mapping(address => struct LP.Player storage ref)"
																			}
																		},
																		"id": 1005,
																		"indexExpression": {
																			"expression": {
																				"id": 1003,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "9558:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9562:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "9558:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9550:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Player_$317_storage",
																			"typeString": "struct LP.Player storage ref"
																		}
																	},
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9570:26:4",
																	"memberName": "lastTimestampClaimedEnergy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 313,
																	"src": "9550:46:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9599:6:4",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_86400_by_1",
																		"typeString": "int_const 86400"
																	},
																	"value": "1"
																},
																"src": "9550:55:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9515:90:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "747279206c61746572",
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9619:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8f899a6c2bdaa1b7b1a5d66ab55ed752230a4663d7d5450e0fd7ed7710d2b3b5",
																"typeString": "literal_string \"try later\""
															},
															"value": "try later"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8f899a6c2bdaa1b7b1a5d66ab55ed752230a4663d7d5450e0fd7ed7710d2b3b5",
																"typeString": "literal_string \"try later\""
															}
														],
														"id": 999,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9494:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9494:146:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "9494:146:4"
											},
											{
												"expression": {
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1013,
																"name": "players",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "9651:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																	"typeString": "mapping(address => struct LP.Player storage ref)"
																}
															},
															"id": 1016,
															"indexExpression": {
																"expression": {
																	"id": 1014,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9659:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9663:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9659:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9651:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Player_$317_storage",
																"typeString": "struct LP.Player storage ref"
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9671:26:4",
														"memberName": "lastTimestampClaimedEnergy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 313,
														"src": "9651:46:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1018,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9700:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9706:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9700:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9651:64:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "9651:64:4"
											},
											{
												"expression": {
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1022,
																"name": "players",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "9725:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																	"typeString": "mapping(address => struct LP.Player storage ref)"
																}
															},
															"id": 1025,
															"indexExpression": {
																"expression": {
																	"id": 1023,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9733:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9737:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9733:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9725:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Player_$317_storage",
																"typeString": "struct LP.Player storage ref"
															}
														},
														"id": 1026,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9745:13:4",
														"memberName": "energyBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 309,
														"src": "9725:33:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1027,
															"name": "defEnergyAccrual",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "9774:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1028,
																	"name": "players",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 298,
																	"src": "9805:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																		"typeString": "mapping(address => struct LP.Player storage ref)"
																	}
																},
																"id": 1031,
																"indexExpression": {
																	"expression": {
																		"id": 1029,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9813:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9817:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9813:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9805:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Player_$317_storage",
																	"typeString": "struct LP.Player storage ref"
																}
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9825:12:4",
															"memberName": "energyFactor",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 307,
															"src": "9805:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9774:63:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9725:112:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "9725:112:4"
											}
										]
									},
									"functionSelector": "c9ec3950",
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimDailyEnergy",
									"nameLocation": "9308:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9324:2:4"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9334:0:4"
									},
									"scope": 1538,
									"src": "9299:545:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "9908:287:4",
										"statements": [
											{
												"assignments": [
													1043
												],
												"declarations": [
													{
														"constant": false,
														"id": 1043,
														"mutability": "mutable",
														"name": "amountToPayTokens",
														"nameLocation": "9926:17:4",
														"nodeType": "VariableDeclaration",
														"scope": 1068,
														"src": "9918:25:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1042,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9918:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1047,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1044,
														"name": "_amountEnergy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "9946:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1045,
														"name": "energyPriceInTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "9962:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9946:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9918:63:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1051,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10013:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10017:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10013:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1055,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10033:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LP_$1538",
																		"typeString": "contract LP"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LP_$1538",
																		"typeString": "contract LP"
																	}
																],
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10025:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1053,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10025:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10025:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1057,
															"name": "amountToPayTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "10040:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1048,
															"name": "LPToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "9992:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$212",
																"typeString": "contract IERC20"
															}
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10000:12:4",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 211,
														"src": "9992:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9992:66:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "9992:66:4"
											},
											{
												"expression": {
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1060,
																"name": "players",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "10069:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																	"typeString": "mapping(address => struct LP.Player storage ref)"
																}
															},
															"id": 1063,
															"indexExpression": {
																"expression": {
																	"id": 1061,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10077:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10081:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10077:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10069:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Player_$317_storage",
																"typeString": "struct LP.Player storage ref"
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10089:13:4",
														"memberName": "energyBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 309,
														"src": "10069:33:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1065,
														"name": "_amountEnergy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "10106:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10069:50:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "10069:50:4"
											}
										]
									},
									"functionSelector": "c178d83d",
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyEnergyForTokens",
									"nameLocation": "9859:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "_amountEnergy",
												"nameLocation": "9886:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "9878:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9878:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9877:23:4"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9908:0:4"
									},
									"scope": 1538,
									"src": "9850:345:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "46475d55c3bc13c229507a0915f795fd03b23601512cc1aeae9e0bf41a4075d8",
									"id": 1078,
									"name": "BossDefeated",
									"nameLocation": "10211:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "10241:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "10224:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10224:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"indexed": true,
												"mutability": "mutable",
												"name": "bossLevel",
												"nameLocation": "10266:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "10249:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10249:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"indexed": false,
												"mutability": "mutable",
												"name": "damages",
												"nameLocation": "10287:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "10277:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1074,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10277:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1075,
													"nodeType": "ArrayTypeName",
													"src": "10277:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10223:72:4"
									},
									"src": "10205:91:4"
								},
								{
									"body": {
										"id": 1202,
										"nodeType": "Block",
										"src": "10363:1316:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1084,
																		"name": "players",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 298,
																		"src": "10390:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																			"typeString": "mapping(address => struct LP.Player storage ref)"
																		}
																	},
																	"id": 1087,
																	"indexExpression": {
																		"expression": {
																			"id": 1085,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10398:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1086,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10402:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10398:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10390:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Player_$317_storage",
																		"typeString": "struct LP.Player storage ref"
																	}
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10410:15:4",
																"memberName": "qtyBossDefeated",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 305,
																"src": "10390:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1089,
																"name": "_bossLevel",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "10428:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10390:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f7527726520616c72656164792062656174656e207468697320626f7373",
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10440:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b9da6f13e385724190f2ee96eb70fff1ae5199ea32a27a3ac2a614b36849b0",
																"typeString": "literal_string \"you're already beaten this boss\""
															},
															"value": "you're already beaten this boss"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b9da6f13e385724190f2ee96eb70fff1ae5199ea32a27a3ac2a614b36849b0",
																"typeString": "literal_string \"you're already beaten this boss\""
															}
														],
														"id": 1083,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10382:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10382:92:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "10382:92:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1095,
																		"name": "players",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 298,
																		"src": "10663:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																			"typeString": "mapping(address => struct LP.Player storage ref)"
																		}
																	},
																	"id": 1098,
																	"indexExpression": {
																		"expression": {
																			"id": 1096,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10671:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10675:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10671:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10663:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Player_$317_storage",
																		"typeString": "struct LP.Player storage ref"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10683:13:4",
																"memberName": "energyBalance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 309,
																"src": "10663:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1100,
																		"name": "bosses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 303,
																		"src": "10700:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_bossSpecs_$337_storage_$",
																			"typeString": "mapping(uint256 => struct LP.bossSpecs storage ref)"
																		}
																	},
																	"id": 1102,
																	"indexExpression": {
																		"id": 1101,
																		"name": "_bossLevel",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1080,
																		"src": "10707:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10700:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_bossSpecs_$337_storage",
																		"typeString": "struct LP.bossSpecs storage ref"
																	}
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10719:6:4",
																"memberName": "health",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 332,
																"src": "10700:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10663:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f7520646f6e2774206861766520656e6f75676820656e6572677920666f72207468697320626f7373",
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10727:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4be4fc7915517655f0bfc138bd013d6cd00655c1ed4b0cacb7fb403daf653f31",
																"typeString": "literal_string \"you don't have enough energy for this boss\""
															},
															"value": "you don't have enough energy for this boss"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4be4fc7915517655f0bfc138bd013d6cd00655c1ed4b0cacb7fb403daf653f31",
																"typeString": "literal_string \"you don't have enough energy for this boss\""
															}
														],
														"id": 1094,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10655:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10655:117:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "10655:117:4"
											},
											{
												"assignments": [
													1109
												],
												"declarations": [
													{
														"constant": false,
														"id": 1109,
														"mutability": "mutable",
														"name": "totalDamage",
														"nameLocation": "10791:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 1202,
														"src": "10786:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1108,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10786:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1110,
												"nodeType": "VariableDeclarationStatement",
												"src": "10786:16:4"
											},
											{
												"assignments": [
													1115
												],
												"declarations": [
													{
														"constant": false,
														"id": 1115,
														"mutability": "mutable",
														"name": "damages",
														"nameLocation": "10834:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1202,
														"src": "10817:24:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1113,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10817:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1114,
															"nodeType": "ArrayTypeName",
															"src": "10817:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1121,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "33",
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10858:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															}
														],
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "10844:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1116,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10848:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1117,
															"nodeType": "ArrayTypeName",
															"src": "10848:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10844:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10817:43:4"
											},
											{
												"body": {
													"id": 1156,
													"nodeType": "Block",
													"src": "10911:180:4",
													"statements": [
														{
															"assignments": [
																1133
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1133,
																	"mutability": "mutable",
																	"name": "damage",
																	"nameLocation": "10938:6:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1156,
																	"src": "10933:11:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1132,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "10933:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1145,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"hexValue": "3130",
																				"id": 1135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10954:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				}
																			],
																			"id": 1134,
																			"name": "random",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 429,
																			"src": "10947:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) view returns (uint256)"
																			}
																		},
																		"id": 1136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10947:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1137,
																		"name": "defaultDamage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 293,
																		"src": "10960:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10947:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1139,
																			"name": "players",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 298,
																			"src": "10976:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																				"typeString": "mapping(address => struct LP.Player storage ref)"
																			}
																		},
																		"id": 1142,
																		"indexExpression": {
																			"expression": {
																				"id": 1140,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "10984:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10988:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "10984:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10976:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Player_$317_storage",
																			"typeString": "struct LP.Player storage ref"
																		}
																	},
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10996:12:4",
																	"memberName": "energyFactor",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 307,
																	"src": "10976:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10947:61:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10933:75:4"
														},
														{
															"expression": {
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1146,
																		"name": "damages",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "11026:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1148,
																	"indexExpression": {
																		"id": 1147,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1123,
																		"src": "11034:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11026:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1149,
																	"name": "damage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "11039:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11026:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1151,
															"nodeType": "ExpressionStatement",
															"src": "11026:19:4"
														},
														{
															"expression": {
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1152,
																	"name": "totalDamage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "11059:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1153,
																	"name": "damage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "11074:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11059:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1155,
															"nodeType": "ExpressionStatement",
															"src": "11059:21:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1126,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "10888:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "32",
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10893:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "10888:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1157,
												"initializationExpression": {
													"assignments": [
														1123
													],
													"declarations": [
														{
															"constant": false,
															"id": 1123,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10881:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1157,
															"src": "10876:6:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1122,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "10876:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1125,
													"initialValue": {
														"hexValue": "30",
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10885:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10876:10:4"
												},
												"loopExpression": {
													"expression": {
														"id": 1130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10896:4:4",
														"subExpression": {
															"id": 1129,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "10896:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1131,
													"nodeType": "ExpressionStatement",
													"src": "10896:4:4"
												},
												"nodeType": "ForStatement",
												"src": "10871:220:4"
											},
											{
												"expression": {
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1158,
																"name": "bosses",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "11101:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_bossSpecs_$337_storage_$",
																	"typeString": "mapping(uint256 => struct LP.bossSpecs storage ref)"
																}
															},
															"id": 1160,
															"indexExpression": {
																"id": 1159,
																"name": "_bossLevel",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "11108:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11101:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_bossSpecs_$337_storage",
																"typeString": "struct LP.bossSpecs storage ref"
															}
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11120:6:4",
														"memberName": "health",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 332,
														"src": "11101:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1162,
														"name": "totalDamage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "11130:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11101:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "11101:40:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1165,
																"name": "bosses",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "11231:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_bossSpecs_$337_storage_$",
																	"typeString": "mapping(uint256 => struct LP.bossSpecs storage ref)"
																}
															},
															"id": 1167,
															"indexExpression": {
																"id": 1166,
																"name": "_bossLevel",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "11238:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11231:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_bossSpecs_$337_storage",
																"typeString": "struct LP.bossSpecs storage ref"
															}
														},
														"id": 1168,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11250:6:4",
														"memberName": "health",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 332,
														"src": "11231:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11260:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11231:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1200,
													"nodeType": "Block",
													"src": "11493:179:4",
													"statements": [
														{
															"expression": {
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1187,
																			"name": "players",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 298,
																			"src": "11589:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																				"typeString": "mapping(address => struct LP.Player storage ref)"
																			}
																		},
																		"id": 1190,
																		"indexExpression": {
																			"expression": {
																				"id": 1188,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "11597:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11601:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "11597:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11589:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Player_$317_storage",
																			"typeString": "struct LP.Player storage ref"
																		}
																	},
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "11609:13:4",
																	"memberName": "energyBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 309,
																	"src": "11589:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1192,
																				"name": "bosses",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 303,
																				"src": "11626:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_bossSpecs_$337_storage_$",
																					"typeString": "mapping(uint256 => struct LP.bossSpecs storage ref)"
																				}
																			},
																			"id": 1194,
																			"indexExpression": {
																				"id": 1193,
																				"name": "_bossLevel",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1080,
																				"src": "11633:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11626:18:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_bossSpecs_$337_storage",
																				"typeString": "struct LP.bossSpecs storage ref"
																			}
																		},
																		"id": 1195,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11645:12:4",
																		"memberName": "attackDamage",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 336,
																		"src": "11626:31:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "33",
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11659:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_3_by_1",
																			"typeString": "int_const 3"
																		},
																		"value": "3"
																	},
																	"src": "11626:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11589:71:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1199,
															"nodeType": "ExpressionStatement",
															"src": "11589:71:4"
														}
													]
												},
												"id": 1201,
												"nodeType": "IfStatement",
												"src": "11228:444:4",
												"trueBody": {
													"id": 1186,
													"nodeType": "Block",
													"src": "11263:224:4",
													"statements": [
														{
															"expression": {
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1171,
																			"name": "players",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 298,
																			"src": "11351:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																				"typeString": "mapping(address => struct LP.Player storage ref)"
																			}
																		},
																		"id": 1174,
																		"indexExpression": {
																			"expression": {
																				"id": 1172,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "11359:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11363:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "11359:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11351:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Player_$317_storage",
																			"typeString": "struct LP.Player storage ref"
																		}
																	},
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "11371:15:4",
																	"memberName": "qtyBossDefeated",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 305,
																	"src": "11351:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1176,
																	"name": "_bossLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "11389:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11351:48:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1178,
															"nodeType": "ExpressionStatement",
															"src": "11351:48:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1180,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "11431:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11435:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "11431:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1182,
																		"name": "_bossLevel",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1080,
																		"src": "11443:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1183,
																		"name": "damages",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "11455:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 1179,
																	"name": "BossDefeated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "11418:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,uint256[] memory)"
																	}
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11418:45:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1185,
															"nodeType": "EmitStatement",
															"src": "11413:50:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "2aa04a66",
									"id": 1203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fightWithBoss",
									"nameLocation": "10321:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "_bossLevel",
												"nameLocation": "10343:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "10335:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10335:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10334:20:4"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10363:0:4"
									},
									"scope": 1538,
									"src": "10312:1367:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "11777:236:4",
										"statements": [
											{
												"body": {
													"id": 1235,
													"nodeType": "Block",
													"src": "11841:145:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1224,
																				"name": "_tokenIds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1206,
																				"src": "11905:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1226,
																			"indexExpression": {
																				"id": 1225,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1212,
																				"src": "11915:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11905:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1222,
																			"name": "Collection",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 281,
																			"src": "11886:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IWomanSeekersNewDawn_$271",
																				"typeString": "contract IWomanSeekersNewDawn"
																			}
																		},
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11897:7:4",
																		"memberName": "ownerOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 226,
																		"src": "11886:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view external returns (address)"
																		}
																	},
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11886:32:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"expression": {
																		"id": 1228,
																		"name": "tx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967270,
																		"src": "11922:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_transaction",
																			"typeString": "tx"
																		}
																	},
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11925:6:4",
																	"memberName": "origin",
																	"nodeType": "MemberAccess",
																	"src": "11922:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "11886:45:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1234,
															"nodeType": "IfStatement",
															"src": "11883:93:4",
															"trueBody": {
																"id": 1233,
																"nodeType": "Block",
																"src": "11933:43:4",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 1231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11957:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 1210,
																		"id": 1232,
																		"nodeType": "Return",
																		"src": "11950:12:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1215,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "11805:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1216,
															"name": "_tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "11809:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11819:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11809:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11805:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1236,
												"initializationExpression": {
													"assignments": [
														1212
													],
													"declarations": [
														{
															"constant": false,
															"id": 1212,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11798:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1236,
															"src": "11793:6:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1211,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "11793:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1214,
													"initialValue": {
														"hexValue": "30",
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11802:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11793:10:4"
												},
												"loopExpression": {
													"expression": {
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11827:3:4",
														"subExpression": {
															"id": 1219,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "11827:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1221,
													"nodeType": "ExpressionStatement",
													"src": "11827:3:4"
												},
												"nodeType": "ForStatement",
												"src": "11788:198:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12002:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1210,
												"id": 1238,
												"nodeType": "Return",
												"src": "11995:11:4"
											}
										]
									},
									"functionSelector": "bece83e4",
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkOwnershipOfTokens",
									"nameLocation": "11700:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "_tokenIds",
												"nameLocation": "11740:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "11723:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1204,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11723:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1205,
													"nodeType": "ArrayTypeName",
													"src": "11723:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11722:28:4"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "11771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11770:6:4"
									},
									"scope": 1538,
									"src": "11691:322:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d175810d",
									"id": 1244,
									"mutability": "mutable",
									"name": "isTokenIdClaimed",
									"nameLocation": "12051:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 1538,
									"src": "12019:48:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 1243,
										"keyType": {
											"id": 1241,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12027:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "12019:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueType": {
											"id": 1242,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "12038:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1276,
										"nodeType": "Block",
										"src": "12162:202:4",
										"statements": [
											{
												"body": {
													"id": 1272,
													"nodeType": "Block",
													"src": "12232:101:4",
													"statements": [
														{
															"condition": {
																"baseExpression": {
																	"id": 1263,
																	"name": "isTokenIdClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1244,
																	"src": "12248:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 1267,
																"indexExpression": {
																	"baseExpression": {
																		"id": 1264,
																		"name": "_tokenIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1247,
																		"src": "12265:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1266,
																	"indexExpression": {
																		"id": 1265,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1253,
																		"src": "12275:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12265:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12248:30:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1271,
															"nodeType": "IfStatement",
															"src": "12245:78:4",
															"trueBody": {
																"id": 1270,
																"nodeType": "Block",
																"src": "12281:42:4",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 1268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12305:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 1251,
																		"id": 1269,
																		"nodeType": "Return",
																		"src": "12298:11:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1256,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "12196:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1257,
															"name": "_tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "12200:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12210:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12200:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12196:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1273,
												"initializationExpression": {
													"assignments": [
														1253
													],
													"declarations": [
														{
															"constant": false,
															"id": 1253,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12189:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1273,
															"src": "12184:6:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1252,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "12184:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1255,
													"initialValue": {
														"hexValue": "30",
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12193:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12184:10:4"
												},
												"loopExpression": {
													"expression": {
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12218:3:4",
														"subExpression": {
															"id": 1260,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "12218:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1262,
													"nodeType": "ExpressionStatement",
													"src": "12218:3:4"
												},
												"nodeType": "ForStatement",
												"src": "12179:154:4"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12349:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 1251,
												"id": 1275,
												"nodeType": "Return",
												"src": "12342:12:4"
											}
										]
									},
									"functionSelector": "e6f4cab2",
									"id": 1277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isTokensClaimedTreasures",
									"nameLocation": "12083:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "_tokenIds",
												"nameLocation": "12125:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "12108:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1245,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12108:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1246,
													"nodeType": "ArrayTypeName",
													"src": "12108:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12107:28:4"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "12156:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12156:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12155:6:4"
									},
									"scope": 1538,
									"src": "12074:290:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "12513:1093:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1284,
																		"name": "players",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 298,
																		"src": "12853:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																			"typeString": "mapping(address => struct LP.Player storage ref)"
																		}
																	},
																	"id": 1287,
																	"indexExpression": {
																		"expression": {
																			"id": 1285,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "12861:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12865:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "12861:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12853:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Player_$317_storage",
																		"typeString": "struct LP.Player storage ref"
																	}
																},
																"id": 1288,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12873:15:4",
																"memberName": "qtyBossDefeated",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 305,
																"src": "12853:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "33",
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12892:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "12853:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f75206861766520746f2064656665617420616c6c20626f73736573",
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12895:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2b1c12a23f52f354130f8004acf33f776b073263d72bf83489fb7b9e9f4ac1e",
																"typeString": "literal_string \"you have to defeat all bosses\""
															},
															"value": "you have to defeat all bosses"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2b1c12a23f52f354130f8004acf33f776b073263d72bf83489fb7b9e9f4ac1e",
																"typeString": "literal_string \"you have to defeat all bosses\""
															}
														],
														"id": 1283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12845:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12845:82:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "12845:82:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1296,
																	"name": "_tokenIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "12968:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																],
																"id": 1295,
																"name": "checkOwnershipOfTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1240,
																"src": "12944:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (uint256[] memory) view returns (bool)"
																}
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12944:34:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f75277265206e6f74206f776e6572206f6620746865736520746f6b656e496473",
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12980:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b23db9d487ed652e0c0f36b6b0ad1ad36aa9b02edc831013d62dbfc2edbdfa26",
																"typeString": "literal_string \"you're not owner of these tokenIds\""
															},
															"value": "you're not owner of these tokenIds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b23db9d487ed652e0c0f36b6b0ad1ad36aa9b02edc831013d62dbfc2edbdfa26",
																"typeString": "literal_string \"you're not owner of these tokenIds\""
															}
														],
														"id": 1294,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12936:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12936:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "12936:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "13034:37:4",
															"subExpression": {
																"arguments": [
																	{
																		"id": 1303,
																		"name": "_tokenIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1280,
																		"src": "13061:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 1302,
																	"name": "isTokensClaimedTreasures",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "13035:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bool_$",
																		"typeString": "function (uint256[] memory) view returns (bool)"
																	}
																},
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13035:36:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f6b656e73207765726520636c61696d6564",
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13073:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e433fbb6dc69f6fab1c5f5109768269d5ae7ef7a0fb6036cb1ba39964ad3df28",
																"typeString": "literal_string \"tokens were claimed\""
															},
															"value": "tokens were claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e433fbb6dc69f6fab1c5f5109768269d5ae7ef7a0fb6036cb1ba39964ad3df28",
																"typeString": "literal_string \"tokens were claimed\""
															}
														],
														"id": 1301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13026:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13026:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1308,
												"nodeType": "ExpressionStatement",
												"src": "13026:69:4"
											},
											{
												"assignments": [
													1310
												],
												"declarations": [
													{
														"constant": false,
														"id": 1310,
														"mutability": "mutable",
														"name": "totalMsgValue",
														"nameLocation": "13112:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 1382,
														"src": "13107:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1309,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13107:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1311,
												"nodeType": "VariableDeclarationStatement",
												"src": "13107:18:4"
											},
											{
												"body": {
													"id": 1372,
													"nodeType": "Block",
													"src": "13180:336:4",
													"statements": [
														{
															"expression": {
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1323,
																		"name": "isTokenIdClaimed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1244,
																		"src": "13195:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																			"typeString": "mapping(uint256 => bool)"
																		}
																	},
																	"id": 1327,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1324,
																			"name": "_tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1280,
																			"src": "13212:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1326,
																		"indexExpression": {
																			"id": 1325,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1313,
																			"src": "13222:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13212:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "13195:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13228:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "13195:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1330,
															"nodeType": "ExpressionStatement",
															"src": "13195:37:4"
														},
														{
															"assignments": [
																1332
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1332,
																	"mutability": "mutable",
																	"name": "chance",
																	"nameLocation": "13251:6:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1372,
																	"src": "13246:11:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1331,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "13246:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1336,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "3130",
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13267:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		}
																	],
																	"id": 1333,
																	"name": "random",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "13260:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13260:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13246:24:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1337,
																	"name": "chance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1332,
																	"src": "13284:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13293:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "13284:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1370,
																"nodeType": "Block",
																"src": "13438:77:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1363,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "13477:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_LP_$1538",
																								"typeString": "contract LP"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_LP_$1538",
																								"typeString": "contract LP"
																							}
																						],
																						"id": 1362,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "13469:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1361,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "13469:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1364,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13469:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 1365,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "13484:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1366,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "13488:6:4",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "13484:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "3130303030",
																					"id": 1367,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13496:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					}
																				],
																				"expression": {
																					"id": 1358,
																					"name": "LPToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 284,
																					"src": "13448:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$212",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1360,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13456:12:4",
																				"memberName": "transferFrom",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 211,
																				"src": "13448:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13448:54:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1369,
																		"nodeType": "ExpressionStatement",
																		"src": "13448:54:4"
																	}
																]
															},
															"id": 1371,
															"nodeType": "IfStatement",
															"src": "13281:234:4",
															"trueBody": {
																"id": 1357,
																"nodeType": "Block",
																"src": "13296:136:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1340,
																				"name": "totalMsgValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1310,
																				"src": "13310:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1348,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1345,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"expression": {
																										"id": 1341,
																										"name": "Collection",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 281,
																										"src": "13328:10:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_IWomanSeekersNewDawn_$271",
																											"typeString": "contract IWomanSeekersNewDawn"
																										}
																									},
																									"id": 1342,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "13339:11:4",
																									"memberName": "viewNFTCost",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 256,
																									"src": "13328:22:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																										"typeString": "function () view external returns (uint256)"
																									}
																								},
																								"id": 1343,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13328:24:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"hexValue": "3230",
																								"id": 1344,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "13355:2:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								},
																								"value": "20"
																							},
																							"src": "13328:29:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1346,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "13327:31:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "313030",
																					"id": 1347,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13360:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"src": "13327:36:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13310:53:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1350,
																		"nodeType": "ExpressionStatement",
																		"src": "13310:53:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "31",
																					"id": 1354,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13406:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					}
																				],
																				"expression": {
																					"id": 1351,
																					"name": "Collection",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 281,
																					"src": "13382:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IWomanSeekersNewDawn_$271",
																						"typeString": "contract IWomanSeekersNewDawn"
																					}
																				},
																				"id": 1353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13393:12:4",
																				"memberName": "mintFromGame",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 251,
																				"src": "13382:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) external"
																				}
																			},
																			"id": 1355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13382:26:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1356,
																		"nodeType": "ExpressionStatement",
																		"src": "13382:26:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1316,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "13153:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1317,
															"name": "_tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "13157:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13167:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13157:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13153:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1373,
												"initializationExpression": {
													"assignments": [
														1313
													],
													"declarations": [
														{
															"constant": false,
															"id": 1313,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "13146:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1373,
															"src": "13141:6:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1312,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "13141:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1315,
													"initialValue": {
														"hexValue": "30",
														"id": 1314,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13150:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "13141:10:4"
												},
												"loopExpression": {
													"expression": {
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "13175:3:4",
														"subExpression": {
															"id": 1320,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "13175:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1322,
													"nodeType": "ExpressionStatement",
													"src": "13175:3:4"
												},
												"nodeType": "ForStatement",
												"src": "13136:380:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1375,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "13535:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13539:5:4",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "13535:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1377,
																"name": "totalMsgValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "13548:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13535:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e73756666696369656e742066756e6473",
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13563:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
																"typeString": "literal_string \"insufficient funds\""
															},
															"value": "insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
																"typeString": "literal_string \"insufficient funds\""
															}
														],
														"id": 1374,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13527:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13527:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "13527:57:4"
											}
										]
									},
									"functionSelector": "c724cfd3",
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFinalTreasures",
									"nameLocation": "12451:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "_tokenIds",
												"nameLocation": "12486:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "12469:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1278,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12469:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1279,
													"nodeType": "ArrayTypeName",
													"src": "12469:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12468:28:4"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12513:0:4"
									},
									"scope": 1538,
									"src": "12442:1164:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1392,
										"nodeType": "Block",
										"src": "13653:56:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13699:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"id": 1386,
															"name": "Collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "13675:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWomanSeekersNewDawn_$271",
																"typeString": "contract IWomanSeekersNewDawn"
															}
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13686:12:4",
														"memberName": "mintFromGame",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 251,
														"src": "13675:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13675:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1391,
												"nodeType": "ExpressionStatement",
												"src": "13675:26:4"
											}
										]
									},
									"functionSelector": "fcefb2b6",
									"id": 1393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testMintDirectFromGame",
									"nameLocation": "13621:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13643:2:4"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13653:0:4"
									},
									"scope": 1538,
									"src": "13612:97:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6b7c7264",
									"id": 1399,
									"mutability": "mutable",
									"name": "RiseClaimMap",
									"nameLocation": "14007:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1538,
									"src": "13971:48:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bool_$5_storage_$",
										"typeString": "mapping(address => bool[5])"
									},
									"typeName": {
										"id": 1398,
										"keyType": {
											"id": 1394,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "13980:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "13971:28:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bool_$5_storage_$",
											"typeString": "mapping(address => bool[5])"
										},
										"valueType": {
											"baseType": {
												"id": 1395,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "13991:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"id": 1397,
											"length": {
												"hexValue": "35",
												"id": 1396,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "13996:1:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_5_by_1",
													"typeString": "int_const 5"
												},
												"value": "5"
											},
											"nodeType": "ArrayTypeName",
											"src": "13991:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bool_$5_storage_ptr",
												"typeString": "bool[5]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "14252:812:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1405,
																		"name": "players",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 298,
																		"src": "14275:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																			"typeString": "mapping(address => struct LP.Player storage ref)"
																		}
																	},
																	"id": 1408,
																	"indexExpression": {
																		"expression": {
																			"id": 1406,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "14283:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14287:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "14283:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14275:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Player_$317_storage",
																		"typeString": "struct LP.Player storage ref"
																	}
																},
																"id": 1409,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14295:15:4",
																"memberName": "qtyBossDefeated",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 305,
																"src": "14275:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1410,
																"name": "_orderPosition",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1401,
																"src": "14314:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14275:53:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6265666f726520796f75206e6565642062656174206e656365737361727920626f7373",
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14330:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_339208c11585afd5384077c9574a76ccd282609899e98140014d374ff38c0484",
																"typeString": "literal_string \"before you need beat necessary boss\""
															},
															"value": "before you need beat necessary boss"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_339208c11585afd5384077c9574a76ccd282609899e98140014d374ff38c0484",
																"typeString": "literal_string \"before you need beat necessary boss\""
															}
														],
														"id": 1404,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14267:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14267:101:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "14267:101:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "14710:43:4",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1416,
																		"name": "RiseClaimMap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1399,
																		"src": "14711:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bool_$5_storage_$",
																			"typeString": "mapping(address => bool[5] storage ref)"
																		}
																	},
																	"id": 1419,
																	"indexExpression": {
																		"expression": {
																			"id": 1417,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "14724:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14728:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "14724:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14711:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bool_$5_storage",
																		"typeString": "bool[5] storage ref"
																	}
																},
																"id": 1423,
																"indexExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1420,
																		"name": "_orderPosition",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1401,
																		"src": "14736:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14751:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "14736:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14711:42:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f7527726520616c726561647920636c61696d6564207468697320656666656374",
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14755:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0939ab694db9cba523fa19a4866cc6fe9bcef54a022b3b70116dfe24e56c7639",
																"typeString": "literal_string \"you're already claimed this effect\""
															},
															"value": "you're already claimed this effect"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0939ab694db9cba523fa19a4866cc6fe9bcef54a022b3b70116dfe24e56c7639",
																"typeString": "literal_string \"you're already claimed this effect\""
															}
														],
														"id": 1415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14702:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14702:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1427,
												"nodeType": "ExpressionStatement",
												"src": "14702:90:4"
											},
											{
												"assignments": [
													1429
												],
												"declarations": [
													{
														"constant": false,
														"id": 1429,
														"mutability": "mutable",
														"name": "chance",
														"nameLocation": "14807:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1467,
														"src": "14802:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1428,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "14802:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1433,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3130",
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14823:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"id": 1430,
														"name": "random",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "14816:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14816:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14802:24:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1434,
														"name": "chance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "14841:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "32",
														"id": 1435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14850:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "14841:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1465,
													"nodeType": "Block",
													"src": "14935:128:4",
													"statements": [
														{
															"expression": {
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1446,
																			"name": "players",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 298,
																			"src": "14954:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																				"typeString": "mapping(address => struct LP.Player storage ref)"
																			}
																		},
																		"id": 1449,
																		"indexExpression": {
																			"expression": {
																				"id": 1447,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "14962:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "14966:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "14962:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14954:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Player_$317_storage",
																			"typeString": "struct LP.Player storage ref"
																		}
																	},
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "14974:12:4",
																	"memberName": "energyFactor",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 307,
																	"src": "14954:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14990:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "14954:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1453,
															"nodeType": "ExpressionStatement",
															"src": "14954:38:4"
														},
														{
															"expression": {
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1454,
																			"name": "RiseClaimMap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1399,
																			"src": "15007:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bool_$5_storage_$",
																				"typeString": "mapping(address => bool[5] storage ref)"
																			}
																		},
																		"id": 1460,
																		"indexExpression": {
																			"expression": {
																				"id": 1455,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "15020:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "15024:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "15020:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15007:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bool_$5_storage",
																			"typeString": "bool[5] storage ref"
																		}
																	},
																	"id": 1461,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1457,
																			"name": "_orderPosition",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1401,
																			"src": "15032:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15047:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "15032:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "15007:42:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15052:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "15007:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1464,
															"nodeType": "ExpressionStatement",
															"src": "15007:49:4"
														}
													]
												},
												"id": 1466,
												"nodeType": "IfStatement",
												"src": "14838:225:4",
												"trueBody": {
													"id": 1445,
													"nodeType": "Block",
													"src": "14853:76:4",
													"statements": [
														{
															"expression": {
																"id": 1443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1437,
																			"name": "players",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 298,
																			"src": "14867:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																				"typeString": "mapping(address => struct LP.Player storage ref)"
																			}
																		},
																		"id": 1440,
																		"indexExpression": {
																			"expression": {
																				"id": 1438,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "14875:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "14879:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "14875:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14867:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Player_$317_storage",
																			"typeString": "struct LP.Player storage ref"
																		}
																	},
																	"id": 1441,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "14887:12:4",
																	"memberName": "energyFactor",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 307,
																	"src": "14867:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14903:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "14867:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1444,
															"nodeType": "ExpressionStatement",
															"src": "14867:38:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "39850c6b",
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimMysticEffect",
									"nameLocation": "14206:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "_orderPosition",
												"nameLocation": "14229:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "14224:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14224:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14223:21:4"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14252:0:4"
									},
									"scope": 1538,
									"src": "14197:867:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1536,
										"nodeType": "Block",
										"src": "15125:894:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1474,
																		"name": "players",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 298,
																		"src": "15208:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																			"typeString": "mapping(address => struct LP.Player storage ref)"
																		}
																	},
																	"id": 1477,
																	"indexExpression": {
																		"expression": {
																			"id": 1475,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "15216:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15220:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "15216:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15208:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Player_$317_storage",
																		"typeString": "struct LP.Player storage ref"
																	}
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15228:15:4",
																"memberName": "qtyBossDefeated",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 305,
																"src": "15208:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1479,
																"name": "_orderPosition",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "15247:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15208:53:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6265666f726520796f75206e6565642062656174206e656365737361727920626f7373",
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15263:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_339208c11585afd5384077c9574a76ccd282609899e98140014d374ff38c0484",
																"typeString": "literal_string \"before you need beat necessary boss\""
															},
															"value": "before you need beat necessary boss"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_339208c11585afd5384077c9574a76ccd282609899e98140014d374ff38c0484",
																"typeString": "literal_string \"before you need beat necessary boss\""
															}
														],
														"id": 1473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15200:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15200:101:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "15200:101:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "15643:43:4",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1485,
																		"name": "RiseClaimMap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1399,
																		"src": "15644:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bool_$5_storage_$",
																			"typeString": "mapping(address => bool[5] storage ref)"
																		}
																	},
																	"id": 1488,
																	"indexExpression": {
																		"expression": {
																			"id": 1486,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "15657:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15661:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "15657:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15644:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bool_$5_storage",
																		"typeString": "bool[5] storage ref"
																	}
																},
																"id": 1492,
																"indexExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1489,
																		"name": "_orderPosition",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1470,
																		"src": "15669:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15684:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "15669:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15644:42:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f7527726520616c726561647920636c61696d6564207468697320626f6e7573",
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15688:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ac6ed9a7880861c81f7087f376773afba11c96d486a34846caade468b7bb4804",
																"typeString": "literal_string \"you're already claimed this bonus\""
															},
															"value": "you're already claimed this bonus"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ac6ed9a7880861c81f7087f376773afba11c96d486a34846caade468b7bb4804",
																"typeString": "literal_string \"you're already claimed this bonus\""
															}
														],
														"id": 1484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15635:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15635:89:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1496,
												"nodeType": "ExpressionStatement",
												"src": "15635:89:4"
											},
											{
												"assignments": [
													1498
												],
												"declarations": [
													{
														"constant": false,
														"id": 1498,
														"mutability": "mutable",
														"name": "chance",
														"nameLocation": "15740:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1536,
														"src": "15735:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1497,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "15735:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1502,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3130",
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15756:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"id": 1499,
														"name": "random",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "15749:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15749:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15735:24:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1503,
														"name": "chance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "15774:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "32",
														"id": 1504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15783:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "15774:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1523,
													"nodeType": "Block",
													"src": "15868:76:4",
													"statements": [
														{
															"expression": {
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1515,
																			"name": "players",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 298,
																			"src": "15887:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																				"typeString": "mapping(address => struct LP.Player storage ref)"
																			}
																		},
																		"id": 1518,
																		"indexExpression": {
																			"expression": {
																				"id": 1516,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "15895:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "15899:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "15895:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15887:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Player_$317_storage",
																			"typeString": "struct LP.Player storage ref"
																		}
																	},
																	"id": 1519,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "15907:13:4",
																	"memberName": "energyBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 309,
																	"src": "15887:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31303030",
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15924:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "15887:41:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1522,
															"nodeType": "ExpressionStatement",
															"src": "15887:41:4"
														}
													]
												},
												"id": 1524,
												"nodeType": "IfStatement",
												"src": "15771:173:4",
												"trueBody": {
													"id": 1514,
													"nodeType": "Block",
													"src": "15786:76:4",
													"statements": [
														{
															"expression": {
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1506,
																			"name": "players",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 298,
																			"src": "15800:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$317_storage_$",
																				"typeString": "mapping(address => struct LP.Player storage ref)"
																			}
																		},
																		"id": 1509,
																		"indexExpression": {
																			"expression": {
																				"id": 1507,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "15808:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "15812:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "15808:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15800:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Player_$317_storage",
																			"typeString": "struct LP.Player storage ref"
																		}
																	},
																	"id": 1510,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "15820:12:4",
																	"memberName": "energyFactor",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 307,
																	"src": "15800:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15836:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "15800:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1513,
															"nodeType": "ExpressionStatement",
															"src": "15800:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1525,
																"name": "RiseClaimMap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "15962:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bool_$5_storage_$",
																	"typeString": "mapping(address => bool[5] storage ref)"
																}
															},
															"id": 1531,
															"indexExpression": {
																"expression": {
																	"id": 1526,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "15975:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15979:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "15975:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15962:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bool_$5_storage",
																"typeString": "bool[5] storage ref"
															}
														},
														"id": 1532,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1528,
																"name": "_orderPosition",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "15987:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16002:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "15987:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15962:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16007:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "15962:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1535,
												"nodeType": "ExpressionStatement",
												"src": "15962:49:4"
											}
										]
									},
									"functionSelector": "d9193025",
									"id": 1537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimBonus",
									"nameLocation": "15086:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "_orderPosition",
												"nameLocation": "15102:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "15097:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15097:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15096:21:4"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15125:0:4"
									},
									"scope": 1538,
									"src": "15077:942:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1539,
							"src": "172:15853:4",
							"usedErrors": []
						}
					],
					"src": "32:15994:4"
				},
				"id": 4
			}
		}
	}
}